//////////////////////////////////////////////////////////////////
// (c) Copyright 2003-  by Jeongnim Kim
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//   National Center for Supercomputing Applications &
//   Materials Computation Center
//   University of Illinois, Urbana-Champaign
//   Urbana, IL 61801
//   e-mail: jnkim@ncsa.uiuc.edu
//
// Supported by
//   National Center for Supercomputing Applications, UIUC
//   Materials Computation Center, UIUC
//////////////////////////////////////////////////////////////////
// -*- C++ -*-
#include "QMCWaveFunctions/Fermion/MultiSlaterDeterminantFast.h"
#include "QMCWaveFunctions/Fermion/MultiDiracDeterminantBase.h"
#include "ParticleBase/ParticleAttribOps.h"

namespace qmcplusplus
{

MultiSlaterDeterminantFast::MultiSlaterDeterminantFast(ParticleSet& targetPtcl, MultiDiracDeterminantBase* up, MultiDiracDeterminantBase* dn):
  RatioTimer("MultiSlaterDeterminantFast::ratio"),
  RatioGradTimer("MultiSlaterDeterminantFast::ratioGrad"),
  RatioAllTimer("MultiSlaterDeterminantFast::ratio(all)"),
  Ratio1Timer("MultiSlaterDeterminantFast::detEval_ratio"),
  Ratio1GradTimer("MultiSlaterDeterminantFast::detEval_ratioGrad"),
  Ratio1AllTimer("MultiSlaterDeterminantFast::detEval_ratio(all)"),
  UpdateTimer("MultiSlaterDeterminantFast::updateBuffer"),
  EvaluateTimer("MultiSlaterDeterminantFast::evaluate"),
  AccRejTimer("MultiSlaterDeterminantFast::Accept_Reject")
{
  registerTimers();
  //Optimizable=true;
  Optimizable=true;
  OrbitalName="MultiSlaterDeterminantFast";
  usingCSF=false;
  NP = targetPtcl.getTotalNum();
  nels_up = targetPtcl.last(0)-targetPtcl.first(0);
  nels_dn = targetPtcl.last(1)-targetPtcl.first(1);
  FirstIndex_up=targetPtcl.first(0);
  FirstIndex_dn=targetPtcl.first(1);
  Dets.resize(2);
  Dets[0]=up;
  Dets[1]=dn;
  myG.resize(NP);
  myL.resize(NP);
  myG_temp.resize(NP);
  myL_temp.resize(NP);
  DetID.resize(NP);
  for(int i=0; i<targetPtcl.groups(); ++i)
    for(int j=targetPtcl.first(i); j<targetPtcl.last(i); ++j)
      DetID[j]=i;
  usingBF=false;
  BFTrans=0;
}

OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
{
  MultiDiracDeterminantBase* up_clone = new MultiDiracDeterminantBase(*Dets[0]);
  MultiDiracDeterminantBase* dn_clone = new MultiDiracDeterminantBase(*Dets[1]);
  MultiSlaterDeterminantFast* clone = new MultiSlaterDeterminantFast(tqp,up_clone,dn_clone);
  if(usingBF)
  {
    BackflowTransformation *tr = BFTrans->makeClone(tqp);
    clone->setBF(tr);
  }
  clone->resetTargetParticleSet(tqp);
  clone->C2node_up=C2node_up;
  clone->C2node_dn=C2node_dn;
  clone->Optimizable=Optimizable;
  clone->C=C;
  clone->myVars=myVars;
  clone->usingCSF=usingCSF;
  clone->usingBF=usingBF;
  if (usingCSF)
  {
    clone->CSFcoeff=CSFcoeff;
    clone->CSFexpansion=CSFexpansion;
    clone->DetsPerCSF=DetsPerCSF;
  }
  return clone;
}

MultiSlaterDeterminantFast::~MultiSlaterDeterminantFast() { }

void MultiSlaterDeterminantFast::resetTargetParticleSet(ParticleSet& P)
{
  if(usingBF)
  {
    BFTrans->resetTargetParticleSet(P);
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(BFTrans->QP);
  }
  else
  {
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(P);
  }
}

//  void MultiSlaterDeterminantFast::resize(int n1, int n2)
//  {
//  }

void MultiSlaterDeterminantFast::testMSD(ParticleSet& P, int iat)
{
//     APP_ABORT("Testing disabled for safety");
  app_log() <<"Testing MSDFast. \n";
  int n = nels_up+nels_dn;
  ParticleSet::ParticleGradient_t G(n),G0(n);
  ParticleSet::ParticleLaplacian_t L(n),L0(n);
  ValueType log, log0;
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  /*
       app_log() <<"Testing evaluate(P,G,L). \n";
       cout<<endl <<endl;
       cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;

       for(int i=0; i<n; i++) {
         cout<<i  <<"\n"
             <<"  x: " <<G(i)[0]-G0(i)[0] <<"\n"
             <<"  y: " <<G(i)[1]-G0(i)[1] <<"\n"
             <<"  z: " <<G(i)[2]-G0(i)[2] <<"\n"
             <<"  d2: " <<L(i)-L0(i) <<"\n"
             <<endl;
       }
       cout<<endl <<endl;
       APP_ABORT("end of test 1");
  */
  Walker_t::Buffer_t wbuffer;
  wbuffer.clear();
  log=registerData(P,wbuffer);
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  PosType dr;
  dr[0] = 0.1;
  dr[1]=0.05;
  dr[2] = -0.01;
  PosType newpos(P.makeMove(iat,dr));
  app_log() <<"Testing ratio(P,dG,dL). \n";
  G=0;
  G0=0;
  L=0;
  L0=0;
//     log = msd->ratio(P,iat,G,L);
  log0 = ratio(P,iat,G0,L0);
  cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;
  for(int i=0; i<n; i++)
  {
    cout<<i  <<"\n"
        <<"  x: " <<G(i)[0]-G0(i)[0] <<"  " <<G(i)[0]   <<"\n"
        <<"  y: " <<G(i)[1]-G0(i)[1] <<"  " <<G(i)[1] <<"\n"
        <<"  z: " <<G(i)[2]-G0(i)[2] <<"  " <<G(i)[2] <<"\n"
        <<"  d2: " <<L(i)-L0(i) <<"  " <<L(i) <<"\n"
        <<endl;
  }
  cout<<endl <<endl;
  APP_ABORT("After MultiSlaterDeterminantFast::testMSD()");
}

void MultiSlaterDeterminantFast::updateCoeff(RealType RminusRo){
  // update determinant coeffients with ion position

  // !!! hard-code coefficient interpolation
  RealType myslope[]={
  0,0.0232987041208,0.0459350694446,-0.0104279633978,-0.0238741336042,-0.00117377954368,0.00117377957855,-0.00234768171344,0.00186138143747,0.00186138143747,0.00372269456523,0.00118257681184,0.00118257681184,-0.00115179652368,-0.00115179652368,-0.00149491837486,-0.00184080888056,-0.00184080888056,0.00184080881414,0.00184080881414,-0.00368151856235,-0.00368151856235,-0.00109646156659,-0.00109646156659,0.000858708259718,-0.000858708420458,0.00171739969837,-0.00347842034811,-0.00347842034811,-0.00633387301988,-0.00633387301988,0.00124307425336,0.00124307425336,-0.00299346804473,-0.00299346804473,0.00376848318626,0.00376848318626,0.00558751300968,0.00327965911072,0.00327965911072,0.00207750113688,-0.00103874872107,0.00103874870285,-0.00103874872107,0.00103874870285,-0.00207750115688,0.00207750113688,-0.00207750115688,0.00415503646834,-0.00112292444453,-0.00112292444453,-0.00224572833971,0.0109662256145,-0.0109662256122,-0.0219324586648,0.000661500142079,-0.000661500148526,0.00132297899862,-0.00699467752142,-0.00699467752142,-0.000288862193815,0.000144439019729,-0.000144438985508,0.000144439019729,-0.000144438985508,0.000288862252052,-0.000288862193815,0.000288862252052,-0.00057777669404,9.00422508706e-05,9.00422508706e-05,0.00300526574815,-0.000672293187987,-0.000672293187987,-0.000672293187987,-0.000672293187987,0.000423288788815,0.000423288788815,-0.000519516094708,-0.000519516094708,-0.00103902039398,0.00591101371373,0.0209790692695,0.0209790692695,-0.0102926128584,0.0102926128102,0.0205852256241,-0.00430500519365,-0.00430500519365,0.00588870869792,0.00588870869792,0.00101715540828,0.00101715540828,-0.00588600469668,0.00588600465304,-0.00226010926508,-0.00226010926508,0.00101071559843,-0.00101071558237,-0.00202145244753,0.000271444767288,
  0.00341639181308,0.00341639181308,0.00107445959883,0.00107445959883,-0.0010744595907,-0.0010744595907,0.00214893571796,0.00214893571796,0.00459073101959,0.00302586093647,0.00279404328537,0.00315057348263,-0.00315057347751,-0.00630115870586,-0.000169698469421,-0.001080373926,0.00108037392944,0.00216075247602,-0.00235294808037,0.00235294806974,-0.00470591694695,-0.00146420316376,0.000732105535258,-0.000732105552953,-0.000732105552953,0.000732105535258,-0.00146420316376,-0.00864267931922,0.00117251996967,0.00117251996967,0.00234499837404,-0.0013635843985,-3.45036748084e-06,-3.45036748084e-06,0.00144523894951,0.0008493309311,-0.000849330930881,0.00169864957182,-0.000269712534494,0.000269712530801,-0.00053940852651,-0.000335358855295,-0.000335358855295,-0.000484585373048,0.000484585374653,-0.000969195822052,-0.000456634035097,0.000228320696697,-0.000228320706251,0.000228320696697,-0.000228320706251,0.000456634060488,-0.000456634035097,0.000456634060488,-0.00091327127934,0.00225416033182,0.00187663471031,0.00187663471031,-0.000459803122419,0.000459803199399,0.000919599146094,0.00206662414016,0.00206662414016,0.00413327707559,0.000409657798616,-0.000204830169754,0.000204830169292,-0.000204830169754,0.000204830169292,-0.000409657831475,0.000409657798616,-0.000409657831475,0.000819331130871,1.13724497934e-05,0.00126601709709,0.001563177897,-0.00156317777342,-0.000305065644924,-0.000305065644924,-4.14540341325e-05,2.07252793604e-05,-2.07259386702e-05,-2.07259386702e-05,2.07252793604e-05,-4.14540341325e-05,-0.000803039005619,-0.000803039005619,0.00131350516067,-0.0013135051631,-0.00262701000476,-0.00166148007646,0.00107624444752,0.00107624444752,-0.0010762444553,-0.0010762444553,0.00215249185129,0.00215249185129,0.0029202944561,0.0029202944561,-0.00110800167699,
  -0.00110800167699,0.00197923198832,-0.00197923198222,-0.00395846396841,-0.00148058936044,0.000435874527111,0.000435874527111,0.000871750682719,0.0204864165801,-0.0204864165475,-0.040972997836,-0.000242770789439,0.000242770710639,-0.000485529771956,0.000530366045829,0.000530366045829,-0.000530366066456,-0.000530366066456,0.00106073837305,0.00106073837305,-0.0013127369275,0.00131273692873,0.00262547657847,-0.000358156305125,0.000287244250775,0.000287244250775,0.000287244250775,0.000287244250775,0.00300839252511,0.00300839252511,-0.000762485420149,-0.000762485420149,0.000762485415366,0.000762485415366,-0.00152495536647,-0.00152495536647,-0.00232970829533,-0.00232970829533,-0.0520276630796,0.05202766305,0.021950983107,0.000335576490129,-0.00033557640236,-0.000671141608417,0.0011940987057,-0.00059704508727,0.000597045088443,0.000597045088443,-0.00059704508727,0.0011940987057,0.00120491431078,0.00120491431078,-0.000294202126563,0.000294202253921,0.000588393157079,-0.0236193869725,0.0236193869734,0.000659123117724,0.000781817483134,-0.000967915894239,0.000967915893867,-0.00193584776438,0.00113565981336,-0.00141188454237,-0.00141188454237,0.00105855725174,0.00105855725174,-0.0010585572661,-0.0010585572661,0.00211709954662,0.00211709954662,0.00122968174455,-0.00122968175634,-0.00245936304464,0.000164647911985,0.000164647911985,-0.000164647955781,-0.000164647955781,0.000329324802124,0.000329324802124,0.00237800735395,0.00237800735395,-3.77139107634e-05,3.77138061981e-05,-7.54361690489e-05,-0.00572648291015,-0.00124297748581,-0.00124297748581,-0.0017709100079,-0.00109307126095,0.00109307125597,-0.00218614624627,0.000938775196165,0.000938775196165,-0.000938775189642,-0.000938775189642,0.00187755049676,0.00187755049676,-4.58808885113e-05,-0.00107532906553,
  -0.00107532906553,-0.00101521233417,-0.00101521233417,-0.00203044441344,8.90460923876e-05,-8.90461076721e-05,0.000178080747738,-0.00103398054874,-0.00103398054874,0.00103398054858,0.00103398054858,-0.00206796077768,-0.00206796077768,0.00135381689056,-0.00067690881052,0.000676908809163,0.000676908809163,-0.00067690881052,0.00135381689056,-0.001644248565,-0.001644248565,-0.00298729643104,-0.00521198917441,0.00521198918283,0.0104239709714,-0.000190223436123,0.000190223449359,-0.000380447221172,0.000620897463178,0.000310449950762,-0.000310449951298,0.000310449950762,-0.000310449951298,-0.000620897464421,-0.000620897464421,0.000620897463178,0.00124179656679,-1.30190784819e-07,1.29531943394e-07,-2.59508211586e-07,-0.00187162050606,-0.00187162050606,-0.0001049405889,-0.0001049405889,-0.0001049405889,-0.0001049405889,-4.68946628879e-05,-4.68946628879e-05,-4.68946628879e-05,-4.68946628879e-05,0.00201708492415,0.00201708492415,-0.00201708493162,-0.00201708493162,0.00403416986578,0.00403416986578,0.00031308995201,0.00031308995201,-0.00247317595443,0.00208908349003,-0.00208908348649,-0.00417817809972,0.00163264029565,-0.000470809548577,-0.000470809548577,-0.000241564937522,-0.000241564937522,-0.00135078157476,-0.00135078157476,-0.00270156942713,0.000247839689202,-0.000247839696205,0.000495667666074,0.000786061742166,-0.000236456408411,0.000236456441651,-0.000472924619885,-0.000210492226309,0.000210492252613,0.000420989526173,0.000224571957165,0.00170751291021,0.00170751291021,0.00341504114627,0.00150529609103,-0.00150529608629,-0.00301058367807,0.00227431255455,3.56804141545e-05,-1.78423433526e-05,1.78422024883e-05,1.78422024883e-05,-1.78423433526e-05,3.56804141545e-05,3.68229129878e-05,-3.68228174513e-05,7.36611472265e-05,-0.000728311725164,-0.000728311725164,0.0748293234646,
  -0.0748293234249,0.00259595221884,0.00259595221884,0.00259595221884,0.00259595221884,-0.00101270513564,-0.00101270513564,0.00156706004904,0.00156706004904,-4.3894130016e-05,4.38940312174e-05,-8.77762524099e-05,0.000855375756831,0.000855375756831,0.000855375756831,0.000855375756831,0.00223101486087,-0.00223101485683,-0.00446204157263,0.00113778270156,0.000568895832081,-0.000568895834197,0.000568895832081,-0.000568895834197,-0.00113778271384,-0.00113778271384,0.00113778270156,0.00227558055023,-0.00146798326033,-0.00146798326033,-0.000604880523665,-0.000604880523665,7.52044912221e-05,7.52044912221e-05,-7.52044207619e-05,-7.52044207619e-05,0.000150412245345,0.000150412245345,0.000411874920926,-0.0004118749213,0.000823764735662,-0.00504633766967,-0.00169465357924,-0.00169465357924,-0.00169465357924,-0.00169465357924,0.000986791065129,-0.000134046289786,0.00139006478782,0.00139006478782,0.00139006478782,0.00139006478782,0.000250270221859,-0.00195582117701,-0.00195582117701,-0.0006327058912,0.000731730892793,0.000731730892793,0.000150312203665,0.000150312203665,0.000150312203665,0.000150312203665,-0.0208482266086,0.0208482266203,-0.000162166377648,-0.000162166377648,0.00583554116698,-0.00583554116645,-0.0116710945967,-0.000463928575582,-0.00023196678379,0.000231966803933,-0.00023196678379,0.000231966803933,0.000463928568845,0.000463928568845,-0.000463928575582,-0.000927867219588,0.000282178844204,0.000282178844204,-0.000787746762704,-0.000787746762704,0.000310737093484,-0.00276470220073,-0.00276470220073,-0.00107764688148,-0.00107764688148,0.00133158454699,0.00133158454699,-0.00179501750221,-0.00179501750221,-0.00359003874497,0.000104746572915,0.000104746572915,0.000104746572915,0.000104746572915,-0.000343174004165,-0.000343174004165,-0.00068634211737,-0.00087122642848,
  -0.000435612653435,0.000435612655386,-0.000435612653435,0.000435612655386,0.000871226417005,0.000871226417005,-0.00087122642848,-0.00174244592251,-0.000428321887556,-0.000428321887556,1.47904485435e-05,1.47904485435e-05,-0.000282481014192,0.000282481097966,-0.00056495737936,-0.00169750776572,-0.000109540374161,0.000109540351994,-0.000219078589104,-0.000482750213169,-0.000482750213169,0.00110767243021,0.00110767243021,-0.00110767243438,-0.00110767243438,0.00221533071804,0.00221533071804,0.000522194069046,0.000522194069046,0.00104437975681,0.000279170581486,0.000279170581486,-0.00027917058602,-0.00027917058602,0.000558342628244,0.000558342628244,0.00109111388453,0.00109111388453,0.00218222666114,0.00296409641876,0.00296409641876,0.000401004365298,0.000200500668208,-0.000200500670231,0.000200500668208,-0.000200500670231,-0.000401004365834,-0.000401004365834,0.000401004365298,0.000801996501686,0.000532482412212,-0.000532482393418,0.00106496770533,0.000847282201469,-0.00084728220387,-0.00169457974898,0.00146789270002,0.00146789270002,-0.00104840163858,-0.00104840163858,0.00083557476634,-0.000526160178872,-0.000526160178872,-0.00104603530483,-0.00104603530483,-3.90392750083e-05,0.01083061089,-0.0108306108702,0.00141340242527,0.00141340242527,-0.00222434172332,0.00149460469093,0.00149460469093,0.00298922332412,0.000409432691184,0.000409432691184,-0.000248154746291,-0.000248154746291,-0.000701909748733,0.000364660098092,0.000364660098092,-0.00036466009137,-0.00036466009137,0.000729322759803,0.000729322759803,0.000621589029648,-0.000621588994848,-0.00124317529542,-0.000332103373454,-0.000332103373454,-0.00122229281653,-0.00122229281653,0.000290882981047,0.000290882981047,0.00203985723142,0.00203985723142,0.000320734818996,0.000160368860536,-0.000160368845133,0.000160368860536,
  -0.000160368845133,-0.000320734831364,-0.000320734831364,0.000320734818996,0.000641467326285,0.00063247770606,0.00063247770606,-0.00132245733246,0.00132245733437,0.00264491721327,0.000317833732346,0.000317833732346,0.000635673804309,6.38215433829e-05,6.38215433829e-05,-6.38215726061e-05,-6.38215726061e-05,0.000127643175353,0.000127643175353,0.000238100795828,0.000238100795828,0.00105098287853,0.00105098287853,-0.000156347375068,0.000215032044918,-0.000107512344238,0.000107512352846,-0.000107512344238,0.000107512352846,-0.000215032032869,0.000215032044918,-0.000215032032869,0.000430051239086,0.000220242489326,0.000220242489326,-0.000220242490096,-0.000220242490096,0.000440485243612,0.000440485243612,0.000867284538933,0.000867284538933,-0.000867284540304,0.000867284538933,-0.000867284540304,-0.000867284540304,0.000867284538933,-0.000867284540304,-0.000867284540304,-0.00260185289239,0.000824979612932,-0.00082497957798,-8.60630622651e-05,-8.60630622651e-05,-0.000338272869998,-0.000338272869998,-0.00121352289677,0.000229524658491,-0.000114763339438,0.000114763336543,-0.000114763339438,0.000114763336543,-0.000229524645483,0.000229524658491,-0.000229524645483,0.000459051531074,-0.000584729851837,0.00648318658952,0.00648318658952,-0.00154268505463,-0.00154268505463,0.0002498955904,0.000124948270007,-0.000124948271822,0.000124948270007,-0.000124948271822,-0.00024989558292,-0.00024989558292,0.0002498955904,0.000499791258383,-0.000354537915508,0.000354537907138,-0.000709072729222,-0.00266775653027,-0.00266775653027,-0.000953508122186,-0.0004767536575,0.000476753659627,0.000476753659627,-0.0004767536575,-0.000953508122186,-0.000242411001099,-0.000242411001099,7.9834057653e-05,7.9834057653e-05,0.00014565795062,0.00014565795062,0.00572912850172,-0.00572912847035,-0.0114582647343,-0.00163238056667,
  -0.00163238056667,5.47208100439e-05,5.47208100439e-05,0.000328007490568,0.000328007490568,0.000939613629626,-0.000546418475527,-0.000546418475527,0.000546418471698,0.000546418471698,-0.00109283822699,-0.00109283822699,-0.000178521631044,-0.000178521631044,-0.00111073305454,-0.00111073305454,-0.000334712194557,-0.000334712194557,0.000135330230444,0.000135330230444,-0.00191373376631,-0.00191373376631,-0.000994881115639,-0.000994881115639,0.00438633388235,0.00438633388235,0.00242160582126,0.00242160582126,0.00484322014414,-0.000182442028965,-0.00207494204638,-0.00207494204638,-0.000201830683575,-0.000201830683575,0.00665841600551,0.00665841600551,-0.00123846042021,-0.00123846042021,0.000673885216136,-0.000673885233655,0.000673885216136,-0.000673885233655,7.31459411735e-05,-7.31459504457e-05,-0.000146293148865,0.000707796276053,0.000707796276053,0.00197815341924,0.00197815341924,-0.00296917842621,-0.00296917842621,-0.000628600088877,0.000628600080309,-0.0012572084752,0.000604757330172,0.000604757330172,0.00063014986263,0.00063014986263,-0.000556047517632,0.000556047502895,0.00111208895989,-0.000440407199849,-0.000440407199849,-8.83033536434e-05,-8.83033536434e-05,0.000569522037556,-0.0024247230406,-0.0024247230406,-0.000304882234735,0.000304882232276,-0.00060976414674,-9.50401249222e-05,9.50401085205e-05,0.000190077799566,0.000151726639439,-0.000151726612077,0.000303453709538,-0.000370813229979,0.000370813226088,0.000741626891352,-0.000347753527763,0.000173876854063,-0.00017387685278,0.000173876854063,-0.00017387685278,0.000347753537014,-0.000347753527763,0.000347753537014,-0.000695497210844,0.000291936709986,0.000291936709986,-8.23814148237e-05,-8.23814148237e-05,0.00128308104385,-0.00128308104376,-0.0025661735754,-0.0284671849494,0.02846718501,-0.000170854523485,-0.000170854523485,
  0.00126445927256,-0.00126445921953,-0.00252891112134,0.00131907580679,0.00131907580679,-0.00149765360354,-0.00149765360354,0.000173955922034,0.000173955922034,-5.31397606603e-05,5.31397515199e-05,0.000106279661876,0.00123262834354,0.00123262834354,-5.06927650292e-05,5.06927385245e-05,-0.000101378478776,2.81358124048e-05,-1.40685429742e-05,1.40685550154e-05,-1.40685429742e-05,1.40685550154e-05,-2.81357786452e-05,2.81358124048e-05,-2.81357786452e-05,5.6274199469e-05,0.000177804249967,-0.000177804248789,-0.000355606853148,-0.000109667716057,-0.000109667716057,-6.14735402513e-05,-6.14735402513e-05,6.14735550325e-05,6.14735550325e-05,-0.000122948258802,-0.000122948258802,6.80873121082e-05,-6.80872706311e-05,0.000136185402978,0.0010696469196,0.0010696469196,0.00213930240277,-6.43503053543e-05,-6.43503053543e-05,0.000639479609516,0.000639479609516,0.00142347317149,0.00142347317149,0.00232809718584,0.00232809718584,0.000280864349946,0.00014043243456,-0.000140432435324,0.00014043243456,-0.000140432435324,-0.000280864350185,-0.000280864350185,0.000280864349946,0.000561728742974,0.0056179591394,0.0056179591394,0.000124160966746,0.000124160966746,-0.000368485242078,-0.000368485242078,-0.000276411456256,-0.000276411456256,-0.000308101038383,-0.000308101038383,0.000308101036297,0.000308101036297,-0.000616200941454,-0.000616200941454,0.00027317350267,0.00027317350267,-0.000273173501011,-0.000273173501011,0.000546346901423,0.000546346901423,-0.00355409028707,0.000206726085259,0.000206726085259,0.000206726085259,0.000206726085259,-0.000153533567961,0.00015353357301,-0.000307065224044,-0.000846506524782,-0.000423254642006,0.000423254648844,0.000423254648844,-0.000423254642006,-0.000846506524782,-0.000374244296006,-0.000374244296006,-0.00150500628489,-0.00150500628489,0.00046954923858,0.00046954923858,
  0.000183351910284,9.16759543965e-05,-9.16759522021e-05,9.16759543965e-05,-9.16759522021e-05,-0.000183351906931,-0.000183351906931,0.000183351910284,0.000366711403494,-8.96874278538e-05,-8.96874278538e-05,0.00146584351216,-0.000773688799591,3.42758111573e-05,3.42758111573e-05,-3.4275810552e-05,-3.4275810552e-05,6.85521502963e-05,6.85521502963e-05,8.79583236446e-05,8.79583236446e-05,0.00145045375514,0.00145045375514,-0.00088959725744,-0.00088959725744,-0.000302527311701,0.000151264269205,-0.000151264279039,0.000151264269205,-0.000151264279039,0.000302527326831,0.000302527326831,-0.000302527311701,0.000605056232943,0.000232027903931,-0.000232027895346,0.000464048543133,0.000184601940713,9.23012201349e-05,-9.23012215655e-05,9.23012201349e-05,-9.23012215655e-05,-0.000184601928033,-0.000184601928033,0.000184601940713,0.00036920511317,0.000116518769063,5.82588483618e-05,-5.82588561148e-05,-5.82588561148e-05,5.82588483618e-05,0.000116518769063,-0.000912075608919,-0.000912075608919,-0.00182416673741,0.000338710566055,-0.000338710551891,0.000677420045994,0.000171108878746,0.000171108878746,0.000342211965469,-0.000281337840889,0.000661080317496,0.000661080317496,-0.0021481548936,-0.0021481548936,-0.00429632258684,0.000505781003139,0.000505781003139,6.09344641949e-05,6.09344641949e-05,0.000734903928423,-0.000734903916281,0.000385555229431,0.000385555229431,0.000289873721496,0.000289873721496,0.000289873721496,0.000289873721496,-0.00025026264973,-0.00025026264973,-0.000972011679078,-0.000972011679078,0.000233867350891,0.000233867350891,-0.000565114164282,-0.000302435151281,-0.000302435151281,-0.000604873805449,-1.36560051548e-05,1.36561667339e-05,-2.73182103495e-05,0.000519543794635,0.000519543794635,-2.93400720662e-05,-1.46700750975e-05,1.46700847936e-05,-1.46700750975e-05,1.46700847936e-05,2.93400539173e-05,
  2.93400539173e-05,-2.93400720662e-05,-5.86793323968e-05,0.000119482499634,0.000119482499634,-0.000935761104806,-0.000935761104806,-0.000393192443264,-0.000393192443264,-0.000393192443264,-0.000393192443264,7.72346563094e-05,-7.72346676719e-05,0.000154467899442,-1.26003516798e-05,-1.26003516798e-05,1.26004566786e-05,1.26004566786e-05,0.00100886058492,-0.00100886057859,0.00201773534601,7.16764837621e-05,7.16764837621e-05,0.000143353002811,-0.000968795620534,-0.000484397861805,0.00048439785573,0.00048439785573,-0.000484397861805,-0.000968795620534,0.000162049812821,-0.000162049794801,0.000162049812821,-0.000162049794801,0.000324098550556,-0.000324098539459,-0.00166719834403,0.00166719834396,-0.00333441299121,0.00032028927628,0.00032028927628,-0.000640064450965,-0.000320033207504,0.000320033216543,-0.000320033207504,0.000320033216543,0.000640064443763,0.000640064443763,-0.000640064450965,-0.00128012293357,0.000247920301284,0.000123959978612,-0.000123959977528,-0.000123959977528,0.000123959978612,0.000247920301284,-0.000247920303238,0.000247920301284,0.000495842108109,-0.00200718804715,-0.00200718804715,0.00177029161167,-0.00177029160165,-0.00354056721278,-5.4820605243e-05,5.48206154002e-05,0.000109642246395,-2.57470388062e-05,-2.57470388062e-05,2.57469530024e-05,2.57469530024e-05,-5.14957983191e-05,-5.14957983191e-05,0.00121562869906,0.00121562869906,0.00121562869906,0.00121562869906,-4.14385486894e-05,-4.14385486894e-05,-0.000796210015478,0.000796210020931,0.00159242418535,0.00281561929963,-0.00281561931092,-0.00563123865886,-0.000152436736416,0.000152436736818,0.000304873876672,0.000873093445483,8.71279877769e-05,8.71279877769e-05,-8.71279969692e-05,-8.71279969692e-05,0.000174256151687,0.000174256151687,-0.00413072460259,-0.00413072460259,-3.68060888724e-05,3.68061901105e-05,-7.36075967035e-05,
  0.000225025299348,-0.000112512787152,0.000112512780697,-0.000112512787152,0.000112512780697,-0.000225025323224,-0.000225025323224,0.000225025299348,-0.000450055597954,-0.000111322985997,-0.000111322985997,0.00011132299426,0.00011132299426,-0.000222646407775,-0.000222646407775,-1.10292343877e-05,-1.10292343877e-05,0.000298266717393,0.000354956040817,0.000354956040817,0.00274441229341,0.00274441229341,0.000116315748293,5.81572548454e-05,-5.81572561005e-05,5.81572548454e-05,-5.81572561005e-05,-0.000116315729917,-0.000116315729917,0.000116315748293,0.000232632359101,0.000115717850495,0.000115717850495,0.000131172616354,0.000131172616354,-0.000139744290748,0.000139744267906,-0.000279496898907,-7.99525761808e-05,-3.99768970335e-05,3.99768897449e-05,-3.99768970335e-05,3.99768897449e-05,7.99525625827e-05,7.99525625827e-05,-7.99525761808e-05,-0.00015990270051,0.000251036491406,-0.000251036484829,-0.000502073824397,-0.00020155110121,-0.000336717699023,-0.000336717699023,0.000336717696523,0.000336717696523,-0.000673434811461,-0.000673434811461,-0.00135800693164,-0.00135800693164,-0.000177088152352,0.000177088103176,-0.000354180672696,7.24891878974e-05,-0.000211406657106,-0.000211406657106,0.000290618706857,-0.00074302129301,-0.00074302129301,0.000153257797952,-0.000153257791776,-0.000306515570838,0.000718208558026,-5.08013716067e-05,-5.08013716067e-05,-0.000156991473919,-0.000156991473919,-0.000287322100282,-0.000287322100282,-0.000287322100282,-0.000287322100282,-7.75689065539e-05,-7.75689065539e-05,7.75689053911e-05,7.75689053911e-05,-0.00015513892356,-0.00015513892356,-0.00154061862069,-0.00154061862069,0.00119799812874,-0.00119799813053,-0.0023960082998,0.000504243891663,-0.00025212061592,0.000252120610677,-0.00025212061592,0.000252120610677,-0.000504243889001,0.000253116954898,-0.000253116953624,0.000424463661634,
  0.000424463661634,0.000848925555396,0.0016987270907,0.0016987270907,-0.000947468789683,-0.000947468789683,0.000900360935584,0.000900360935584,-3.30101282014e-05,-3.30101282014e-05,3.30101598853e-05,3.30101598853e-05,-6.60232389045e-05,-6.60232389045e-05,0.000382576068238,-0.000191288755933,0.000191288741923,-0.000191288755933,0.000191288741923,-0.000382576082248,0.000382576068238,-0.000382576082248,0.000765152734204,0.000767152453703,0.000767152453703,-3.41430693476e-05,3.41430945695e-05,-6.82868078109e-05,-0.000244234866742,0.000244234869414,-0.000244234866742,0.000244234869414,-0.000488470471807,0.000488470478685,-0.00102408998707,-0.00102408998707,-0.00258250890308,-0.00258250890308,0.000340217442578,-0.000340217446118,0.000680437182103,0.000426438237042,0.000426438237042,-0.000272528439239,-0.000272528439239,-0.000545061688742,-0.000139740791044,-6.9870221766e-05,6.98702162783e-05,6.98702162783e-05,-6.9870221766e-05,-0.000139740791044,0.000230195333753,-0.00023019533875,0.000460390785309,-6.29084289075e-05,6.29084500306e-05,0.000125817241713,0.000519691733149,0.000519691733149,0.000128654016518,-0.000128654016449,-0.000128654016449,0.000128654016518,-0.000257306989568,0.000257306989423,0.0011577965623,0.0011577965623,0.0011577965623,0.0011577965623,0.000236247950667,-0.000236247951911,0.000472495956873,5.01831288677e-05,5.01831288677e-05,0.002809569468,0.002809569468,-0.000532656786617,-0.000528196975749,-0.000528196975749,-0.00114545478833,4.71066963772e-06,4.71066963772e-06,-0.000329474703198,-0.000329474703198,0.000329474697491,0.000329474697491,0.000658952227032,0.000658952227032,2.52298200755e-05,2.52298200755e-05,-2.52298168654e-05,-2.52298168654e-05,5.04602723168e-05,5.04602723168e-05,2.73476031544e-05,2.73476031544e-05,-0.000541841566195,-0.000541841566195,-0.000241449939017,
  -0.00042401623327,0.000212008941198,-0.000212008940911,0.000212008941198,-0.000212008940911,0.000424016231436,-0.00042401623327,0.000424016231436,-0.000848026697331,-0.000390426055318,0.000390426053013,-0.000780862450567,0.000172009245432,0.000172009245432,0.000636178424293,0.000636178424293,-3.32089409793e-05,3.32089092906e-05,-6.64203969258e-05,-2.42659053313e-05,-1.21329640707e-05,1.21329576612e-05,1.21329576612e-05,-1.21329640707e-05,-2.42659053313e-05,0.00647935813089,-0.00647935812974,-0.0129587380103,-0.000135842520136,-6.79208302597e-05,6.79208305654e-05,-6.79208302597e-05,6.79208305654e-05,0.000135842513631,0.000135842513631,-0.000135842520136,-0.000271684809459,-0.000566149902148,-0.000283073481669,0.000283073486002,0.000283073486002,-0.000283073481669,-0.000566149902148,0.00173039165758,0.00173039165758,-0.000163202642917,-0.000163202642917,0.000299819456203,-0.000299819450931,0.000299819456203,-0.000299819450931,-0.000232778343006,-0.000232778343006,0.000232778310277,0.000232778310277,-0.000465556382426,-0.000465556382426,0.00149443004273,0.00149443004273,-0.00130866631652,0.000260166961595,-0.000260166960212,0.000520335571494,-0.000303136868817,0.00030313686568,0.000606278843757,0.000637190956637,0.000637190956637,-0.000912066957171,0.0009120669544,-0.00182413630956,-2.00579865162e-07,-2.00579865162e-07,0.000368743497473,-0.000184373132761,0.000184373132006,-0.000184373132761,0.000184373132006,-0.000368743498426,-0.000368743498426,0.000368743497473,-0.000737490933177,0.00144345880465,-0.0014434587934,-0.0014434587934,0.00144345880465,2.90401215902e-05,-2.9040062469e-05,-5.80768703379e-05,0.000742104535262,0.000742104535262,-0.000335595440146,-0.000335595440146,-0.000671184279473,0.000154565824319,0.000154565824319,0.000334849671778,0.000250067686582,0.0019102408358,-0.00027919621002,
  -0.00027919621002,0.000279196212343,0.000279196212343,0.000558392522543,0.000558392522543,0.000311083323534,-0.00031108332257,0.000622166391902,-0.00132949356036,-0.00132949356036,-0.00132949356036,-0.00132949356036,0.00204607915736,0.00204607915736,1.96970307121e-05,1.96970307121e-05,1.96970307121e-05,1.96970307121e-05,3.93939227591e-05,3.93939227591e-05,3.2317725191e-05,-3.23177029298e-05,6.46316290154e-05,0.000100422575569,-0.000100422570778,-0.000200845852698,0.000241981675453,0.000120991667174,-0.000120991666212,0.000120991667174,-0.000120991666212,-0.00024198167038,0.000241981675453,-0.00024198167038,-0.000483967726695,-0.000172869650493,-0.000172869650493,-8.18756276312e-05,4.09389040596e-05,-4.09389739944e-05,4.09389040596e-05,-4.09389739944e-05,8.18755260511e-05,-8.18756276312e-05,8.18755260511e-05,-0.000163749505446,-0.000353613765062,-0.000353613765062,0.000353613753624,0.000353613753624,-0.000707226127743,-0.000707226127743,0.000445787859001,3.66945834624e-05,1.83480505682e-05,-1.83481533653e-05,-1.83481533653e-05,1.83480505682e-05,3.66945834624e-05,0.00220455608916,0.00220455608916,2.21377114007e-05,2.21377114007e-05,4.42780821555e-05,0.000467014198156,-0.000148880204661,0.000148880212366,-0.0002977657162,0.000155786779637,0.000155786779637,-0.000142260845215,0.000586405261032,0.000586405261032,-0.00162981132522,-0.00162981132522,-0.000586476453979,-0.000334957820787,-0.000167479520294,0.000167479507412,0.000167479507412,-0.000167479520294,-0.000334957820787,7.76540999905e-05,0.000640187945029,0.000640187945029,0.0012803787722,-0.00014483370498,-0.00014483370498,-0.000289666385732,-2.79744581936e-05,2.79744523414e-05,-5.59500845516e-05,3.37430711684e-05,-3.37429476693e-05,6.74774104807e-05,0.00031612848032,-0.000316128479368,0.000632257012128,-0.000151653930175,-0.000151653930175,
  -0.000294067381006,-0.000147033801856,0.000147033801726,-0.000147033801856,0.000147033801726,0.000294067380946,0.000294067380946,-0.000294067381006,-0.000588136278163,0.000262324828331,0.000262324828331,-0.00109103984382,0.00109103981757,-0.00218207961767,-0.000388598813674,-0.000388598813674,-0.000690016850739,-0.000690016850739,0.000690016848355,0.000690016848355,-0.00138003222521,-0.00138003222521,0.0016629003615,0.0016629003615,0.000626216317326,-0.000313108955951,0.000313108957574,-0.000313108955951,0.000313108957574,-0.00062621630995,-0.00062621630995,0.000626216317326,-0.00125243668684,2.98998321701e-05,1.49502956896e-05,-1.49502877448e-05,1.49502956896e-05,-1.49502877448e-05,-2.9899796824e-05,-2.9899796824e-05,2.98998321701e-05,5.98001532695e-05,-7.87430937317e-05,-7.87430937317e-05,7.87431077745e-05,7.87431077745e-05,-0.000157484912057,-0.000157484912057,8.07833837865e-05,-8.07833888773e-05,0.000161567622771,-0.00033902224754,0.000339022245707,-0.00033902224754,0.000339022245707,0.000113217452591,0.000113217452591,-8.19600357508e-05,-8.19600357508e-05,0.000353704792957,0.000353704792957,-7.39327574117e-05,-3.6966322932e-05,3.69663305645e-05,-3.6966322932e-05,3.69663305645e-05,7.39327547203e-05,7.39327547203e-05,-7.39327574117e-05,-0.000147864198777,0.000771181135414,0.000819893464396,-0.00081989346203,0.00163977199045,0.000980198824152,-0.000173201597001,0.000173201587979,0.000346400988541,-0.000535446688347,0.000603119333435,0.0003015598655,-0.000301559864047,-0.000301559864047,0.0003015598655,0.000603119333435,-0.000128249483273,-0.000128249483273,-0.000256499449484,8.74030579998e-05,8.74030579998e-05,0.000218229371333,-0.000218229364398,0.000436459662401,0.000105877109962,-5.29385828312e-05,5.2938583704e-05,-5.29385828312e-05,5.2938583704e-05,-0.000105877108599,0.000105877109962,
  -0.000105877108599,0.000211753852887,-0.000691687384891,-0.000691687384891,9.44179064586e-05,9.44179064586e-05,-4.3435708178e-05,4.34356580255e-05,-4.3435708178e-05,4.34356580255e-05,-4.3435708178e-05,4.34356580255e-05,-4.3435708178e-05,4.34356580255e-05,-4.3435708178e-05,-0.000130308858364,0.000849291543287,0.000849291543287,0.000849291543287,0.000849291543287,0.000825799516088,0.000300381440221,-0.000345276664872,-0.000345276664872,-0.000882393178544,0.000882393155224,-0.00176478353969,-0.00104265802287,-0.00104265802287,4.94710475329e-05,4.94710475329e-05,-4.94710528612e-05,-4.94710528612e-05,9.89423116514e-05,9.89423116514e-05,0.000224394603295,0.000112198088424,-0.000112198095679,0.000112198088424,-0.000112198095679,-0.000224394591749,-0.000224394591749,0.000224394603295,0.000448791287337,0.000134430377759,6.7215452374e-05,-6.72154448148e-05,6.7215452374e-05,-6.72154448148e-05,-0.000134430376863,-0.000134430376863,0.000134430377759,0.000268861536061,0.0017979124567,0.0017979124567,0.000379934318114,0.000379934318114,-0.000379934319859,-0.000379934319859,-0.000759866189766,-0.000759866189766,-0.000409730389853,-0.000409730389853,-8.0656025507e-06,-8.0656025507e-06,8.06566614701e-06,8.06566614701e-06,-1.61313052707e-05,-1.61313052707e-05,4.9458850324e-05,4.9458850324e-05,0.000529815864587,0.001124149249,0.001124149249,-0.00058088748849,-0.00058088748849,3.6238848111e-05,-3.62389004962e-05,7.24781319534e-05,0.000227758370138,-0.000113879184261,0.000113879186164,0.000113879186164,-0.000113879184261,0.000227758370138,-4.71902051829e-05,-4.71902051829e-05,7.38794129654e-05,-7.38792925122e-05,-0.000147754875989,0.000131922248909,0.000131922248909,0.000171685432504,-8.58428513201e-05,8.58428498719e-05,-8.58428513201e-05,8.58428498719e-05,-0.000171685429701,-0.000171685429701,0.000171685432504,
  -0.000343370738363,0.000344407696422,0.000344407696422,0.000446739619047,0.000446739619047,-8.07361457414e-05,3.08347765826e-05,3.08347765826e-05,-3.08347855587e-05,-3.08347855587e-05,-6.1672761371e-05,-6.1672761371e-05,7.39887010423e-05,7.39887010423e-05,-0.000790423573314,-0.000790423573314,-0.000507140398478,-0.000507140398478,0.000374507351988,0.000187253706629,-0.000187253710882,0.000187253706629,-0.000187253710882,-0.000374507341001,-0.000374507341001,0.000374507351988,0.000749009033425,-0.00290906975645,-0.00290906975645,-0.00290906975645,-0.00290906975645,-0.000421520218947,-0.000421520218947,-0.000421520218947,-0.000421520218947,0.000539382801388,0.000539382801388,8.17519507888e-05,8.17519507888e-05,0.000723773619292,-0.000723773629677,-0.00144754650422,-0.00313243250387,-0.00313243250387,0.00017344763554,0.00017344763554,0.000639388350222,0.000639388350222,0.000727831747307,0.000727831747307,0.000109671276824,0.000109671276824,0.000738837694038,-0.000369418313846,0.000369418323833,0.000369418323833,-0.000369418313846,0.000738837694038,0.000279153749071,0.000279153749071,-0.000279153750217,-0.000279153750217,0.000558308301455,0.000558308301455,-9.52465777099e-05,-9.52465777099e-05,0.000662754955294,0.000662754955294,0.00132550400676,0.000376469458206,0.000419813465529,0.000209907417564,-0.000209907421347,0.000209907417564,-0.000209907421347,-0.000419813463578,-0.000419813463578,0.000419813465529,0.000839633144469,0.000622133521815,0.000622133521815,0.000122119673809,0.000321656907009,0.000321656907009,0.000643313922252,5.97820446218e-05,-5.97820494242e-05,0.000119564401329,-0.000879463391992,-0.000879463391992,-0.000189352088926,-0.000189352088926,0.000313771025322,0.000313771025322,-0.000137940461556,-0.000137940461556,-0.000137940461556,-0.000137940461556,0.000211772246679,0.000211772246679,
  2.95599742928e-06,2.95599742928e-06,-2.95665627115e-06,-2.95665627115e-06,5.91275110606e-06,5.91275110606e-06,0.000161966642696,-8.09831925624e-05,8.09831900914e-05,8.09831900914e-05,-8.09831925624e-05,0.000161966642696,0.00108281496824,-0.000374373740196,0.000187184072935,0.000187184072935,-0.000187184076668,-0.000187184076668,0.000374373752932,0.000710841946758,0.000710841946758,-0.000710841942037,-0.000710841942037,0.00142168112161,0.00142168112161,-0.000891035177173,-0.000891035177173,0.000172935059661,-0.0001729350812,0.000345871620799,-0.000389524700992,-0.000389524700992,-0.000779049021173,0.00251077879793,0.00251077879793,-0.00126288415996,-0.00126288415996,-0.00334239694761,-0.000401691137131,-0.000401691137131,-4.56795043e-05,-4.56795043e-05,-0.000176824830934,-0.000176824830934,-0.000176824830934,-0.000176824830934,-0.000353650223719,-0.000353650223719,-0.000164737248987,0.000164737251664,0.000329471613057,-0.000541417542782,-9.17803959617e-05,-9.17803959617e-05,0.0002577251874,0.0002577251874,0.000515449713679,-0.000286388620774,-0.000286388620774,-0.000286388620774,-0.000286388620774,-7.09871733409e-05,-3.54936428162e-05,3.54936432349e-05,3.54936432349e-05,-3.54936428162e-05,-7.09871733409e-05,-0.0018056086987,0.00180560869335,-0.000171103537641,-0.000171103537641,-7.48428465994e-05,-3.74215001198e-05,3.74214991954e-05,-3.74215001198e-05,3.74214991954e-05,7.48428503762e-05,7.48428503762e-05,-7.48428465994e-05,-0.000149685217376,-0.000587046987851,-0.000587046987851,0.00025999267391,0.00025999267391,-5.40870216384e-05,5.40870243062e-05,-0.000108172319745,-9.1680507753e-05,9.16805171195e-05,-0.000183360843651,-0.000128927984625,0.000128928064904,-0.000257855130264,0.00012825678742,-0.000128256761184,-0.000256509944093,0.000229713073402,-0.000229713069264,0.000229713073402,-0.000229713069264,
  0.000459426486279,-0.00045942649254,0.000260416019469,-0.000260416017745,-0.000520832911644,0.000136358213093,6.81795824891e-05,-6.81795831181e-05,6.81795824891e-05,-6.81795831181e-05,-0.000136358214602,-0.000136358214602,0.000136358213093,0.000272716982883,-0.000252168588635,0.000126084800897,-0.000126084801609,0.000126084800897,-0.000126084801609,0.000252168592054,-0.000252168588635,0.000252168592054,-0.000504338102325,0.000873528697026,-0.000873528696428,-0.000873528696428,0.000873528697026,-0.00158342657231,-0.00158342657231,-9.54941389872e-05,9.54941471922e-05,-0.000190987378192,-3.05038666801e-05,0.000338349506693,-0.000104715646663,0.00010471556248,-0.000209435046522,0.000873327442062,-0.000173853655541,-0.000173853655541,-9.17350895073e-05,3.61614805183e-05,3.61614805183e-05,0.00025333463908,0.00025333463908,0.000939695886549,0.000939695886549,0.00034645946485,-0.000346459456299,0.000692920783153,0.00167764330718,0.00167764330718,-0.000270093837153,0.000270093829197,-0.0005401878351,-9.15550509315e-05,-9.15550509315e-05,0.000787465252213,0.000787465252213,-8.30977122097e-05,-4.15490268174e-05,4.15490246887e-05,-4.15490268174e-05,4.15490246887e-05,8.30977043927e-05,8.30977043927e-05,-8.30977122097e-05,-0.000166195970603,0.000261451087021,-0.00026145112247,-0.000522904958237,-0.00103224886182,0.00103224885115,0.000938231659217,-0.000938231644483,-0.00187646087259,0.000116833729331,-0.000116833725188,0.000233669784502,4.02109165076e-05,4.02109165076e-05,7.65450934833e-05,0.00010402741087,0.00010402741087,-0.000104027405166,-0.000104027405166,0.000208055383668,0.000208055383668,0.000588336039885,-0.000294169001057,0.000294169008347,0.000294169008347,-0.000294169001057,0.000588336039885,-0.000412880538564,0.000412880548943,-0.000252755259102,0.000252755327019,-0.000505511278632,-0.00015092136456,
  0.000150921349023,-0.000301844048914,-8.06149386757e-05,-8.06149386757e-05,-8.06149386757e-05,-8.06149386757e-05,0.000289191577543,0.000289191577543,-0.000343260322565,5.98905283449e-05,5.98905283449e-05,5.98905283449e-05,5.98905283449e-05,8.15993086272e-05,4.07997311159e-05,-4.07997445328e-05,-4.07997445328e-05,4.07997311159e-05,8.15993086272e-05,-0.000311863352617,0.000311863353215,0.000623726442889,0.00152580231837,-0.00152580233669,0.000156379389697,7.81897672253e-05,-7.81897657146e-05,-7.81897657146e-05,7.81897672253e-05,0.000156379389697,-9.47543821554e-05,9.47543777234e-05,-0.000189508981429,0.00155245591321,-0.00155245591841,-0.0031049144228,0.000867549621572,-0.000867549594877,0.000245328926581,0.000245328926581,0.000414548028769,0.000414548028769,-0.000138641477298,6.93204631998e-05,-6.93204414327e-05,6.93204631998e-05,-6.93204414327e-05,0.000138641500705,-0.000339153041587,-0.000339153041587,-1.56599822177e-05,1.56599457077e-05,-3.1322299097e-05,-0.00010810845195,-5.40545191168e-05,5.40545196137e-05,5.40545196137e-05,-5.40545191168e-05,-0.00010810845195,0.000108108451725,-0.00010810845195,-0.000216218025852,0.000551640801016,0.000204547573797,0.000204547573797,-0.000204547574789,-0.000204547574789,0.000204547573797,0.000204547573797,0.000204547573797,-0.000204547574789,-0.000204547574789,0.000613645063105,-8.81410809373e-05,8.8141079824e-05,-0.000176281369419,-0.000144321015142,-0.000110192756952,0.000110192786914,0.000220397444145,-6.87223046483e-05,6.872236784e-05,-0.000137450327278,-0.00126304579258,0.00126304578745,0.00252609297107,0.000951204328558,0.000470502576288,0.000470502576288,-0.000290141232634,-0.000145071974207,0.000145071972193,-0.000145071974207,0.000145071972193,0.000290141233437,0.000290141233437,-0.000290141232634,-0.000580287744184,0.000302640109227,-0.000302640111949,
  0.000605281122506,-8.48937531185e-05,-8.48937531185e-05,-0.000228410978593,-0.000228410978593,-0.000228410978593,-0.000228410978593,-3.17224061579e-05,3.1722588795e-05,-6.34504707107e-05,0.000232302915937,0.000232302915937,0.00033126716751,0.000165634260997,-0.000165634261365,-0.000165634261365,0.000165634260997,0.00033126716751,0.000195226932042,9.76131215153e-05,-9.76131265271e-05,-9.76131265271e-05,9.76131215153e-05,0.000195226932042,-0.000285614397128,0.000285614397485,0.000571228903848,0.00057353100207,-0.000573531000131,0.00114706833847,-0.00092785164471,0.000927851644415,-0.00185570332514,-0.000215634958442,0.000215634945494,-0.000431280089033,-0.000149017278066,-0.000149017278066,0.000149017281897,0.000149017281897,0.00029803721106,0.00029803721106,-0.000101386873469,0.000101386878647,-0.000202772925931,0.000308261719534,0.000154131369202,-0.000154131366929,0.000154131369202,-0.000154131366929,-0.00030826172254,-0.00030826172254,0.000308261719534,0.000616523248458,0.000326645925248,-0.000326645945414,-0.000653298688208,0.000130879303706,-0.00156060571189,-0.00104661334122,0.000523306694566,-0.000523306707475,-0.000523306707475,0.000523306694566,-0.00104661334122,0.000294654721827,0.000294654721827,-0.000294654727769,-0.000294654727769,0.000589308213876,0.000589308213876,0.000420961509403,0.000420961509403,0.000420961509403,0.000420961509403,8.54237425957e-05,-8.54237551897e-05,-8.54237551897e-05,8.54237425957e-05,0.000862147923408,0.000862147923408,0.000535691319822,0.000535691319822,0.00093198138087,0.00093198138087,-6.35008560224e-05,-3.1749738953e-05,3.17497831309e-05,3.17497831309e-05,-3.1749738953e-05,-6.35008560224e-05,4.9537952184e-05,-4.95376827553e-05,-9.90783854243e-05,0.000356652149035,0.000356652149035,0.00017853041965,0.00017853041965,-0.000178530419763,-0.000178530419763,
  0.00035706200643,0.00035706200643,0.000243477373389,-9.67220693084e-05,-4.8361024209e-05,4.83610168233e-05,4.83610168233e-05,-4.8361024209e-05,-9.67220693084e-05,0.000146259220244,-0.000146259205764,-0.000292518479395,0.000216584773641,-0.000216584786418,-0.000433172056623,0.00017466977248,0.00017466977248,-0.00895322085139,0.00895322083829,-0.000513667660139,0.000513667655738,0.00102733642626,1.03637655137e-05,1.03637655137e-05,1.03637655137e-05,1.03637655137e-05,-0.000730672368178,-0.000730672368178,0.000149890643567,-0.000149890719772,0.000299776768918,-0.000245772969497,-0.000210242307322,-0.000210242307322,0.000210242307549,0.000210242307549,0.000420484947487,0.000420484947487,0.00044641934465,0.00044641934465,-0.000404883385587,-0.000404883385587,0.000404883385748,0.000404883385748,-0.000809768795604,-0.000809768795604,-0.000790389160076,-0.000790389160076,-0.00131528099256,-0.000657640031995,0.00065764003085,0.00065764003085,-0.000657640031995,-0.00131528099256,0.000240686090973,0.000240686090973,-0.000239445633739,0.000868779847559,-0.000434389251738,0.000434389251876,0.000434389251876,-0.000434389251738,0.000868779847559,0.00109799326981,-0.000548998852572,0.000548998849665,0.000548998849665,-0.000548998852572,0.00109799326981,0.000673216234778,0.000673216234778,-0.00039656101911,0.000396561022517,-0.000793124380464,0.000159920946276,0.000159920946276,-0.000689229923463,-0.000689229923463,0.000689229925597,0.000689229925597,-0.00137846573961,-0.00137846573961,-0.000171255638217,-0.000171255638217,0.000440106458679,0.000440106458679,-0.000440106459769,-0.000440106459769,0.000880211811516,0.000880211811516,-5.00147525555e-05,5.00147374424e-05,0.000100028812124,-0.000148950251795,7.44755650767e-05,-7.44755650496e-05,7.44755650767e-05,-7.44755650496e-05,0.000148950253082,-0.000148950251795,
  0.000148950253082,-0.000297900959947,4.6647165664e-05,4.6647165664e-05,-4.66473011005e-05,-4.66473011005e-05,9.32955906199e-05,9.32955906199e-05,-0.00101284638432,-0.00101284638432,0.000837149751054,-0.000837149759233,-0.000971473162139,-0.000971473162139,-0.000971473162139,-0.000971473162139,-4.39798474918e-05,-4.39798474918e-05,-8.79599720905e-05,-0.000375422897207,0.000187712524047,-0.00018771249651,0.000187712524047,-0.00018771249651,0.000375422851302,-0.000375422897207,0.000375422851302,-0.000750848018039,7.26886382613e-05,-7.2688634343e-05,0.000145379468918,0.00111372777203,-0.000173624201127,-0.000173624201127,0.000435842836418,-0.000435842837591,0.000871689469861,-0.00054471339251,-0.00054471339251,-0.000390045707507,-0.000390045707507,-6.5962879052e-05,-6.5962879052e-05,-0.00104109487597,-0.00104109487597,4.22901419659e-05,4.22901419659e-05,8.45554665692e-05,-0.000881075495594,-0.000881075495594,0.000200460657669,0.000200460657669,-0.000132194769974,-0.000132194769974,-0.000353249286331,-0.000353249286331,0.000344660496305,0.000344660496305,-0.000418180639748,0.000418180630405,0.000836369370727,3.31658639167e-05,3.31658639167e-05,-3.31658767072e-05,-3.31658767072e-05,6.63314746609e-05,6.63314746609e-05,-0.000120289795087,-0.000120289795087,-0.000641986349662,-0.00051054706801,0.000510547064411,-0.00102109321717,0.000433456127833,0.000433456127833,4.55382234253e-05,2.27689697249e-05,-2.2768987569e-05,2.27689697249e-05,-2.2768987569e-05,-4.553826197e-05,-4.553826197e-05,4.55382234253e-05,9.10756599728e-05,-0.00071335177825,-0.00071335177825,-0.000400250049998,-0.000400250049998,-0.000718351203825,0.000718351211131,0.00143670253139,0.000136431897346,-6.82160469352e-05,6.82160472407e-05,-6.82160469352e-05,6.82160472407e-05,-0.000136431889496,0.000136431897346,-0.000136431889496,0.000272863549321,
  -0.0014015465499,-0.0014015465499,0.000204115817674,0.000204115817674,0.00171892679907,-2.63483838868e-05,-2.63483838868e-05,-0.00663705630182,0.00663705629848,0.0132741282423,-0.000182518552719,9.12371553347e-05,-9.12371981356e-05,-8.47721429185e-05,4.23859860404e-05,-4.23860107649e-05,4.23859860404e-05,-4.23860107649e-05,8.47721815924e-05,-8.47721429185e-05,8.47721815924e-05,-0.000169546856404,-0.000260194783205,-0.000298851041519,-0.000298851041519,-0.000416891954333,-0.000416891954333,0.000416891954785,0.000416891954785,-0.000833782407192,-0.000833782407192,-0.000228863950936,-0.000228863950936,-0.000228863950936,-0.000228863950936,0.000165954821964,0.000165954821964,-1.15393726925e-05,-1.15393726925e-05,0.00171296437878,0.00171296437878,-6.55740305236e-05,-3.27869924537e-05,3.27869929336e-05,3.27869929336e-05,-3.27869924537e-05,-6.55740305236e-05,0.000624651821403,-0.000301418338458,-0.000301418338458,-0.000282358877663,0.000141180020988,-0.000141180017332,0.000141180020988,-0.000141180017332,0.00028235888135,-0.000358920607983,-0.000358920607983,-0.000164746838061,8.23728615218e-05,-8.2372858192e-05,8.23728615218e-05,-8.2372858192e-05,0.000164746833574,0.000164746833574,-0.000164746838061,0.000329493724481,0.000354486741143,0.000354486741143,-0.00303379142333,0.00303379142388,0.00606760353148,-4.16926857285e-05,4.16927378246e-05,-8.33857766717e-05,-4.27941472422e-06,4.27941040291e-06,8.55874492649e-06,-0.000320930723484,-0.000320930723484,0.000320930719037,0.000320930719037,-0.000641861057759,-0.000641861057759,0.000235437892946,0.000235437892946,-0.000235437884226,-0.000235437884226,0.000470874520228,0.000470874520228,0.000116367772857,0.000116367772857,-0.000161460709147,-8.07307608591e-05,8.07307604368e-05,-8.07307608591e-05,8.07307604368e-05,0.000161460711863,0.000161460711863,-0.000161460709147,
  -0.000322921994375,-1.83775650204e-05,-1.83775650204e-05,-1.83775650204e-05,-1.83775650204e-05,-6.02594566051e-05,6.02594534189e-05,-0.000120518343472,-0.000207458831087,-0.000207458831087,-0.000414481715021,-0.000414481715021,0.000414481709288,0.000414481709288,-0.000828962238139,-0.000828962238139,-0.00106216330873,-0.00106216330873,0.00106216331075,0.00106216331075,-0.00212432619909,-0.00212432619909,0.000236715717577,0.000236715717577,0.000416372701977,0.000416372701977,0.000416372701977,0.000416372701977,6.28786480665e-05,6.28786480665e-05,-0.000221004379793,0.000221004380477,-0.000221004379793,0.000221004380477,-0.000442007582129,0.000442007584404,0.000441397079155,0.000441397079155,0.00018639606663,-0.000186396064791,0.000372791936779,-8.56269977955e-05,-8.56269977955e-05,4.17297544238e-05,2.08648378877e-05,-2.08648346415e-05,2.08648378877e-05,-2.08648346415e-05,-4.17297432479e-05,0.00020553360133,-0.000205533600214,0.000411067724331,-0.00108010234264,-0.000128669735834,-0.000128669735834,-0.000236936991208,-0.000236936991208,0.000236936990675,0.000236936990675,-0.000473874000459,-0.000473874000459,-0.000152976380733,-0.000152976380733,-0.000385077537918,0.00019253947875,-0.000192539482469,-0.000192539482469,0.00019253947875,-0.000385077537918,0.000294088487697,0.000294088487697,0.00100282415251,0.00100282415251,-3.62427144162e-05,3.62428857056e-05,0.000241850123739,0.000241850123739,2.09076949125e-05,2.09076949125e-05,9.25693753837e-05,-0.0001411956169,-7.05982601838e-05,7.0598254444e-05,-7.05982601838e-05,7.0598254444e-05,0.000141195640104,-0.0001411956169,0.000141195640104,0.000282388610142,0.000152995292584,-0.000152995240606,-0.000305988273959,0.000509528805335,-0.000254764802928,0.000254764798759,-0.000254764802928,0.000254764798759,-0.000509528802492,-0.000866182345422,-0.000866182345422,
  -0.0006779364263,-0.0006779364263,8.24502987313e-05,4.12253221466e-05,-4.12253260348e-05,4.12253221466e-05,-4.12253260348e-05,-8.24502824744e-05,-8.24502824744e-05,8.24502987313e-05,0.000164900434161,-0.000812020327946,0.00081202033477,0.00162404540675,-0.000481263556471,-0.000481263556471,-0.00124125108615,0.000620625544414,-0.000620625554101,-0.000620625554101,0.000620625544414,-0.00124125108615,0.000728199308404,0.000728199308404,0.000448642725764,0.000448642725764,-0.000264072318938,-0.000264072318938,-0.000264072318938,-0.000264072318938,-2.94061709582e-05,2.94061494104e-05,-5.88134670099e-05,-3.53899306486e-05,-1.76946737472e-05,1.76946344407e-05,-1.76946737472e-05,1.76946344407e-05,3.53899572598e-05,-3.53899306486e-05,3.53899572598e-05,7.07797821459e-05,-0.00111916909422,-0.00111916909422,0.0017635178616,2.44875088719e-05,2.44875088719e-05,2.44875088719e-05,2.44875088719e-05,9.71748943298e-05,9.71748943298e-05,0.00019435117699,8.9772989052e-05,-8.97729885045e-05,-0.000179547539318,0.0003133091494,0.000194400894169,0.000345997194868,-0.000172999176973,0.000172999190635,0.000172999190635,-0.000172999176973,0.000345997194868,0.000151255062655,-6.25227269596e-05,6.25227272751e-05,-0.00012504707579,-8.36760463264e-05,-8.36760463264e-05,0.000142667685239,0.000142667685239,0.000197159815745,-0.000197159814667,0.000197159815745,-0.000197159814667,-0.000262892297345,0.000262892296344,0.000525786250262,-4.72365491118e-05,4.72366303167e-05,-9.44726844809e-05,0.00218795591397,-0.000135039075758,-0.000135039075758,0.000895963063256,0.000230072824763,0.000230072824763,-0.000482188270222,0.000482188240543,0.000964371548072,0.000648059627178,0.000648059627178,0.00119604319994,0.00119604319994,0.000389052666881,-0.000389052667657,-0.000778105201864,-0.0011413374168,0.000570667970696,-0.00057066796188,
  0.000570667970696,-0.00057066796188,0.00114133742225,-0.0011413374168,0.00114133742225,-0.00228266216277,6.17922364811e-05,6.17922364811e-05,-0.00032364718507,-0.00032364718507,0.000265578007548,-0.000132788334843,0.000132788329642,0.000132788329642,-0.000132788334843,0.000265578007548,0.000265578007548,-0.000265578011955,0.00053115680441,0.000278450515477,-0.0002784505234,0.000556900684199,-0.001421515564,0.00142151555999,0.00284304133471,5.47108335539e-05,0.000210441215167,-0.000210441214542,-0.000420883333012,-0.00114113698483,-0.00114113698483,0.00129704075274,-0.000286976885041,-0.000286976885041,6.17242700677e-06,6.17242700677e-06,-6.17233005939e-06,-6.17233005939e-06,-1.2346460425e-05,-1.2346460425e-05,-0.000663690237445,-0.000663690237445,0.000760146825232,0.000760146825232,0.000853411297057,0.000853411297057,-0.000119124102529,-0.000119124102529,0.00107945762623,0.00107945762623,-0.000244633086103,0.00024463306249,-0.000489266254411,0.000758142655092,0.000379071964886,-0.000379071964441,0.000379071964886,-0.000379071964441,-0.000758142657688,-0.000758142657688,0.000758142655092,0.00151628327107,0.00160021444086,0.00160021444086,1.36968464504e-06,6.84598862353e-07,-6.84723410416e-07,-6.84723410416e-07,6.84598862353e-07,1.36968464504e-06,-0.00115375471446,-0.000576877450697,-0.000576877450697,0.000576877449885,0.000576877449885,0.00115375470895,0.00115375470895,0.00115375470895,0.00230750921552,0.000291845927835,-0.000145923270012,0.0001459232706,0.0001459232706,-0.000145923270012,0.000291845927835,0.000867460899875,0.000867460899875,-0.000176993733684,0.00017699371882,-0.000353992444703,-0.000156640826112,-0.000156640826112,-0.000527284498427,5.11717012964e-06,-5.11741777687e-06,1.02348603893e-05,-0.000649135201025,-0.000649135201025,-0.000366697329605,-0.000366697329605,
  0.000624554704005,0.000624554704005,-0.000624554710689,-0.000624554710689,0.00124911346857,0.00124911346857,-0.00316889524357,9.13377335818e-05,-9.13377361945e-05,-0.000182673915241,0.000210974578376,-0.000210974569654,0.000421948307671,-0.000278833926397,0.000139416082323,-0.000139416073535,0.000139416082323,-0.000139416073535,0.000278833926565,-0.000166481093644,0.000166481092739,0.000332963453445,6.25369234792e-05,-6.25368804627e-05,0.000125079089859,0.000441348106643,0.000441348106643,-0.000441348106694,-0.000441348106694,0.000882695650195,0.000882695650195,7.2956145552e-05,-3.64785588101e-05,3.64786240724e-05,-3.64785588101e-05,3.64786240724e-05,-7.29560973132e-05,7.2956145552e-05,-7.29560973132e-05,0.000145912178457,-0.000722391545641,0.000192781939723,-0.000192781923385,-0.000385563631424,-0.000704259991421,-0.000704259991421,-0.000501100850912,-0.000501100850912,-0.00100220323463,-0.000125608442638,6.28041712813e-05,-6.28041732929e-05,6.28041712813e-05,-6.28041732929e-05,0.000125608443773,-0.000125608442638,0.000125608443773,-0.000251216951619,2.41422796774e-05,1.20711493676e-05,-1.20711217245e-05,-1.20711217245e-05,1.20711493676e-05,2.41422796774e-05,0.00049855993001,-0.000420793235964,-0.000420793235964,-0.000484524143582,-0.000484524143582,0.00129790630912,0.00129790630912,0.000340985935644,-0.000211841261101,-0.000211841261101,-0.000662529216399,0.00130184677328,0.00130184677328,0.000107290146389,-0.000107290116461,-0.000214580331462,0.00116352271201,0.00116352271201,-0.00116352271705,-0.00116352271705,0.00232704660314,0.00232704660314,-0.000101015865987,-0.000101015865987,-0.000101015865987,-0.000101015865987,-0.00020203166012,-0.00020203166012,-0.000322831980264,-0.000322831980264,0.000322831980433,0.000322831980433,-0.000645664569818,-0.000645664569818,0.000140406374919,0.000140406374919,
  -0.00305022669285,-0.00305022669285,-9.92168167127e-05,-9.92168167127e-05,9.92168206191e-05,9.92168206191e-05,-0.000198433263713,-0.000198433263713,0.000360448789437,-0.00124353101821,-0.00124353101821,-0.000684440792881,-0.000684440792881,-0.000684440792881,-0.000684440792881,-0.000264048056491,0.000264048057836,0.000528096730543,0.000350425358354,0.000350425358354,-0.000350425355393,-0.000350425355393,0.000700848306517,0.000700848306517,-2.00659636665e-05,-2.00659636665e-05,2.00659718882e-05,2.00659718882e-05,-4.01316451475e-05,-4.01316451475e-05,0.000404185024205,-0.000202092495643,0.000202092490688,0.000202092490688,-0.000202092495643,0.000404185024205,-0.000980852116811,9.7452712021e-05,9.7452712021e-05,0.000116335926724,0.000116335926724,7.90160995861e-06,-7.90165073389e-06,1.58033165258e-05,0.000648290175544,0.000648290175544,-3.53675043226e-05,-3.53675043226e-05,-0.000317973421435,-0.000317973421435,0.000317973418575,0.000317973418575,0.000635946879091,0.000635946879091,-0.00126765284364,0.00126765284358,0.00253530948868,-0.000303281318621,-0.000303281318621,0.000609065340656,-0.000304533071035,0.00030453306849,-0.000304533071035,0.00030453306849,-0.000609065333534,1.27587810814e-05,1.27587810814e-05,1.27587810814e-05,1.27587810814e-05,0.000721010225209,-0.00072101022054,-0.00144201799474,-0.000527570605905,-0.000263785712579,0.000263785711289,-0.000263785712579,0.000263785711289,0.000527570592583,0.000527570592583,-0.000527570605905,-0.00105514439367,0.00242520472531,-0.00242520473268,-0.000916208183801,-0.000346244236603,0.000346244228829,-0.00069248959517,-0.00024345855168,-0.00024345855168,-8.99925367775e-05,8.99924886584e-05,-0.000179983689262,-0.001082010025,-0.001082010025,-0.001082010025,-0.001082010025,-0.000304428342431,-0.000304428342431,0.000109267124883,-0.000109267129171,
  0.000218535866441,0.000548544735968,0.000548544735968,0.000349031311309,0.000174515539362,-0.000174515539855,0.000174515539362,-0.000174515539855,-0.00034903131466,-0.00034903131466,0.000349031311309,0.000698063908552,0.00146994603836,0.00146994603836,-0.00294768979438,0.0029476898173,0.00589539078839,-0.00020885413188,0.00190849606225,-0.00190849606193,-7.32382204159e-05,-7.32382204159e-05,-7.32382204159e-05,-7.32382204159e-05,-0.00064901646049,-0.00064901646049,-4.15365345845e-05,7.17170805459e-05,7.17170805459e-05,0.000143434606876,-0.000207795982095,0.000103897532532,-0.000103897526516,-0.000103897526516,0.000103897532532,-0.000207795982095,-0.000207795982095,0.00020779598896,-0.000415593618835,-0.000622526374275,-3.45098264884e-05,3.45098190527e-05,-6.9018958691e-05,-9.80881445769e-05,9.80881530832e-05,-0.000196176041169,-0.000168252934937,-0.000224510257083,-0.000224510257083,-0.000224510257083,-0.000224510257083,-0.00107976566611,-0.00107976566611,0.00251893751593,0.00251893751593,0.000599645312268,0.0012709556979,0.0012709556979,0.000538779998344,0.000256733324756,0.000256733324756,-0.000256733326494,-0.000256733326494,-0.00051346834591,-0.00051346834591,-0.000428732781197,-0.000428732781197,-0.000428732781197,-0.000428732781197,-0.000153036762292,-0.000153036762292,0.000153036762264,0.000153036762264,-0.000306073325161,-0.000306073325161,-5.50962921157e-05,2.75482709658e-05,-2.75483521727e-05,-2.75483521727e-05,2.75482709658e-05,-5.50962921157e-05,-0.000411793857122,0.000205895332625,-0.000205895332744,0.000205895332625,-0.000205895332744,0.000411793841031,-0.00069718151739,-0.000348591504755,0.00034859150474,-0.000348591504755,0.00034859150474,0.000697181517565,0.000697181517565,-0.00069718151739,-0.00139436788842,3.9823302495e-05,3.9823302495e-05,-0.000241089359058,-0.000120544465857,
  0.00012054445308,0.00012054445308,-0.000120544465857,-0.000241089359058,0.00022723162311,-0.00022723165047,0.00045446253886,-0.00049329065756,0.000493290702143,-0.000152578886539,-0.000152578886539,-0.00036626751572,0.000366267470388,0.000732538837258,-0.000293537480221,-9.52385792149e-05,-9.52385792149e-05,-9.52385792149e-05,-9.52385792149e-05,-0.00019393982799,0.000193939818848,0.000387879697277,-1.61162520352e-05,-1.61162520352e-05,-1.61162520352e-05,-1.61162520352e-05,-3.22336083903e-05,-3.22336083903e-05,-0.00697274908735,-0.000308603451079,0.000308603477656,-0.000304897810793,0.000304897822527,-0.000609796162094,-0.000437298477305,-0.000437298477305,1.754473199e-05,1.754473199e-05,-1.75447003974e-05,-1.75447003974e-05,3.50892256414e-05,3.50892256414e-05,-0.000598263110379,-0.000598263110379,-0.000993031476361,-0.000993031476361,0.000354493213678,-0.000354493215974,-0.000708983638181,0.00217911786501,0.00217911786501,0.000107723252831,0.000107723252831,-0.000107723250827,-0.000107723250827,0.000215446553441,0.000215446553441,-0.00127490751089,-0.00127490751089,-0.000264989174761,-0.000132494442005,0.000132494433739,-0.000132494442005,0.000132494433739,0.000264989175896,0.000264989175896,-0.000264989174761,-0.000529979210953,0.000516260050117,0.000516260050117,-0.000516260051671,-0.000516260051671,0.00103251908452,0.00103251908452,-0.000190487953862,-0.000190487953862,0.000190487955773,0.000190487955773,-0.000380974428554,-0.000380974428554,0.000127927387259,-0.000201810867961,0.000201810866285,-0.000403621916294,-0.00130964057086,0.000229006493881,-0.000229006495633,0.000229006493881,-0.000229006495633,0.000228635643843,0.000228635643843,0.000761454155547,0.000984951945245,-0.00098495193704,-0.00196990636164,0.00146614635313,-0.000733072981763,0.000733072976343,0.000733072976343,-0.000733072981763,
  0.00146614635313,0.000418458414084,-0.000418458441569,-0.000836912613765,-7.89778977811e-05,-7.89778977811e-05,7.8977895688e-05,7.8977895688e-05,0.000157957131963,0.000157957131963,-0.000228271729485,0.000114136265669,-0.000114136263825,0.000114136265669,-0.000114136263825,0.000228271728192,-0.000228271729485,0.000228271728192,-0.000456544348781,0.00123951912196,-0.000619759189593,0.000619759188217,0.000619759188217,-0.000619759189593,0.00123951912196,-0.000154388396433,-0.000154388396433,0.000154388402394,0.000154388402394,-0.000154388396433,-0.000154388396433,-0.000154388396433,0.000154388402394,0.000154388402394,-0.00046316364793,0.000295031797971,0.000295031797971,-0.000288685835862,0.000144342645412,-0.000144342649524,-0.000144342649524,0.000144342645412,-0.000288685835862,0.00130283566371,5.36954964837e-05,5.36954964837e-05,-5.36955031282e-05,5.36954964837e-05,-5.36955031282e-05,-5.36955031282e-05,5.36954964837e-05,-5.36955031282e-05,-5.36955031282e-05,-0.000161092556867,0.000151853602241,-0.000151853600508,-0.00030370613404,-6.45530146906e-06,-0.000253451244535,-0.000253451244535,-0.000253451244535,-0.000253451244535,-0.000193955348396,0.000193955348006,-0.000387911659352,0.000143749848895,-0.000143749848663,0.000143749848895,-0.000143749848663,0.00028750182683,-0.00028750181302,0.000824840592573,-0.00082484057388,-0.00164969448398,-7.37268609898e-05,-7.37268609898e-05,-7.37268609898e-05,-7.37268609898e-05,-7.6691676883e-06,-7.6691676883e-06,7.66929093944e-06,7.66929093944e-06,1.53362012459e-05,1.53362012459e-05,0.000528339093347,0.000528339093347,0.000528339093347,0.000528339093347,0.000730199397802,-0.000977219115839,0.000488611160474,-0.000488611159108,0.000488611160474,-0.000488611159108,0.000977219116808,-0.000977219115839,0.000977219116808,-0.00195443664264,-0.000698471378726,-0.000698471378726,
  -3.93243861284e-05,-3.93243861284e-05,3.93243900119e-05,3.93243900119e-05,7.86475959181e-05,7.86475959181e-05,-0.000500849557162,-0.000500849557162,-7.07599072139e-05,-3.53801609853e-05,3.53801609554e-05,-3.53801609853e-05,3.53801609554e-05,7.07599065126e-05,7.07599065126e-05,-7.07599072139e-05,-0.000141520229316,0.00115890246404,0.00115890246404,0.00115890246404,0.00115890246404,0.000443271338047,0.000221636500085,-0.00022163650265,-0.00022163650265,0.000221636500085,0.000443271338047,0.00198391473717,-0.000311162104547,-0.000311162104547,-0.00404248346445,-0.000373929378073,0.000186963966188,-0.000186963969177,-0.000186963969177,0.000186963966188,-0.000373929378073,0.000226164244332,-0.000226164222294,0.000452328659972,-0.000815394045347,-9.88985970776e-06,-9.88985970776e-06,9.88988517194e-06,9.88988517194e-06,-1.97810746252e-05,-1.97810746252e-05,-0.000288015216382,-0.000288015216382,0.000288015222225,0.000288015222225,-0.000576029277196,-0.000576029277196,-9.31466627643e-05,-0.00024293328056,-0.00024293328056,-0.00031020720956,9.10123740682e-05,9.10123740682e-05,9.10123740682e-05,9.10123740682e-05,-0.000934038775923,-0.000934038775923,0.00016393035911,-0.000163930329172,-0.00032786034892,0.000385077954868,-0.000192538812513,0.000192538812638,-0.000192538812513,0.000192538812638,-0.000385077955913,0.000385077954868,-0.000385077955913,0.000770154690713,-0.00500625975332,-0.00500625975332,0.000203114621892,0.000203114621892,-0.000203114628028,-0.000203114628028,-0.000234864702108,-0.000117432107751,0.000117432107067,0.000117432107067,-0.000117432107751,-0.000234864702108,-0.00455293212772,-0.00455293212772,0.000132181315031,-0.000132181302626,-0.000264362656641,0.000162790054393,-0.000162790059241,0.000325581225653,-5.05867602728e-05,-5.05867602728e-05,-0.000157220762496,0.000157220764593,-0.00031444172133,
  5.1907288382e-05,-5.19072864174e-05,0.000103814216355,-4.92553050092e-06,-4.92553050092e-06,-3.4103725698e-06,-1.70460571663e-06,1.70500766373e-06,1.70500766373e-06,-1.70460571663e-06,-3.4103725698e-06,0.000127441573746,0.000127441573746,0.000127441573746,0.000127441573746,0.000775425679645,0.000775425679645,-0.000524593032208,-0.000524593032208,-0.00104918461448,-4.00866594944e-05,-2.00430411745e-05,2.00432186115e-05,2.00432186115e-05,-2.00430411745e-05,-4.00866594944e-05,-0.000567119804592,0.000567119789698,0.00113424075322,0.000538705163899,-0.000315755718803,0.000315755717289,-0.000631510065036,-0.000620197091492,-0.000620197091492,-0.00051927812941,-0.00051927812941,-0.00051927812941,-0.00051927812941,-7.87518462197e-05,-7.87518462197e-05,0.000150215333953,-0.000150215334271,0.000300431532157,8.49850539878e-05,-8.49850438318e-05,-0.000169970448378,0.000524192324962,0.000524192324962,-0.000357807222103,-0.000178902782755,0.000178902773403,0.000178902773403,-0.000178902782755,-0.000357807222103,0.000206044556805,0.000206044556805,0.000206044556805,0.000206044556805,-0.000287021397547,-0.000287021397547,0.000287021399277,-0.000287021397547,0.000287021399277,0.000287021399277,0.000287021399277,-0.000287021397547,-0.000287021397547,-0.000861064831977,0.000338702356368,0.000338702356368,0.000170971497367,0.000170971497367,-0.000142170113904,-0.000142170113904,-0.00020950323139,0.000209503214058,0.000209503214058,-0.00020950323139,-0.000304473664733,0.000304473644579,0.000608947384595,-0.00028433521265,-0.00028433521265,-8.79709072426e-05,-8.79709072426e-05,0.0013640084744,0.0013640084744,0.000818241979523,0.000818241979523,-0.000804120627549,0.00040205988526,-0.00040205989054,-0.00040205989054,0.00040205988526,-0.000804120627549,-0.00106009466344,-0.00106009466344,-5.11246050014e-05,-5.11246050014e-05,
  5.11246062953e-05,5.11246062953e-05,-0.000102249103094,-0.000102249103094,-0.000454972649906,-0.000454972649906,-0.000154183315154,-0.000154183315154,0.000154183313507,0.000154183313507,0.000308367488166,0.000308367488166,-0.000227308142883,-0.000113654817437,0.000113654813142,-0.000113654817437,0.000113654813142,0.000227308135948,0.000227308135948,-0.000227308142883,-0.000454617933986,0.000191881053993,-0.000191881023933,-0.000383767010732,0.000898053523815,-0.000898053525207,-0.00179610644704,-0.00030848820155,-0.00030848820155,-3.52142022462e-05,-3.52142022462e-05,0.000105185874107,0.000105185874107,0.000105185874107,0.000105185874107,0.000770755374452,0.000770755374452,0.000219963180148,0.000219963180148,-0.000204060248133,0.000204060251425,7.77391924638e-05,-0.00015838435907,-0.00015838435907,-0.00053176439779,-0.00053176439779,-0.00106353149007,2.22857642079e-05,2.22857642079e-05,-0.00028592979748,-0.00028592979748,-0.00103726573999,-0.00103726573999,0.000157485016565,0.000157485016565,0.000241616217143,-0.00024161621716,0.000483232826593,0.00033820860943,0.00033820860943,0.00047827511187,-0.000478275112777,0.000956551689254,0.000279710395652,0.000139855743891,-0.000139855744072,0.000139855743891,-0.000139855744072,-0.000279710393801,-0.000279710393801,0.000279710395652,0.000559422188582,0.000496680012545,0.000496680012545,-0.000158850883295,0.000158850882162,-0.000317701788237,-0.000331000930949,-0.000331000930949,-0.00056611991507,-0.00056611991507,-0.00056611991507,-0.00056611991507,-0.00059128305735,-0.00059128305735,-0.000186419838924,-0.000186419838924,0.000347492610734,0.000347492610734,0.000347492610734,0.000347492610734,-0.000902560213369,-7.5603273525e-05,-7.5603273525e-05,7.56032793207e-05,7.56032793207e-05,-0.000151209441655,-0.000151209441655,6.03364524141e-05,-6.03364220475e-05,
  0.000120672856411,0.000103016802909,0.000103016802909,-0.000120078937706,-0.000120078937706,-0.000120078937706,-0.000120078937706,-0.000240157465135,-0.000240157465135,0.00292623838168,-0.00292623840426,0.000447701426243,-0.000447701414626,-3.8717116097e-05,-3.8717116097e-05,0.000980896589981,-0.000980896589752,-0.000980896589752,0.000980896589981,0.0071235060177,-0.000470835948872,0.00023541749067,-0.000235417495449,-0.000235417495449,0.00023541749067,-0.000470835948872,-2.87638427638e-05,2.87633153301e-05,-5.75261844149e-05,-0.000196158939808,0.000196158939157,-0.000392319234086,0.000258077212874,-0.000258077191819,0.000516155254533,-0.000805644088857,-0.000805644088857,-0.000448727364934,7.23217885227e-05,7.23217885227e-05,-7.232177878e-05,-7.232177878e-05,-0.000110276191312,-0.000110276191312,-0.000110276191312,-0.000110276191312,-0.00067774120603,-0.00067774120603,-0.00067774120603,-0.00067774120603,8.77032063364e-05,-8.77032192978e-05,0.000175404462938,-0.000312884814278,0.000312884818787,0.000625772410652,-7.67877300265e-05,-0.000896613573447,0.000896613574418,-0.000896613573447,0.000896613574418,-0.000792332128272,-0.000792332128272,0.00019042374939,0.00019042374939,-0.000190423750599,-0.000190423750599,-0.000380848820321,-0.000380848820321,0.000342050462031,0.000342050462031,-1.33717765249e-05,1.33717748927e-05,2.67436752387e-05,-0.00176198153895,-0.00176198153895,-9.28556116848e-05,9.28556287658e-05,0.000185709728195,-0.000326203472152,-0.000326203472152,-0.000652408099824,0.000305684161338,-0.000152842295326,0.000152842273201,0.000152842273201,-0.000152842295326,0.000305684161338,2.55148964411e-05,-2.55149400461e-05,5.10298348772e-05,0.000237213747354,0.000118607544566,-0.000118607570559,0.000118607544566,-0.000118607570559,-0.000237213778995,-0.000237213778995,0.000237213747354,0.000474423206697,
  -8.00186034374e-05,-8.00186034374e-05,0.000194890776043,0.000194890776043,0.000630811588865,0.000630811588865,-0.00110320886034,-0.00110320886034,-2.94119222911e-05,-2.94119222911e-05,-2.94119222911e-05,-2.94119222911e-05,9.07032477648e-05,-9.07031464956e-05,-0.000181411316831,0.000400121340769,0.000400121340769,-0.00252900608503,0.00252900608629,0.00505800972716,-0.00031251877675,0.000156259411773,-0.00015625940611,-0.00015625940611,0.000156259411773,-0.00031251877675,4.33555330392e-06,-2.16816586806e-06,2.16799944124e-06,2.16799944124e-06,-2.16816586806e-06,4.33555330392e-06,0.000895653716675,0.00216363525052,0.00216363525052,-0.000275696713978,-0.000137847398499,0.000137847398816,0.000137847398816,-0.000137847398499,-0.000275696713978,-6.73289304837e-05,-6.73289304837e-05,-0.00114055010245,-0.00114055010245,-0.00114055010245,-0.00114055010245,0.000242689568663,0.000242689568663,-0.00046315160279,-0.00046315160279,0.00115099699252,0.000306171051031,0.000306171051031,-0.00227714098304,-0.00227714098304,-0.00052642616325,0.000526426158075,0.00105285343661,0.000587392574103,0.000587392574103,0.000587392574103,0.000587392574103,-2.91086468196e-05,-2.91086468196e-05,-0.000232710607472,-0.00011635542341,0.00011635542262,-0.00011635542341,0.00011635542262,0.000232710604975,-0.000214021610652,-0.000214021610652,4.19156042656e-05,4.19156042656e-05,-0.000103270006103,-0.000103270006103,-0.000145173760401,-0.000145173760401,-9.70104565689e-05,4.85054297788e-05,-4.85054239664e-05,-4.85054239664e-05,4.85054297788e-05,-9.70104565689e-05,7.90516923433e-05,7.90516923433e-05,7.90516923433e-05,7.90516923433e-05,-0.000735295181714,-0.000735295181714,-9.47960824271e-05,-9.47960824271e-05,-0.000180228656407,-0.000180228656407,0.000180228653424,0.000180228653424,0.000360458053155,0.000360458053155,0.000225266020209,
  -0.000837882568242,0.000145589928542,0.000145589928542,0.000319958537467,0.000319958537467,0.000319958537467,0.000319958537467,0.000639917190484,0.000639917190484,-0.000226073943985,-0.000591543968859,-0.000591543968859,-0.000269712051299,-0.000269712051299,9.8351782266e-05,9.8351782266e-05,-0.000237925755711,0.000118963417462,-0.000118963416434,0.000118963417462,-0.000118963416434,0.000237925758888,0.000237925758888,-0.000237925755711,0.000475853171838,-0.000398698109607,-0.000398698109607,-0.000411711589696,0.000411711583795,-0.000823425157815,0.000307909633056,0.000307909633056,0.000307909633056,0.000307909633056,-0.00248757455643,-0.00248757455643,-8.05875712321e-05,-4.02940185571e-05,4.02940199655e-05,-4.02940185571e-05,4.02940199655e-05,8.05875667735e-05,8.05875667735e-05,-8.05875712321e-05,-0.000161175531688,-0.000414973314847,-0.000414973314847,0.000414973312845,0.000414973312845,0.000829946752099,0.000829946752099,-0.000321662199371,-0.000321662199371,0.000385035205734,0.000385035205734,-0.000385035203416,-0.000385035203416,0.000770067589337,0.000770067589337,-0.000104994120162,-0.000104994120162,0.000104994118375,0.000104994118375,-0.00020998817781,-0.00020998817781,-0.000284697987662,0.000284697989163,-0.000569395900617,3.50004407509e-06,3.50004407509e-06,7.00109136113e-06,0.0013229675294,0.0013229675294,0.0013229675294,0.0013229675294,0.000793234587867,0.000793234587867,4.45771092883e-05,-0.000371243011595,-0.000371243011595,-7.14334730661e-05,7.14334735228e-05,-0.00014286751138,7.44394097638e-05,7.44394097638e-05,0.000148879679308,-0.000279722531678,9.36918400522e-05,9.36918400522e-05,-9.36918439643e-05,-9.36918439643e-05,0.000187382344342,0.000187382344342,-0.000185931935813,-0.000185931935813,-3.920862418e-05,-3.920862418e-05,3.92086212941e-05,3.92086212941e-05,-7.84166092383e-05,
  -7.84166092383e-05,-0.000536228247753,-0.000536228247753,0.000869585367619,-0.000869585366221,-0.00173917315405,0.000215465579777,-0.000107733243223,0.000107733242518,0.000107733242518,-0.000107733243223,0.000215465579777,0.000133610484713,0.000133610484713,-0.000133610482894,-0.000133610482894,0.000267221285738,0.000267221285738,-7.59429941997e-06,7.59426575309e-06,-1.51877837097e-05,-0.000250771554869,-0.000250771554869,-0.000391548887459,0.000391548860743,-0.000783098259285,0.000172888764541,-8.64450953918e-05,8.64450952318e-05,8.64450952318e-05,-8.64450953918e-05,0.000172888764541,0.000172888764541,-0.000172888766633,0.00034577704,0.000137196086094,0.000137196086094,0.00278902062778,0.00277736294483,0.00277736294483,0.000320078821515,0.000320078821515,-0.000372359428432,-0.000372359428432,0.000372359426789,0.000372359426789,-0.000744718911848,-0.000744718911848,0.00252546020294,-0.00252546020247,5.65648538975e-05,2.82825058359e-05,-2.82825269191e-05,2.82825058359e-05,-2.82825269191e-05,-5.65648495411e-05,-5.65648495411e-05,5.65648538975e-05,0.000113130134307,0.000235948612591,-0.000235948616782,0.000471898027006,-0.00059256023908,-0.00059256023908,-0.000767375820221,0.000767375846966,-0.00153475601845,2.46716227618e-05,-1.23356743244e-05,1.23357492514e-05,1.23357492514e-05,-1.23356743244e-05,2.46716227618e-05,0.000167508552592,-0.000167508555897,0.000335018294015,-0.000123567695997,-0.000123567695997,0.000572119659181,0.000572119659181,-0.000180169283993,0.000180169279417,0.000360338256843,0.000291761419158,-0.000291761419542,0.000583516172586,0.000219974568898,0.000219974568898,4.73786577212e-05,4.73786577212e-05,-0.000314681436494,-0.000314681436494,-0.000147953301373,0.000147953302569,-0.000295906714807,1.30720612289e-06,1.30720612289e-06,-1.30712471958e-06,-1.30712471958e-06,1.30720612289e-06,
  1.30720612289e-06,1.30720612289e-06,-1.30712471958e-06,-1.30712471958e-06,3.92014852324e-06,0.00176074311497,0.00176074311497,0.000465414102511,0.000465414102511,-0.000635134703087,-0.000635134703087,-2.94796455097e-05,-2.94796455097e-05,2.94796490378e-05,2.94796490378e-05,-5.89595444361e-05,-5.89595444361e-05,0.000118662800406,0.000118662800406,-0.000268081022706,-0.000268081022706,-0.000536163328368,-0.000276102789185,-0.000276102789185,-0.00055220820265,0.000192669793793,9.63349646587e-05,-9.63349639272e-05,-9.63349639272e-05,9.63349646587e-05,0.000192669793793,-0.000215656093718,-0.000215656093718,0.000215656093032,-0.000215656093718,0.000215656093032,0.000215656093032,-0.000215656093718,0.000215656093032,0.000215656093032,0.00064696830558,0.000118139975877,-0.000118139976842,0.00023628049379,-0.000330703779145,0.000330703780337,0.000123204784158,-0.000123204783883,0.000246409512433,-0.00014247060221,-7.1235090964e-05,7.12350936526e-05,7.12350936526e-05,-7.1235090964e-05,-0.00014247060221,0.000139719955066,0.000139719955066,0.000139719955066,0.000139719955066,-3.62572304353e-05,3.62572241704e-05,-7.25142912748e-05,-0.000450682627785,-0.000450682627785,-4.51251765518e-05,2.25632109557e-05,-2.25631985828e-05,-2.25631985828e-05,2.25632109557e-05,-4.51251765518e-05,-0.00020533174302,-0.00020533174302,-0.000345276073106,-0.000345276073106,0.000345276069901,0.000345276069901,-0.000690552899868,-0.000690552899868,-0.000227650515165,0.000227650530723,-0.000455299752118,-4.4580545669e-05,-4.4580545669e-05,4.45804435609e-05,4.45804435609e-05,0.000682473746908,0.000682473746908,-0.000200308316473,-0.000200308316473,0.000231468338093,0.000160937810045,0.000160937810045,-0.000160937811537,0.000160937810045,-0.000160937811537,-0.000160937811537,0.000160937810045,-0.000160937811537,-0.000160937811537,-0.000482814433074,
  -0.000145214829074,-0.000145214829074,0.000938373990727,0.000938373990727,-0.000209822620553,-0.000209822620553,-0.000419644723247,-0.000299233803633,-0.000299233803633,0.000414487570087,0.000414487570087,-0.000192564468558,-0.000192564468558,9.9443774641e-05,9.9443774641e-05,-9.9443780081e-05,-9.9443780081e-05,0.00019889074289,0.00019889074289,0.000103654469943,5.18271165324e-05,-5.18271128521e-05,5.18271165324e-05,-5.18271128521e-05,-0.000103654463778,-0.000103654463778,0.000103654469943,0.000207307479384,0.000503069143927,0.000503069143927,0.000503069143927,0.000503069143927,-0.000209287048511,-0.000209287048511,0.000829561436595,0.000829561436595,-0.000543825826194,0.000271913698211,-0.000271913697618,0.000271913698211,-0.000271913697618,0.00054382582815,0.00054382582815,-0.000543825826194,0.00108765245944,0.000329967090998,-0.000421272088933,-0.000210636137503,0.000210636138216,0.000210636138216,-0.000210636137503,-0.000421272088933,-0.000590077335945,-0.000590077335945,-0.000701438835269,-0.000701438835269,-0.000345867600552,-0.000345867600552,1.85480203984e-05,1.85480203984e-05,-1.85480178409e-05,-1.85480178409e-05,3.70960466644e-05,3.70960466644e-05,0.000288632412825,0.000104319188309,-5.21600696618e-05,5.21600726119e-05,-5.21600696618e-05,5.21600726119e-05,-0.000104319183611,-0.000104319183611,0.000104319188309,-0.00020863939479,0.000158004630604,-0.000207678989695,0.000103839619888,-0.000103839624217,-0.000103839624217,0.000103839619888,-0.000207678989695,-0.00184793815731,0.00184793815713,-0.00369587653296,-0.00256451602258,0.000470622724011,0.000470622724011,-0.000449768809613,0.000449768805218,0.000899539220468,9.6852811922e-05,0.000299702741255,0.000299702741255,0.000299702741255,0.000299702741255,-5.43406077581e-05,-5.43406077581e-05,-0.00135326322817,0.000404602192845,0.000404602192845,
  0.000102577223636,0.000102577223636,-0.000102577229139,-0.000102577229139,0.000205153889557,0.000205153889557,-0.000657967658874,-0.000657967658874,0.000124721909588,6.23612388295e-05,-6.23612396439e-05,6.23612388295e-05,-6.23612396439e-05,-0.000124721904436,-0.000124721904436,0.000124721909588,0.000249444762078,0.000109548224281,0.000109548224281,0.000219096491922,1.27693626399e-05,1.27693626399e-05,-1.27691551949e-05,-1.27691551949e-05,-2.55376647145e-05,-2.55376647145e-05,0.000249469205851,0.000249469205851,0.0002437865513,0.000121893702073,-0.000121893702935,0.000121893702073,-0.000121893702935,-0.000243786554593,-0.000243786554593,0.0002437865513,0.000487574519215,-0.000255921266932,-0.000255921266932,0.000255921267307,0.000255921267307,-0.000511840685767,-0.000511840685767,0.0019477141506,0.0019477141506,-0.000782814842615,0.00015365597045,-0.000153655970017,0.000307311599306,0.000256563562946,0.000256563562946,-6.84949635186e-05,-6.84949635186e-05,8.25950250689e-05,8.25950250689e-05,-0.000236348990106,-0.000236348990106,-0.000472699378061,0.000709860771532,0.000709860771532,9.94366183361e-05,9.94366183361e-05,-0.00114137155408,-0.00114137155408,0.000165731961457,0.000165731961457,-7.49274437347e-05,-7.49274437347e-05,2.336890515e-05,-0.000653103429833,0.000326552818957,-0.00032655282054,0.000326552818957,-0.00032655282054,0.000653103428865,-0.000653103429833,0.000653103428865,-0.00130621378005,-0.000114753249256,0.000114753258937,-0.00022950688087,0.000269102385178,-0.000269102377727,0.000538205616792,-8.30837103773e-05,4.15418391609e-05,-4.15418342456e-05,4.15418391609e-05,-4.15418342456e-05,8.3083666924e-05,-8.30837103773e-05,8.3083666924e-05,-0.000166167001123,-0.000393225819614,-0.000393225819614,0.000308452639858,-0.000154225917494,0.000154225907734,-0.000154225917494,0.000154225907734,
  -0.000308452632414,5.53270964183e-05,5.53270964183e-05,-3.82799283161e-07,-3.82799283161e-07,-0.000731445273632,-0.000731445273632,-0.00146289118326,-0.000164139983927,0.000164139982537,-0.00032827997348,0.000208528477787,0.000104264887564,-0.000104264864971,0.000104264887564,-0.000104264864971,-0.000208528455075,-0.000208528455075,0.000208528477787,0.000417059459386,0.00037380023752,0.00037380023752,0.000296298963458,0.000296298963458,-0.000296298963981,-0.000296298963981,-0.000592597607712,-0.000592597607712,1.30828577416e-06,-6.54999046392e-07,6.55145000385e-07,-6.54999046392e-07,6.55145000385e-07,-1.30894461514e-06,1.30828577416e-06,-1.30894461514e-06,2.61858651796e-06,-0.000116932245776,-0.000116932245776,-0.000116932245776,-0.000116932245776,-6.46357069619e-05,6.46357100215e-05,0.000129272330873,-0.00192329715709,-0.00192329715709,0.000625898098346,-0.000625898073645,-0.000127318225648,0.000127318216079,-0.000254637585894,0.000151791484238,0.000151791484238,-0.000151791482912,-0.000151791482912,0.000303583459105,0.000303583459105,0.00067900055394,0.000339500116271,-0.000339500120477,-0.000339500120477,0.000339500116271,0.00067900055394,0.000227493523194,0.000113746918982,-0.000113746918055,-0.000113746918055,0.000113746918982,0.000227493523194,0.000112749400706,0.000112749400706,-8.48243413522e-05,8.48243836074e-05,0.000169653306705,-0.000449265340301,-0.000449265340301,-0.000449265340301,-0.000449265340301,0.000264058644257,-0.000132028092176,0.000132028094588,0.000132028094588,-0.000132028092176,0.000264058644257,-0.00024196488511,-0.00024196488511,8.63643215571e-05,8.63643215571e-05,-8.63643292097e-05,-8.63643292097e-05,0.000172730245245,0.000172730245245,-0.000665496306113,-0.000421577578365,-0.000421577578365,0.000404606018718,0.000404606018718,-0.000155359568714,7.76796448971e-05,-7.76796432916e-05,
  7.76796448971e-05,-7.76796432916e-05,0.000155359560096,-0.000155359568714,0.000155359560096,-0.000310718688735,-3.96807996416e-05,-3.96807996416e-05,3.96808053203e-05,3.96808053203e-05,-7.93615639993e-05,-7.93615639993e-05,0.00101791957761,0.00101791957761,0.00236754907258,-0.000289058320374,-0.000289058320374,-0.000289058320374,-0.000289058320374,9.05622734875e-05,9.05622734875e-05,-9.05622784482e-05,-9.05622784482e-05,0.000181126043452,0.000181126043452,0.000157458453908,7.87278342968e-05,-7.87278537149e-05,-7.87278537149e-05,7.87278342968e-05,0.000157458453908,-0.00051276473943,-0.000337646469734,0.000337646467861,-0.000675294757718,9.97972597509e-05,-9.97972623432e-05,-0.000199595733945,-0.000290242225109,0.000145121682494,-0.000145121683477,0.000145121682494,-0.000145121683477,0.000290242227461,0.000290242227461,-0.000290242225109,0.000580484984336,0.000243861623622,0.000243861623622,0.000243861623622,0.000243861623622,0.000165806466579,-0.000165806455849,0.000165806466579,-0.000165806455849,0.000165806466579,-0.000165806455849,-0.000165806455849,0.000165806466579,-0.000165806455849,-0.000497418512469,-0.00026909153622,-0.00026909153622,-0.000308764759936,-0.000308764759936,-0.000205081952611,-0.000102541157141,0.00010254115804,0.00010254115804,-0.000102541157141,-0.000205081952611,0.000169600601892,0.000169600601892,-0.000169600600936,-0.000169600600936,0.000339200780714,0.000339200780714,-8.01010383077e-05,4.00505194335e-05,-4.00504731325e-05,-4.00504731325e-05,4.00505194335e-05,-8.01010383077e-05,-2.24524842073e-05,-2.24524842073e-05,-9.83713003333e-05,-9.83713003333e-05,-9.83713003333e-05,-9.83713003333e-05,0.00171961369979,-0.000859809251531,0.000859809253349,-0.000859809251531,0.000859809253349,-0.00171961369439,0.00171961369979,-0.00171961369439,0.00343923369666,-0.00106888778376,0.000388551963295,
  0.000388551963295,0.00032772393316,0.00032772393316,0.00032772393316,0.00032772393316,0.000397540269101,0.000397540269101,-0.0003975402693,-0.0003975402693,0.000795081991857,0.000795081991857,0.000602774383459,-0.000602774383716,0.000750093492139,-0.000750093495927,-0.000168237846876,-0.000168237846876,0.000650134142968,0.000650134142968,-0.00025112584435,-0.00025112584435,0.000251125851784,0.000251125851784,-0.000502250085474,-0.000502250085474,-0.000313821372134,0.000156910425054,0.000156910425054,-0.000156910428378,-0.000156910428378,0.000313821361371,0.000115642762217,5.78215673732e-05,-5.78215637647e-05,-5.78215637647e-05,5.78215673732e-05,0.000115642762217,-0.000100248102256,0.00010024810599,-0.000200496528164,-0.000155490342463,-7.77451528339e-05,7.77451574352e-05,7.77451574352e-05,-7.77451528339e-05,-0.000155490342463,-0.000672230408141,-0.000672230408141,9.1076220796e-05,4.55377900693e-05,-4.55377824927e-05,-4.55377824927e-05,4.55377900693e-05,9.1076220796e-05,-0.000136147418174,-0.000136147418174,0.00015420357447,0.00015420357447,-0.000138441562869,0.000138441566729,0.000276882267422,0.000849878430067,-8.97387770949e-06,-8.97387770949e-06,-1.7947201532e-05,0.000721348937313,0.000721348937313,1.12474843644e-05,5.62371238109e-06,-5.62370411981e-06,5.62371238109e-06,-5.62370411981e-06,-1.12474948962e-05,-1.12474948962e-05,1.12474843644e-05,2.24948677211e-05,0.000182897349032,-0.000182897349541,0.000365795814588,-0.000927112595179,0.000927112628319,0.00185422597478,-8.29399727548e-05,8.2940016079e-05,-0.000165875481395,-0.000403401542797,-0.000403401542797,0.000120557774356,0.000120557774356,0.000120557774356,0.000120557774356,-0.00060741831151,-0.00171470707941,-0.000857355363357,0.000857355363483,0.000857355363483,-0.000857355363357,-0.00171470707941,-9.15718111995e-06,-4.57847299546e-06,
  4.57847760923e-06,-4.57847299546e-06,4.57847760923e-06,9.15719395211e-06,9.15719395211e-06,-9.15718111995e-06,-1.83136026913e-05,-3.54599563875e-05,-1.77299338406e-05,1.77300851259e-05,1.77300851259e-05,-1.77299338406e-05,-3.54599563875e-05,-0.000353223395822,-0.000353223395822,-0.000312606244373,-0.000312606244373,-0.000312606244373,-0.000312606244373,-0.000381778395847,-0.000381778395847,0.000242794775021,0.000242794775021,0.000242794775021,0.000242794775021,-0.000266813225678,-0.000266813225678,-0.000266813225678,-0.000266813225678,1.51396328571e-05,1.51396328571e-05,1.51396328571e-05,1.51396328571e-05,3.02798153629e-05,3.02798153629e-05,-0.00032250993067,-0.00032250993067,0.00223856240846,0.00111928662176,-0.00111928662394,0.00111928662176,-0.00111928662394,-0.00223856240205,-0.00223856240205,0.00223856240846,0.00447713691328,0.000109377995657,0.000109377995657,-0.000109377983397,-0.000109377983397,0.000218756258907,0.000218756258907,-0.000642491057054,-0.000642491057054,-0.000130810174095,-0.000130810174095,0.000130810172732,0.000130810172732,0.000261620484839,0.000261620484839,0.000151401185342,-0.00015140118423,-0.000302802566188,0.0013438743033,0.0013438743033,4.02502508996e-05,2.01251060362e-05,-2.01251067805e-05,-2.01251067805e-05,2.01251060362e-05,4.02502508996e-05,0.00150221717884,0.00150221717884,-2.51919725533e-05,-2.51919725533e-05,2.51919922759e-05,-2.51919725533e-05,2.51919922759e-05,2.51919922759e-05,-2.51919725533e-05,2.51919922759e-05,2.51919922759e-05,7.55750534432e-05,-0.000118827806101,0.000118827807792,0.000237656379999,0.00020092321396,0.00020092321396,-0.000200923214028,-0.000200923214028,0.000401845240401,0.000401845240401,0.0145064044535,-0.0145064045831,-0.000384603265928,0.000192301768176,-0.000192301768801,0.000192301768176,-0.000192301768801,0.000384603266353,
  0.000384603266353,-0.000384603265928,0.00076920803532,-0.000231072115441,0.000231072115329,-0.000462145152939,-2.78922130867e-05,0.000224772221112,0.000224772221112,0.000224772221112,0.000224772221112,-0.00054602397389,-0.00163894379993,-0.00163894379993,0.00114857342339,0.000574286598068,-0.000574286595562,-0.000574286595562,0.000574286598068,0.00114857342339,-0.000355944584386,-0.000355944584386,-0.000128505973151,-0.000128505973151,-0.00104440190597,0.00104440189697,0.00208881414473,0.000649869453586,-0.000649869453379,0.00129973635902,-9.69810600031e-05,-9.69810600031e-05,-0.000193962608737,-0.000955186630506,-0.000955186630506,6.97520625249e-05,6.97520625249e-05,-0.00064650811630
};
  vector<RealType> slope(myslope,myslope+sizeof(myslope)/sizeof(RealType));

  // C contains current coefficients
  // CSFcoeff initialized with original coefficients in MultiSlaterDeterminantFast constructor
    // - this should work for restart since original C are always read from input ptcl.xml
  vector<RealType>::iterator it(C.begin()),last(C.end());
  vector<RealType>::iterator original_it(originalC.begin()),original_last(originalC.end());
  vector<RealType>::iterator slope_it(slope.begin()),slope_last(slope.end());
  while(it != last){ // linear interpolation
    // Ci(R)=dCi/dR*(R-Ro)+Ci(Ro)
    (*it)=(*slope_it)*RminusRo+(*original_it); 
    it++; slope_it++; original_it++;
  }
}
OrbitalBase::ValueType MultiSlaterDeterminantFast::evaluate(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  EvaluateTimer.start();
  //for(int i=0; i<Dets.size(); i++)
  //  Dets[i]->evaluateForWalkerMove(P);
  Dets[0]->evaluateForWalkerMove(P);
  Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  EvaluateTimer.stop();
  return psiCurrent;
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  ValueType psi = evaluate(P,G,L);
  return LogValue = evaluateLogAndPhase(psi,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,
    ParticleSet::ParticleGradient_t& G,
    ParticleSet::ParticleLaplacian_t& L,
    PooledData<RealType>& buf,
    bool fillBuffer )
{
  if(fillBuffer)
  {
    Dets[0]->evaluateForWalkerMove(P);
    Dets[0]->copyToDerivativeBuffer(P,buf);
    Dets[1]->evaluateForWalkerMove(P);
    Dets[1]->copyToDerivativeBuffer(P,buf);
  }
  else
  {
    Dets[0]->copyFromDerivativeBuffer(P,buf);
    Dets[1]->copyFromDerivativeBuffer(P,buf);
  }
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  return evaluateLogAndPhase(psiCurrent,PhaseValue);
}


OrbitalBase::GradType MultiSlaterDeterminantFast::evalGrad(ParticleSet& P, int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: evalGrad not implemented. \n");
  }
  GradType grad_iat;
  if(DetID[iat] == 0)
  {
    Dets[0]->evaluateGrads(P,iat);
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    int N1 = Dets[0]->FirstIndex;
    ValueType psi=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
  else
  {
    Dets[1]->evaluateGrads(P,iat);
    ValueType psi=0.0;
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
}

OrbitalBase::ValueType MultiSlaterDeterminantFast::ratioGrad(ParticleSet& P
    , int iat, GradType& grad_iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratioGrad not implemented. \n");
  }
  UpdateMode=ORB_PBYP_PARTIAL;
  if(DetID[iat] == 0)
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[0]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    int N1 = Dets[0]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    it=C.begin();
    last=C.end();
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
  else
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[1]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
}


// This routine need work, sloppy for now
OrbitalBase::ValueType  MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat
    , ParticleSet::ParticleGradient_t& dG,ParticleSet::ParticleLaplacian_t& dL)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio(P,dG,dL) not implemented. \n");
  }
  UpdateMode=ORB_PBYP_ALL;
  if(DetID[iat] == 0)
  {
    RatioAllTimer.start();
    /*
          P.acceptMove(iat);
          Dets[0]->evaluateForWalkerMove(P);
          ValueVector_t& detValues_up = Dets[0]->detValues;
          ValueVector_t& detValues_dn = Dets[1]->detValues;
          GradMatrix_t& grads_up = Dets[0]->grads;
          GradMatrix_t& grads_dn = Dets[1]->grads;
          ValueMatrix_t& lapls_up = Dets[0]->lapls;
          ValueMatrix_t& lapls_dn = Dets[1]->lapls;
    */
//*
    Ratio1AllTimer.start();
    Dets[0]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    ValueMatrix_t& lapls_up = Dets[0]->new_lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->lapls;
//*/
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
  else
  {
    RatioAllTimer.start();
    Ratio1AllTimer.start();
    Dets[1]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    ValueMatrix_t& lapls_up = Dets[0]->lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->new_lapls;
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
}

// use ci_node for this routine only
OrbitalBase::ValueType MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat)
{
// debug
//    testMSD(P,iat);
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio not implemented. \n");
  }
  UpdateMode=ORB_PBYP_RATIO;
  if(DetID[iat] == 0)
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[0]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
  else
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[1]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
}

void MultiSlaterDeterminantFast::acceptMove(ParticleSet& P, int iat)
{
// this should depend on the type of update, ratio / ratioGrad
// for now is incorrect fot ratio(P,iat,dG,dL) updates
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: acceptMove not implemented. \n");
  }
// update psiCurrent,myG_temp,myL_temp
  AccRejTimer.start();
  psiCurrent *= curRatio;
  curRatio=1.0;
  Dets[DetID[iat]]->acceptMove(P,iat);
  switch(UpdateMode)
  {
  case ORB_PBYP_ALL:
    // ratio(P,iat,dG,dL)
    myG = myG_temp;
    myL = myL_temp;
    break;
  default:
    break;
  }
  AccRejTimer.stop();
//    Dets[0]->evaluateForWalkerMove(P);
//    Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  /*
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;

      ValueType psi=0.0;
      myG_temp=0.0;
      myL_temp=0.0;
      vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
      vector<RealType>::iterator it(C.begin()),last(C.end());
      while(it != last) {
        psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
        for(int k=0,n=N1; k<NP1; k++,n++) {
          myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
          myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
        }
        for(int k=0,n=N2; k<NP2; k++,n++) {
          myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
          myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
        }
        it++;upC++;dnC++;
      }
      ValueType psiinv = 1.0/psi;
      myG_temp *= psiinv;
      myL_temp *= psiinv;
  */
}

void MultiSlaterDeterminantFast::restore(int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  AccRejTimer.start();
  Dets[DetID[iat]]->restore(iat);
  curRatio=1.0;
  AccRejTimer.stop();
}

void MultiSlaterDeterminantFast::update(ParticleSet& P
                                        , ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL
                                        , int iat)
{
  APP_ABORT("IMPLEMENT MultiSlaterDeterminantFast::update");
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,BufferType& buf)
{
  Dets[0]->evaluateLog(P,buf);
  Dets[1]->evaluateLog(P,buf);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::registerData(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  Dets[0]->registerData(P,buf);
  Dets[1]->registerData(P,buf);
  LogValue = evaluateLog(P,P.G,P.L);
  FirstAddressOfG = &myG[0][0];
  LastAddressOfG = FirstAddressOfG + P.getTotalNum()*DIM;
  buf.add(psiCurrent);
  buf.add(myL.first_address(), myL.last_address());
  buf.add(FirstAddressOfG,LastAddressOfG);
// debug, erase
//    msd->registerData(P,buf);
  return LogValue;
}

// this routine does not initialize the data, just reserves the space
void MultiSlaterDeterminantFast::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: registerDataForDerivatives not implemented. \n");
  }
  Dets[0]->registerDataForDerivatives(P,buf,storageType);
  Dets[1]->registerDataForDerivatives(P,buf,storageType);
}

// FIX FIX FIX
OrbitalBase::RealType MultiSlaterDeterminantFast::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)
{
  UpdateTimer.start();
  Dets[0]->updateBuffer(P,buf,fromscratch);
  Dets[1]->updateBuffer(P,buf,fromscratch);
  //Dets[0]->updateBuffer(P,buf,true);
  //Dets[1]->updateBuffer(P,buf,true);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  P.G += myG;
  for(int i=0; i<P.L.size(); i++)
    P.L(i) += myL[i] - dot(myG[i],myG[i]);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  UpdateTimer.stop();
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

void MultiSlaterDeterminantFast::copyFromBuffer(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: copyFromBuffer not implemented. \n");
  }
  Dets[0]->copyFromBuffer(P,buf);
  Dets[1]->copyFromBuffer(P,buf);
  buf.get(psiCurrent);
  buf.get(myL.first_address(), myL.last_address());
  buf.get(FirstAddressOfG,LastAddressOfG);
}


void MultiSlaterDeterminantFast::checkInVariables(opt_variables_type& active)
{
  if(Optimizable)
  {
    if(myVars.size())
      active.insertFrom(myVars);
    else
      Optimizable=false;
  }
}

void MultiSlaterDeterminantFast::checkOutVariables(const opt_variables_type& active)
{
  if(Optimizable)
    myVars.getIndex(active);
}

/** resetParameters with optVariables
 *
 * USE_resetParameters
 */
void MultiSlaterDeterminantFast::resetParameters(const opt_variables_type& active)
{
  if(Optimizable)
  {
    if(usingCSF)
    {
      for(int i=0; i<CSFcoeff.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          CSFcoeff[i+1]=myVars[i]=active[loc];
      }
      int cnt=0;
      for(int i=0; i<DetsPerCSF.size(); i++)
      {
        for(int k=0; k<DetsPerCSF[i]; k++)
        {
          C[cnt] = CSFcoeff[i]*CSFexpansion[cnt];
          cnt++;
        }
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
    else
    {
      for(int i=0; i<C.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          C[i+1]=myVars[i]=active[loc];
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
  }
}
void MultiSlaterDeterminantFast::reportStatus(ostream& os)
{
}

//   OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
//   {
//      APP_ABORT("IMPLEMENT OrbitalBase::makeClone");
//      return 0;
//   }

void MultiSlaterDeterminantFast::evaluateDerivatives(ParticleSet& P,
    const opt_variables_type& optvars,
    vector<RealType>& dlogpsi,
    vector<RealType>& dhpsioverpsi)
{
  bool recalculate(false);
  for (int k=0; k<myVars.size(); ++k)
  {
    int kk=myVars.where(k);
    if (kk<0)
      continue;
    if (optvars.recompute(kk))
      recalculate=true;
  }
// need to modify for CSF later on, right now assume Slater Det basis
  if (recalculate)
  {
    if(usingCSF)
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
// myG,myL should already be calculated
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
//       for(int i=0; i<C.size(); i++){
      num=CSFcoeff.size()-1;
      int cnt=0;
//        this one is not optable
      cnt+=DetsPerCSF[0];
      int ip(1);
      for(int i=0; i<num; i++,ip++)
      {
        int kk=myVars.where(i);
        if (kk<0)
        {
          cnt+=DetsPerCSF[ip];
          continue;
        }
        ValueType cdet=0.0,q0=0.0,v1=0.0,v2=0.0;
        for(int k=0; k<DetsPerCSF[ip]; k++)
        {
          int upC = C2node_up[cnt];
          int dnC = C2node_dn[cnt];
          ValueType tmp1=CSFexpansion[cnt]*detValues_dn[dnC]*psiinv;
          ValueType tmp2=CSFexpansion[cnt]*detValues_up[upC]*psiinv;
          cdet+=CSFexpansion[cnt]*detValues_up[upC]*detValues_dn[dnC]*psiinv;
          q0 += (tmp1*laplSum_up[upC] + tmp2*laplSum_dn[dnC]);
          for(int l=0,j=N1; l<NP1; l++,j++)
            v1 += tmp1*(dot(P.G[j],grads_up(upC,l))-dot(myG_temp[j],grads_up(upC,l)) );
          for(int l=0,j=N2; l<NP2; l++,j++)
            v2 += tmp2*(dot(P.G[j],grads_dn(dnC,l))-dot(myG_temp[j],grads_dn(dnC,l)));
          cnt++;
        }
        convert(cdet,dlogpsi[kk]);
        ValueType dhpsi =  -0.5*(q0-cdet*lapl_sum)
                           -cdet*gg-v1-v2;
        //ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
        //                         -cdet*lapl_sum)
        //                   -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    }
    else
      //usingCSF
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
      for(int i=1; i<C.size(); i++)
      {
        int kk=myVars.where(i-1);
        if (kk<0)
          continue;
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType cdet=detValues_up[upC]*detValues_dn[dnC]*psiinv;
        ValueType tmp1=detValues_dn[dnC]*psiinv;
        ValueType tmp2=detValues_up[upC]*psiinv;
        convert(cdet,dlogpsi[kk]);
        ValueType v1=0.0,v2=0.0;
        for(int k=0,j=N1; k<NP1; k++,j++)
          v1 += (dot(P.G[j],grads_up(upC,k))-dot(myG_temp[j],grads_up(upC,k)) );
        for(int k=0,j=N2; k<NP2; k++,j++)
          v2 += (dot(P.G[j],grads_dn(dnC,k))-dot(myG_temp[j],grads_dn(dnC,k)));
        ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
                                 -cdet*lapl_sum)
                           -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    } // usingCSF
  }
}

void MultiSlaterDeterminantFast::registerTimers()
{
  RatioTimer.reset();
  RatioGradTimer.reset();
  RatioAllTimer.reset();
  Ratio1Timer.reset();
  Ratio1GradTimer.reset();
  Ratio1AllTimer.reset();
  UpdateTimer.reset();
  EvaluateTimer.reset();
  AccRejTimer.reset();
  TimerManager.addTimer (&RatioTimer);
  TimerManager.addTimer (&RatioGradTimer);
  TimerManager.addTimer (&RatioAllTimer);
  TimerManager.addTimer (&Ratio1Timer);
  TimerManager.addTimer (&Ratio1GradTimer);
  TimerManager.addTimer (&Ratio1AllTimer);
  TimerManager.addTimer (&UpdateTimer);
  TimerManager.addTimer (&EvaluateTimer);
  TimerManager.addTimer (&AccRejTimer);
}


}
/***************************************************************************
 * $RCSfile$   $Author: jnkim $
 * $Revision: 3416 $   $Date: 2008-12-07 11:34:49 -0600 (Sun, 07 Dec 2008) $
 * $Id: MultiSlaterDeterminantFast.cpp 3416 2008-12-07 17:34:49Z jnkim $
 ***************************************************************************/
