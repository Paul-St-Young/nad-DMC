//////////////////////////////////////////////////////////////////
// (c) Copyright 2003-  by Jeongnim Kim
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//   National Center for Supercomputing Applications &
//   Materials Computation Center
//   University of Illinois, Urbana-Champaign
//   Urbana, IL 61801
//   e-mail: jnkim@ncsa.uiuc.edu
//
// Supported by
//   National Center for Supercomputing Applications, UIUC
//   Materials Computation Center, UIUC
//////////////////////////////////////////////////////////////////
// -*- C++ -*-
#include "QMCWaveFunctions/Fermion/MultiSlaterDeterminantFast.h"
#include "QMCWaveFunctions/Fermion/MultiDiracDeterminantBase.h"
#include "ParticleBase/ParticleAttribOps.h"

namespace qmcplusplus
{

MultiSlaterDeterminantFast::MultiSlaterDeterminantFast(ParticleSet& targetPtcl, MultiDiracDeterminantBase* up, MultiDiracDeterminantBase* dn):
  RatioTimer("MultiSlaterDeterminantFast::ratio"),
  RatioGradTimer("MultiSlaterDeterminantFast::ratioGrad"),
  RatioAllTimer("MultiSlaterDeterminantFast::ratio(all)"),
  Ratio1Timer("MultiSlaterDeterminantFast::detEval_ratio"),
  Ratio1GradTimer("MultiSlaterDeterminantFast::detEval_ratioGrad"),
  Ratio1AllTimer("MultiSlaterDeterminantFast::detEval_ratio(all)"),
  UpdateTimer("MultiSlaterDeterminantFast::updateBuffer"),
  EvaluateTimer("MultiSlaterDeterminantFast::evaluate"),
  AccRejTimer("MultiSlaterDeterminantFast::Accept_Reject")
{
  registerTimers();
  //Optimizable=true;
  Optimizable=true;
  OrbitalName="MultiSlaterDeterminantFast";
  usingCSF=false;
  NP = targetPtcl.getTotalNum();
  nels_up = targetPtcl.last(0)-targetPtcl.first(0);
  nels_dn = targetPtcl.last(1)-targetPtcl.first(1);
  FirstIndex_up=targetPtcl.first(0);
  FirstIndex_dn=targetPtcl.first(1);
  Dets.resize(2);
  Dets[0]=up;
  Dets[1]=dn;
  myG.resize(NP);
  myL.resize(NP);
  myG_temp.resize(NP);
  myL_temp.resize(NP);
  DetID.resize(NP);
  for(int i=0; i<targetPtcl.groups(); ++i)
    for(int j=targetPtcl.first(i); j<targetPtcl.last(i); ++j)
      DetID[j]=i;
  usingBF=false;
  BFTrans=0;
}

OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
{
  MultiDiracDeterminantBase* up_clone = new MultiDiracDeterminantBase(*Dets[0]);
  MultiDiracDeterminantBase* dn_clone = new MultiDiracDeterminantBase(*Dets[1]);
  MultiSlaterDeterminantFast* clone = new MultiSlaterDeterminantFast(tqp,up_clone,dn_clone);
  if(usingBF)
  {
    BackflowTransformation *tr = BFTrans->makeClone(tqp);
    clone->setBF(tr);
  }
  clone->resetTargetParticleSet(tqp);
  clone->C2node_up=C2node_up;
  clone->C2node_dn=C2node_dn;
  clone->Optimizable=Optimizable;
  clone->C=C;
  clone->myVars=myVars;
  clone->usingCSF=usingCSF;
  clone->usingBF=usingBF;
  if (usingCSF)
  {
    clone->CSFcoeff=CSFcoeff;
    clone->CSFexpansion=CSFexpansion;
    clone->DetsPerCSF=DetsPerCSF;
  }
  return clone;
}

MultiSlaterDeterminantFast::~MultiSlaterDeterminantFast() { }

void MultiSlaterDeterminantFast::resetTargetParticleSet(ParticleSet& P)
{
  if(usingBF)
  {
    BFTrans->resetTargetParticleSet(P);
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(BFTrans->QP);
  }
  else
  {
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(P);
  }
}

//  void MultiSlaterDeterminantFast::resize(int n1, int n2)
//  {
//  }

void MultiSlaterDeterminantFast::testMSD(ParticleSet& P, int iat)
{
//     APP_ABORT("Testing disabled for safety");
  app_log() <<"Testing MSDFast. \n";
  int n = nels_up+nels_dn;
  ParticleSet::ParticleGradient_t G(n),G0(n);
  ParticleSet::ParticleLaplacian_t L(n),L0(n);
  ValueType log, log0;
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  /*
       app_log() <<"Testing evaluate(P,G,L). \n";
       cout<<endl <<endl;
       cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;

       for(int i=0; i<n; i++) {
         cout<<i  <<"\n"
             <<"  x: " <<G(i)[0]-G0(i)[0] <<"\n"
             <<"  y: " <<G(i)[1]-G0(i)[1] <<"\n"
             <<"  z: " <<G(i)[2]-G0(i)[2] <<"\n"
             <<"  d2: " <<L(i)-L0(i) <<"\n"
             <<endl;
       }
       cout<<endl <<endl;
       APP_ABORT("end of test 1");
  */
  Walker_t::Buffer_t wbuffer;
  wbuffer.clear();
  log=registerData(P,wbuffer);
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  PosType dr;
  dr[0] = 0.1;
  dr[1]=0.05;
  dr[2] = -0.01;
  PosType newpos(P.makeMove(iat,dr));
  app_log() <<"Testing ratio(P,dG,dL). \n";
  G=0;
  G0=0;
  L=0;
  L0=0;
//     log = msd->ratio(P,iat,G,L);
  log0 = ratio(P,iat,G0,L0);
  cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;
  for(int i=0; i<n; i++)
  {
    cout<<i  <<"\n"
        <<"  x: " <<G(i)[0]-G0(i)[0] <<"  " <<G(i)[0]   <<"\n"
        <<"  y: " <<G(i)[1]-G0(i)[1] <<"  " <<G(i)[1] <<"\n"
        <<"  z: " <<G(i)[2]-G0(i)[2] <<"  " <<G(i)[2] <<"\n"
        <<"  d2: " <<L(i)-L0(i) <<"  " <<L(i) <<"\n"
        <<endl;
  }
  cout<<endl <<endl;
  APP_ABORT("After MultiSlaterDeterminantFast::testMSD()");
}

void MultiSlaterDeterminantFast::updateCoeff(RealType RminusRo){
  // update determinant coeffients with ion position

  // !!! hard-code coefficient interpolation
  RealType myslope[]={
    0,0.0235407560904,0.0457833757883,-0.00999139939578,-0.0237891489408,-0.000994399877923,0.000994399931109,-0.00198891101827,0.00187982100467,0.00187982100467,0.00375957364159,0.00120522706782,0.00120522706782,-0.00117426124521,-0.00117426124521,-0.00152691292046,-0.00178493014476,-0.00178493014476,0.00178493023938,0.00178493023938,-0.00356976125342,-0.00356976125342,-0.00110029074949,-0.00110029074949,0.000909583923835,-0.000909583891958,0.00181915297352,-0.00382264537503,-0.00382264537503,-0.00631207200524,-0.00631207200524,0.0012510918922,0.0012510918922,-0.00295385868589,-0.00295385868589,0.00381000656801,0.00381000656801,0.00559901193277,0.00313535468053,0.00313535468053,0.00208230847952,-0.00104115290911,0.00104115290342,-0.00104115290911,0.00104115290342,-0.00208230847419,0.00208230847952,-0.00208230847419,0.00416465107123,-0.0011163208393,-0.0011163208393,-0.00223251075879,0.0111187130079,-0.0111187129136,-0.0222374334121,0.000665689511848,-0.000665689514447,0.00133135581624,-0.00668508981948,-0.00668508981948,-0.000262295135471,0.000131155065437,-0.000131155052372,0.000131155065437,-0.000131155052372,0.000262295288042,-0.000262295135471,0.000262295288042,-0.000524633819165,0.000155370419675,0.000155370419675,0.00296122854169,-0.000593533496976,-0.000593533496976,-0.000593533496976,-0.000593533496976,0.000371005534184,0.000371005534184,-0.000542959643101,-0.000542959643101,-0.00108590766541,0.00591874853066,0.0210255433431,0.0210255433431,-0.010163370074,0.010163370077,0.0203267462431,-0.00426620505508,-0.00426620505508,0.00619070563389,0.00619070563389,0.00091017595989,0.00091017595989,-0.00577870969874,0.00577870984977,-0.00226276156606,-0.00226276156606,0.00101096256645,-0.0010109624901,-0.00202195276834,0.000253831127321,
    0.00344909657381,0.00344909657381,0.00105113447821,0.00105113447821,-0.00105113447868,-0.00105113447868,0.00210228540071,0.00210228540071,0.00462879577643,0.00310025850139,0.00292753651227,0.00311593338055,-0.00311593336403,-0.00623187741924,-0.000179783067507,-0.0011267302276,0.00112673021903,0.00225346559173,-0.00233299645304,0.00233299646502,-0.0046660125935,-0.00142523212642,0.000712620612088,-0.000712620638367,-0.000712620638367,0.000712620612088,-0.00142523212642,-0.00850135379073,0.00116358312971,0.00116358312971,0.00232712459094,-0.00133299336395,5.48732167883e-05,5.48732167883e-05,0.00147233248875,0.000873392576776,-0.000873392497119,0.0017467728096,-0.000246265629535,0.000246265636218,-0.000492515438174,-0.000384487226019,-0.000384487226019,-0.000491887157076,0.000491887097951,-0.000983799496306,-0.000477170917132,0.00023858912204,-0.000238589139602,0.00023858912204,-0.000238589139602,0.00047717095772,-0.000477170917132,0.00047717095772,-0.000954345143696,0.00227871038302,0.00187996892309,0.00187996892309,-0.000542795801462,0.000542795824223,0.00108559032515,0.00213332605641,0.00213332605641,0.00426668084693,0.000387204018625,-0.000193603064673,0.00019360312131,-0.000193603064673,0.00019360312131,-0.000387204045974,0.000387204018625,-0.000387204045974,0.000774423608396,0.000127829081578,0.00117104641166,0.00163622207143,-0.0016362221268,-0.000243920662484,-0.000243920662484,-4.38212493898e-05,2.19088869561e-05,-2.19088898085e-05,-2.19088898085e-05,2.19088869561e-05,-4.38212493898e-05,-0.000695428687331,-0.000695428687331,0.00125883098444,-0.0012588309538,-0.00251766152423,-0.00173316026581,0.00106992411909,0.00106992411909,-0.00106992410963,-0.00106992410963,0.00213985074179,0.00213985074179,0.00302031464339,0.00302031464339,-0.00109571847457,
    -0.00109571847457,0.00196703799528,-0.00196703800049,-0.00393407491132,-0.00144571422547,0.000369576501828,0.000369576501828,0.00073915178742,0.0205285216794,-0.0205285216797,-0.0410572069347,-0.000204405602538,0.000204405724756,-0.000408799775549,0.000530557529948,0.000530557529948,-0.000530557516612,-0.000530557516612,0.00106112132985,0.00106112132985,-0.00133721072227,0.00133721072805,0.00267442551268,-0.000411084315628,0.000287567387546,0.000287567387546,0.000287567387546,0.000287567387546,0.00297417564647,0.00297417564647,-0.000750609315496,-0.000750609315496,0.000750609316174,0.000750609316174,-0.00150120381232,-0.00150120381232,-0.00232276544422,-0.00232276544422,-0.0519655530395,0.0519655530911,0.0220303108216,0.000202089569896,-0.000202089874167,-0.000404167774023,0.00119111685305,-0.000595554701252,0.000595554691568,0.000595554691568,-0.000595554701252,0.00119111685305,0.00126683832487,0.00126683832487,-0.000340022335811,0.000340022315936,0.000680032534,-0.023647671682,0.0236476717381,0.000616000748001,0.000809252218023,-0.000941046450802,0.000941046474142,-0.0018821089641,0.0011453299021,-0.00114559404386,-0.00114559404386,0.00107859045456,0.00107859045456,-0.00107859044992,-0.00107859044992,0.00215716489622,0.00215716489622,0.00118189040298,-0.00118189039557,-0.00236378229682,0.000165320276189,0.000165320276189,-0.000165320263408,-0.000165320263408,0.000330668193622,0.000330668193622,0.00239020785826,0.00239020785826,-1.87849560399e-05,1.87845199406e-05,-3.75774768027e-05,-0.00578793268153,-0.00127262102004,-0.00127262102004,-0.00173475976627,-0.0011105294707,0.00111052947553,-0.00222106267931,0.000916516084957,0.000916516084957,-0.000916516093033,-0.000916516093033,0.00183303249311,0.00183303249311,-8.4676674591e-05,-0.0010303847531,
    -0.0010303847531,-0.00105198574192,-0.00105198574192,-0.0021039922831,0.00010293830034,-0.000102938266674,0.000205865127529,-0.00103458105645,-0.00103458105645,0.00103458106212,0.00103458106212,-0.00206916178101,-0.00206916178101,0.00125656734642,-0.000628284049153,0.000628284032571,0.000628284032571,-0.000628284049153,0.00125656734642,-0.00166483223771,-0.00166483223771,-0.00318172131304,-0.0051949345526,0.00519493454839,0.0103898617605,-0.000189005842353,0.000189006198671,-0.000378011339347,0.000606743791379,0.000303373100518,-0.000303373098845,0.000303373100518,-0.000303373098845,-0.000606743790015,-0.000606743790015,0.000606743791379,0.00121348924313,-3.15229898116e-05,3.15223309705e-05,-6.30461941404e-05,-0.00197582125926,-0.00197582125926,-0.000143405487805,-0.000143405487805,-0.000143405487805,-0.000143405487805,-1.7277602856e-05,-1.7277602856e-05,-1.7277602856e-05,-1.7277602856e-05,0.00200539571075,0.00200539571075,-0.00200539571856,-0.00200539571856,0.0040107914473,0.0040107914473,0.000259462649002,0.000259462649002,-0.00245226810544,0.00214891331876,-0.00214891330289,-0.00429783778406,0.00159554377538,-0.000475651675811,-0.000475651675811,-0.000234924782992,-0.000234924782992,-0.00129188295626,-0.00129188295626,-0.00258377205561,0.000280789258198,-0.000280789328275,0.000561567025995,0.000809172632235,-0.000235595911221,0.000235595932383,-0.000471204700413,-0.000230576817345,0.000230576837912,0.000461158101408,0.000209695397791,0.00168566071727,0.00168566071727,0.00337133576749,0.00147264572943,-0.00147264571066,-0.00294528287357,0.00235964109323,4.06128378575e-05,-2.03087752246e-05,2.03086806424e-05,2.03086806424e-05,-2.03087752246e-05,4.06128378575e-05,4.189668704e-05,-4.1896708519e-05,8.38088958915e-05,-0.000702794532314,-0.000702794532314,0.0752331033549,
    -0.0752331033225,0.00260822682356,0.00260822682356,0.00260822682356,0.00260822682356,-0.00104729708631,-0.00104729708631,0.0015105002614,0.0015105002614,-7.50739969406e-05,7.50733380991e-05,-0.000150135403597,0.000860916359685,0.000860916359685,0.000860916359685,0.000860916359685,0.0022406327582,-0.00224063276283,-0.00448127736419,0.00111807043224,0.000559039694503,-0.00055903969208,0.000559039694503,-0.00055903969208,-0.00111807042421,-0.00111807042421,0.00111807043224,0.00223615599375,-0.00154508089593,-0.00154508089593,-0.000628909502818,-0.000628909502818,0.000114110324693,0.000114110324693,-0.00011411022712,-0.00011411022712,0.000228223128457,0.000228223128457,0.000435670010954,-0.000435670013257,0.000871355975254,-0.00495208751039,-0.00169403271837,-0.00169403271837,-0.00169403271837,-0.00169403271837,0.00106519309127,-9.7587278636e-05,0.00142370731932,0.00142370731932,0.00142370731932,0.00142370731932,0.000338470412542,-0.0019237038231,-0.0019237038231,-0.000657186277909,0.000746224649431,0.000746224649431,0.000128041411619,0.000128041411619,0.000128041411619,0.000128041411619,-0.0208572559959,0.0208572559568,-0.000188173132944,-0.000188173132944,0.00585545362887,-0.00585545362899,-0.0117109195006,-0.00046698987543,-0.000233497531235,0.000233497524917,-0.000233497531235,0.000233497524917,0.000466989833335,0.000466989833335,-0.00046698987543,-0.000933990863366,0.00026669715771,0.00026669715771,-0.000774091773227,-0.000774091773227,0.000360163687554,-0.00274201888698,-0.00274201888698,-0.00109734176941,-0.00109734176941,0.00134768139181,0.00134768139181,-0.00189013331692,-0.00189013331692,-0.00378027099888,5.02963821078e-05,5.02963821078e-05,5.02963821078e-05,5.02963821078e-05,-0.000320634293018,-0.000320634293018,-0.000641263959102,-0.000897123497571,
    -0.00044856140387,0.000448561406535,-0.00044856140387,0.000448561406535,0.000897123500154,0.000897123500154,-0.000897123497571,-0.00179424073784,-0.000426431373957,-0.000426431373957,3.98278838141e-05,3.98278838141e-05,-0.000290172381615,0.00029017236697,-0.000580341089432,-0.00151189322602,-8.90545028058e-05,8.90545111338e-05,-0.000178107040189,-0.000205135759419,-0.000205135759419,0.00108737290897,0.00108737290897,-0.0010873729054,-0.0010873729054,0.0021747322991,0.0021747322991,0.000583925871611,0.000583925871611,0.00116784363475,0.0002840598302,0.0002840598302,-0.000284059830742,-0.000284059830742,0.000568121096514,0.000568121096514,0.00110232660159,0.00110232660159,0.0022046532178,0.00288695744218,0.00288695744218,0.000388440171867,0.000194218523721,-0.000194218519421,0.000194218523721,-0.000194218519421,-0.000388440204337,-0.000388440204337,0.000388440171867,0.000776867644042,0.000588825614669,-0.000588825632732,0.0011776540838,0.000868415694577,-0.000868415693689,-0.00173684695808,0.00140705984016,0.00140705984016,-0.0010549006155,-0.0010549006155,0.000932719865408,-0.000534850118247,-0.000534850118247,-0.00107629129861,-0.00107629129861,-2.93593544681e-05,0.0108135661043,-0.0108135660775,0.00132739664759,0.00132739664759,-0.00216287787112,0.0016053496576,0.0016053496576,0.00321071467367,0.000361572768462,0.000361572768462,-0.000249276375026,-0.000249276375026,-0.000660248639934,0.000343197000918,0.000343197000918,-0.000343196977343,-0.000343196977343,0.000686396512019,0.000686396512019,0.000588265316051,-0.000588265296769,-0.00117652664303,-0.000332353654169,-0.000332353654169,-0.00127458266825,-0.00127458266825,6.57603749186e-05,6.57603749186e-05,0.00206020375223,0.00206020375223,0.000353329391851,0.000176666090977,-0.00017666608285,0.000176666090977,
    -0.00017666608285,-0.000353329397767,-0.000353329397767,0.000353329391851,0.000706656729273,0.000699336291301,0.000699336291301,-0.00139968163265,0.00139968164234,0.00279936599683,0.000149570853392,0.000149570853392,0.000299145961541,4.50202766076e-05,4.50202766076e-05,-4.50203152522e-05,-4.50203152522e-05,9.00403812942e-05,9.00403812942e-05,0.000218597425982,0.000218597425982,0.0011107355619,0.0011107355619,-0.000123495458499,0.0002113278393,-0.000105660346881,0.000105660337209,-0.000105660346881,0.000105660337209,-0.000211327806674,0.0002113278393,-0.000211327806674,0.000422643918003,0.000223324983773,0.000223324983773,-0.000223324985584,-0.000223324985584,0.000446650334402,0.000446650334402,0.000879806194384,0.000879806194384,-0.000879806196259,0.000879806194384,-0.000879806196259,-0.000879806196259,0.000879806194384,-0.000879806196259,-0.000879806196259,-0.00263941774806,0.000786890956645,-0.000786890907332,-8.51122390694e-05,-8.51122390694e-05,-0.000272309587047,-0.000272309587047,-0.00119924629908,0.000229426631994,-0.000114714342755,0.000114714343533,-0.000114714342755,0.000114714343533,-0.000229426623782,0.000229426631994,-0.000229426623782,0.000458855505144,-0.00053279913206,0.00649896724522,0.00649896724522,-0.00160538895653,-0.00160538895653,0.000241391131998,0.000120695953938,-0.000120695952285,0.000120695953938,-0.000120695952285,-0.000241391127262,-0.000241391127262,0.000241391131998,0.000482782223101,-0.000326339976211,0.000326339973294,-0.000652676191746,-0.00266012812974,-0.00266012812974,-0.000956089863572,-0.000478044531595,0.000478044533771,0.000478044533771,-0.000478044531595,-0.000956089863572,-0.000217633088268,-0.000217633088268,9.14006586875e-05,9.14006586875e-05,0.000103132578883,0.000103132578883,0.00575688448523,-0.00575688451299,-0.0115137757345,-0.00157310330752,
    -0.00157310330752,0.000127326870217,0.000127326870217,0.000361710902898,0.000361710902898,0.000956679240726,-0.000525370042501,-0.000525370042501,0.000525370058686,0.000525370058686,-0.00105074143098,-0.00105074143098,-0.00017903187687,-0.00017903187687,-0.00110151745147,-0.00110151745147,-0.000365157645988,-0.000365157645988,0.000157503980219,0.000157503980219,-0.00197493007999,-0.00197493007999,-0.00105307041872,-0.00105307041872,0.0044854120948,0.0044854120948,0.00243385647176,0.00243385647176,0.0048677202699,-0.000197007581697,-0.00209358609872,-0.00209358609872,-0.000127740531643,-0.000127740531643,0.00665714316769,0.00665714316769,-0.0012061614112,-0.0012061614112,0.000720784458077,-0.000720784448354,0.000720784458077,-0.000720784448354,6.29825861427e-05,-6.29825886874e-05,-0.000125966437569,0.00071541510767,0.00071541510767,0.00194999380193,0.00194999380193,-0.0030291180546,-0.0030291180546,-0.000616102469025,0.000616102473033,-0.00123221347127,0.00058101780743,0.00058101780743,0.000633690239933,0.000633690239933,-0.000574618056662,0.000574618095925,0.00114923025661,-0.000394987276937,-0.000394987276937,-7.06047208201e-05,-7.06047208201e-05,0.00060664801501,-0.00241340910023,-0.00241340910023,-0.000302398285297,0.000302398294908,-0.000604796052613,-9.71771293114e-05,9.71771706285e-05,0.000194352043327,0.000125735810894,-0.000125735812372,0.000251471805995,-0.000308423851445,0.000308423923994,0.000616848498244,-0.000272309586945,0.000136154737266,-0.000136154726251,0.000136154737266,-0.000136154726251,0.000272309528103,-0.000272309586945,0.000272309528103,-0.000544609103001,0.000256234195142,0.000256234195142,-9.53245568916e-05,-9.53245568916e-05,0.00124798478628,-0.00124798479992,-0.00249598142958,-0.0285175111718,0.0285175111039,-0.000136576907247,-0.000136576907247,
    0.0012062089954,-0.00120620900958,-0.00241240947357,0.00135411886318,0.00135411886318,-0.00138536411416,-0.00138536411416,0.000160911280747,0.000160911280747,-7.9746786399e-05,7.97467644841e-05,0.000159493617592,0.00126416952861,0.00126416952861,-4.29377947114e-05,4.29377634256e-05,-8.58684613911e-05,2.21046839561e-05,-1.10529383529e-05,1.10529217822e-05,-1.10529383529e-05,1.10529217822e-05,-2.21047068789e-05,2.21046839561e-05,-2.21047068789e-05,4.42118113738e-05,0.000156821550884,-0.000156821543996,-0.000313641290525,-9.71525045007e-05,-9.71525045007e-05,-7.41985594566e-05,-7.41985594566e-05,7.41985159601e-05,7.41985159601e-05,-0.000148398271725,-0.000148398271725,8.00091487628e-05,-8.00091436671e-05,0.000160029278116,0.0010894386368,0.0010894386368,0.00217888583566,-4.3917547234e-05,-4.3917547234e-05,0.000680844934436,0.000680844934436,0.0014097268001,0.0014097268001,0.00233616595058,0.00233616595058,0.000254430944436,0.000127215738633,-0.000127215729998,0.000127215738633,-0.000127215729998,-0.000254430938045,-0.000254430938045,0.000254430944436,0.000508861826247,0.0056680048475,0.0056680048475,0.000190720152701,0.000190720152701,-0.000372561015882,-0.000372561015882,-0.000275997217573,-0.000275997217573,-0.000338511908815,-0.000338511908815,0.000338511880003,0.000338511880003,-0.000677022684717,-0.000677022684717,0.000307575147851,0.000307575147851,-0.000307575130657,-0.000307575130657,0.000615150310404,0.000615150310404,-0.00343733516318,0.000168796936316,0.000168796936316,0.000168796936316,0.000168796936316,-0.000163601082596,0.000163601077138,-0.000327200161762,-0.000810825342234,-0.00040541393224,0.000405413935212,0.000405413935212,-0.00040541393224,-0.000810825342234,-0.000351171845179,-0.000351171845179,-0.00157660586299,-0.00157660586299,0.00048540829316,0.00048540829316,
    0.000212635442186,0.000106317757761,-0.000106317756254,0.000106317757761,-0.000106317756254,-0.000212635469007,-0.000212635469007,0.000212635442186,0.000425278115466,-5.39436847074e-05,-5.39436847074e-05,0.0014979423158,-0.000846223433848,4.62494691505e-05,4.62494691505e-05,-4.62494858356e-05,-4.62494858356e-05,9.24994516546e-05,9.24994516546e-05,8.62422101137e-05,8.62422101137e-05,0.00144268360723,0.00144268360723,-0.000911790776624,-0.000911790776624,-0.000298638166033,0.000149319707055,-0.000149319700945,0.000149319707055,-0.000149319700945,0.000298638175547,0.000298638175547,-0.000298638166033,0.000597277903646,0.000223146365802,-0.000223146372993,0.000446285661951,0.000188033303955,9.40169166238e-05,-9.40169172889e-05,9.40169166238e-05,-9.40169172889e-05,-0.000188033302209,-0.000188033302209,0.000188033303955,0.000376067850569,0.00012924057466,6.46197624395e-05,-6.46197678942e-05,-6.46197678942e-05,6.46197624395e-05,0.00012924057466,-0.00107233042159,-0.00107233042159,-0.00214467739564,0.000395779411431,-0.000395779476115,0.000791558707641,0.000228483207857,0.000228483207857,0.000456961056523,-0.000249754196074,0.000696042961748,0.000696042961748,-0.00223507607626,-0.00223507607626,-0.00447016385315,0.000526116642966,0.000526116642966,6.83925037341e-05,6.83925037341e-05,0.000679750971097,-0.000679750971288,0.00037391604254,0.00037391604254,0.000333719779513,0.000333719779513,0.000333719779513,0.000333719779513,-0.000232223925197,-0.000232223925197,-0.000966539649294,-0.000966539649294,0.000274770429416,0.000274770429416,-0.000504920652969,-0.000282956680104,-0.000282956680104,-0.00056591574915,-7.58964521145e-06,7.58939675436e-06,-1.51851445571e-05,0.000533845091028,0.000533845091028,-3.11573435208e-05,-1.55786629251e-05,1.55786738979e-05,-1.55786629251e-05,1.55786738979e-05,3.11573373972e-05,
    3.11573373972e-05,-3.11573435208e-05,-6.23136997664e-05,5.56611266618e-05,5.56611266618e-05,-0.000962506826666,-0.000962506826666,-0.000375374028986,-0.000375374028986,-0.000375374028986,-0.000375374028986,9.6437406978e-05,-9.64373659717e-05,0.000192873723251,-2.5085843214e-05,-2.5085843214e-05,2.50857712118e-05,2.50857712118e-05,0.00099458766843,-0.000994587675184,0.00198919057804,6.72088947339e-05,6.72088947339e-05,0.000134417670765,-0.00106438026639,-0.000532190395568,0.000532190384965,0.000532190384965,-0.000532190395568,-0.00106438026639,0.000190546173966,-0.000190546216415,0.000190546173966,-0.000190546216415,0.000381091247514,-0.000381091268798,-0.00162032715993,0.00162032716099,-0.00324066977745,0.000330417611168,0.000330417611168,-0.000617828961871,-0.000308915342016,0.000308915353802,-0.000308915342016,0.000308915353802,0.000617828945028,0.000617828945028,-0.000617828961871,-0.00123565204156,0.000251011497846,0.000125505609415,-0.000125505609353,-0.000125505609353,0.000125505609415,0.000251011497846,-0.000251011497296,0.000251011497846,0.000502024609188,-0.00188412191979,-0.00188412191979,0.00173629509699,-0.00173629509101,-0.00347257397596,-1.28985354326e-05,1.28978765916e-05,2.57963379255e-05,-2.41185994278e-05,-2.41185994278e-05,2.41186934935e-05,2.41186934935e-05,-4.82393989126e-05,-4.82393989126e-05,0.00119555308616,0.00119555308616,0.00119555308616,0.00119555308616,-5.12546679304e-05,-5.12546679304e-05,-0.000775073498045,0.000775073492788,0.00155015156656,0.00292779082246,-0.00292779082196,-0.005855582317,-0.000129850886776,0.000129850839187,0.000259702166338,0.000853097438124,9.00026937546e-05,9.00026937546e-05,-9.00027072747e-05,-9.00027072747e-05,0.000180005479701,0.000180005479701,-0.00419727806144,-0.00419727806144,-6.0121428552e-05,6.01215730725e-05,-0.000120239448011,
    0.000224113203845,-0.000112056745267,0.000112056751472,-0.000112056745267,0.000112056751472,-0.000224113176559,-0.000224113176559,0.000224113203845,-0.000448231200925,-0.000101795485498,-0.000101795485498,0.000101795487102,0.000101795487102,-0.000203591510004,-0.000203591510004,2.07647516596e-05,2.07647516596e-05,0.00018566749084,0.000369889852278,0.000369889852278,0.0026182928486,0.0026182928486,8.93071951983e-05,4.46529416786e-05,-4.46529344418e-05,4.46529416786e-05,-4.46529344418e-05,-8.9307203018e-05,-8.9307203018e-05,8.93071951983e-05,0.000178615013861,0.000131906288389,0.000131906288389,0.000168345561304,0.000168345561304,-0.000166171775773,0.000166171788074,-0.000332352520054,-9.1429294908e-05,-4.57152132409e-05,4.57152205652e-05,-4.57152132409e-05,4.57152205652e-05,9.14293277587e-05,9.14293277587e-05,-9.1429294908e-05,-0.000182855804278,0.000219596789418,-0.000219596808007,-0.000439194230264,-0.000218934434472,-0.000321844565847,-0.000321844565847,0.000321844564992,0.000321844564992,-0.000643688531474,-0.000643688531474,-0.00133043966809,-0.00133043966809,-0.000188783629386,0.00018878365096,-0.000377572043585,4.90647358069e-05,-0.000235000870737,-0.000235000870737,0.000359373532279,-0.000730501054184,-0.000730501054184,0.000169082678888,-0.000169082673592,-0.000338165312779,0.000647194637577,-9.35763442691e-05,-9.35763442691e-05,-0.000199592541215,-0.000199592541215,-0.000265600510604,-0.000265600510604,-0.000265600510604,-0.000265600510604,-8.37566286432e-05,-8.37566286432e-05,8.3756622947e-05,8.3756622947e-05,-0.000167514496295,-0.000167514496295,-0.00155418766253,-0.00155418766253,0.00120921629196,-0.00120921628201,-0.00241844463047,0.000488665186864,-0.000244331218326,0.000244331204855,-0.000244331218326,0.000244331204855,-0.000488665174716,0.00024798615462,-0.000247986151991,0.000400022050712,
    0.000400022050712,0.000800041670837,0.00175741254823,0.00175741254823,-0.000951168433735,-0.000951168433735,0.000948278565819,0.000948278565819,6.74940955459e-07,6.74940955459e-07,-6.75599796551e-07,-6.75599796551e-07,1.34829477261e-06,1.34829477261e-06,0.000449168445849,-0.000224585328585,0.000224585329704,-0.000224585328585,0.000224585329704,-0.000449168492462,0.000449168445849,-0.000449168492462,0.000898338570372,0.000764767285414,0.000764767285414,-6.12306026311e-05,6.12305477941e-05,-0.000122461763724,-0.000299388204447,0.000299388271213,-0.000299388204447,0.000299388271213,-0.00059877695873,0.00059877720434,-0.00100864640653,-0.00100864640653,-0.00254947133502,-0.00254947133502,0.000352442573813,-0.000352442545329,0.000704888018814,0.000442111117421,0.000442111117421,-0.000253550660644,-0.000253550660644,-0.000507105729769,-0.000141942014998,-7.09708229918e-05,7.0970817688e-05,7.0970817688e-05,-7.09708229918e-05,-0.000141942014998,0.00023621628576,-0.00023621629234,0.000472432704418,-8.68162092019e-05,8.68161630733e-05,0.000173632740845,0.000491702894053,0.000491702894053,0.000132826764045,-0.00013282676776,-0.00013282676776,0.000132826764045,-0.000265652401484,0.000265652406626,0.00114810000732,0.00114810000732,0.00114810000732,0.00114810000732,0.000265387102568,-0.000265387091484,0.000530774367306,0.00013351452405,0.00013351452405,0.00278527398207,0.00278527398207,-0.000534596597026,-0.000504884803231,-0.000504884803231,-0.00105252094263,5.69770655675e-05,5.69770655675e-05,-0.000341543045391,-0.000341543045391,0.000341543022795,0.000341543022795,0.000683089021292,0.000683089021292,3.18412444381e-05,3.18412444381e-05,-3.18411880551e-05,-3.18411880551e-05,6.36831421438e-05,6.36831421438e-05,-5.52789161965e-05,-5.52789161965e-05,-0.000541090161823,-0.000541090161823,-0.000122441126672,
    -0.000402014625858,0.00020100802561,-0.000201008034344,0.00020100802561,-0.000201008034344,0.000402014613247,-0.000402014625858,0.000402014613247,-0.00080402380344,-0.000385347967962,0.000385347965099,-0.000770706027447,0.000203108619171,0.000203108619171,0.000606527123243,0.000606527123243,-2.69893013066e-05,2.69892960248e-05,-5.39810757208e-05,-2.8662947309e-06,-1.43318817525e-06,1.4325293336e-06,1.4325293336e-06,-1.43318817525e-06,-2.8662947309e-06,0.00651996849414,-0.00651996850222,-0.0130399587067,-0.000134663911793,-6.73315289665e-05,6.73315296064e-05,-6.73315289665e-05,6.73315296064e-05,0.000134663906963,0.000134663906963,-0.000134663911793,-0.000269327714779,-0.000561979530687,-0.000280988353039,0.000280988353733,0.000280988353733,-0.000280988353039,-0.000561979530687,0.00173829291798,0.00173829291798,-6.95951886085e-05,-6.95951886085e-05,0.000227574749047,-0.000227574693891,0.000227574749047,-0.000227574693891,-0.00025964681195,-0.00025964681195,0.00025964681344,0.00025964681344,-0.000519293314244,-0.000519293314244,0.00157229402927,0.00157229402927,-0.00131695677426,0.000252946520102,-0.00025294651736,0.000505894684782,-0.000345838349815,0.000345838364508,0.000691681623178,0.000612579664415,0.000612579664415,-0.000887155429917,0.000887155431332,-0.00177431319415,6.52299728351e-06,6.52299728351e-06,0.000424366415612,-0.000212184651628,0.000212184657675,-0.000212184651628,0.000212184657675,-0.000424366400386,-0.000424366400386,0.000424366415612,-0.000848737047143,0.00142022386549,-0.00142022389189,-0.00142022389189,0.00142022386549,3.46858648694e-05,-3.46857403715e-05,-6.9368979883e-05,0.00079395224992,0.00079395224992,-0.000366757851702,-0.000366757851702,-0.000733509296977,0.000181240823215,0.000181240823215,0.0003176545071,0.000237665466766,0.00196799393495,-0.000292191840205,
    -0.000292191840205,0.000292191840939,0.000292191840939,0.000584383695829,0.000584383695829,0.000315602127709,-0.00031560213354,0.000631204255642,-0.00135551926538,-0.00135551926538,-0.00135551926538,-0.00135551926538,0.0021104916712,0.0021104916712,2.34425912076e-05,2.34425912076e-05,2.34425912076e-05,2.34425912076e-05,4.68849011909e-05,4.68849011909e-05,6.94235789827e-05,-6.94239377272e-05,0.00013884505186,8.86542903633e-05,-8.86542071587e-05,-0.000177309144325,0.000281745550599,0.000140873661759,-0.000140873640647,0.000140873661759,-0.000140873640647,-0.000281745522643,0.000281745550599,-0.000281745522643,-0.000563495625023,-0.000169776824088,-0.000169776824088,-7.64163487635e-05,3.82092767604e-05,-3.82091515322e-05,3.82092767604e-05,-3.82091515322e-05,7.64161588393e-05,-7.64163487635e-05,7.64161588393e-05,-0.000152830138465,-0.000334583463595,-0.000334583463595,0.000334583449356,0.000334583449356,-0.000669165834569,-0.000669165834569,0.000428198640296,-2.44716497035e-05,-1.22349688595e-05,1.22348818837e-05,1.22348818837e-05,-1.22349688595e-05,-2.44716497035e-05,0.00219724778017,0.00219724778017,4.05276982111e-05,4.05276982111e-05,8.10587453675e-05,0.000400504950005,-0.000153127376121,0.000153127374605,-0.000306259831002,0.000118759091893,0.000118759091893,-0.00017611940676,0.000587164592051,0.000587164592051,-0.00159357859543,-0.00159357859543,-0.000369999100344,-0.000339804288138,-0.000169902730912,0.000169902785482,0.000169902785482,-0.000169902730912,-0.000339804288138,8.36229373103e-05,0.000639071134983,0.000639071134983,0.00127814513991,-0.000155914247424,-0.000155914247424,-0.000311827361291,-7.90479693151e-06,7.90500245871e-06,-1.58107459734e-05,3.09531547448e-05,-3.09531238361e-05,6.18979993643e-05,0.000301200768223,-0.000301200769195,0.000602401489586,-0.000146778198018,-0.000146778198018,
    -0.000312811574207,-0.000156405946172,0.000156405951705,-0.000156405946172,0.000156405951705,0.00031281157312,0.00031281157312,-0.000312811574207,-0.000625624757059,0.000242809946645,0.000242809946645,-0.00103323604503,0.00103323611252,-0.00206647115307,-0.000431265771516,-0.000431265771516,-0.000687671283754,-0.000687671283754,0.000687671282442,0.000687671282442,-0.00137534097958,-0.00137534097958,0.00162321491336,0.00162321491336,0.000643890260077,-0.000321945976342,0.000321945987668,-0.000321945976342,0.000321945987668,-0.000643890253718,-0.000643890253718,0.000643890260077,-0.00128778390015,6.26496133205e-06,3.13321090585e-06,-3.13299828245e-06,3.13321090585e-06,-3.13299828245e-06,-6.26507653846e-06,-6.26507653846e-06,6.26496133205e-06,1.25306245182e-05,-7.08769005367e-05,-7.08769005367e-05,7.08769073889e-05,7.08769073889e-05,-0.000141752380025,-0.000141752380025,6.71629596067e-05,-6.71629750241e-05,0.000134326720358,-0.00033491934938,0.000334919358847,-0.00033491934938,0.000334919358847,7.92708966962e-05,7.92708966962e-05,-5.40947076681e-05,-5.40947076681e-05,0.000396775377122,0.000396775377122,-7.33399769379e-05,-3.66699904625e-05,3.66699924896e-05,-3.66699904625e-05,3.66699924896e-05,7.33399628568e-05,7.33399628568e-05,-7.33399769379e-05,-0.000146678653292,0.000829483789919,0.000815117693978,-0.000815117695602,0.00163022045112,0.000977687896629,-0.000141390618038,0.000141390634207,0.000282779118709,-0.000657377969179,0.000564015026111,0.000282007677773,-0.000282007681248,-0.000282007681248,0.000282007677773,0.000564015026111,-0.000143718946915,-0.000143718946915,-0.000287438405516,6.7307399074e-05,6.7307399074e-05,0.000219081369531,-0.000219081387049,0.000438163352546,9.00231313149e-05,-4.50115346009e-05,4.50115297629e-05,-4.50115346009e-05,4.50115297629e-05,-9.00230896172e-05,9.00231313149e-05,
    -9.00230896172e-05,0.000180045769723,-0.000763647050983,-0.000763647050983,8.46655333958e-05,8.46655333958e-05,-1.70005024738e-05,1.70008433666e-05,-1.70005024738e-05,1.70008433666e-05,-1.70005024738e-05,1.70008433666e-05,-1.70005024738e-05,1.70008433666e-05,-1.70005024738e-05,-5.1004149407e-05,0.000859516910776,0.000859516910776,0.000859516910776,0.000859516910776,0.000809068850277,0.000325860582508,-0.000270248104511,-0.000270248104511,-0.00086710045946,0.000867100466975,-0.00173419804663,-0.00106420903319,-0.00106420903319,9.11247534933e-05,9.11247534933e-05,-9.11246204856e-05,-9.11246204856e-05,0.000182249615791,0.000182249615791,0.000217970360916,0.000108985914048,-0.000108985921706,0.000108985914048,-0.000108985921706,-0.000217970363286,-0.000217970363286,0.000217970360916,0.000435942744035,0.00014552049568,7.2760461415e-05,-7.27604627367e-05,7.2760461415e-05,-7.27604627367e-05,-0.000145520498666,-0.000145520498666,0.00014552049568,0.000291041737154,0.00177663362404,0.00177663362404,0.0003698417778,0.0003698417778,-0.000369841777885,-0.000369841777885,-0.000739681220983,-0.000739681220983,-0.000422653902127,-0.000422653902127,-1.50441692787e-05,-1.50441692787e-05,1.5044390332e-05,1.5044390332e-05,-3.00883414523e-05,-3.00883414523e-05,6.48581631219e-05,6.48581631219e-05,0.000531624552585,0.00109304081975,0.00109304081975,-0.000577135303877,-0.000577135303877,2.41417840024e-05,-2.41416987316e-05,4.82840139676e-05,0.000234210877692,-0.000117105494171,0.000117105502349,0.000117105502349,-0.000117105494171,0.000234210877692,-3.18545975946e-05,-3.18545975946e-05,6.37354393465e-05,-6.37352419686e-05,-0.000127467292016,0.000152987962293,0.000152987962293,0.000180549615649,-9.02749534229e-05,9.02749597945e-05,-9.02749534229e-05,9.02749597945e-05,-0.000180549614045,-0.000180549614045,0.000180549615649,
    -0.00036109915854,0.000321059166567,0.000321059166567,0.000440426996575,0.000440426996575,-5.47292688671e-05,4.14857891763e-05,4.14857891763e-05,-4.14857692378e-05,-4.14857692378e-05,-8.29747170412e-05,-8.29747170412e-05,7.62177024587e-05,7.62177024587e-05,-0.000741679382743,-0.000741679382743,-0.000456212435259,-0.000456212435259,0.000375769831223,0.00018788494713,-0.000187884951058,0.00018788494713,-0.000187884951058,-0.00037576982513,-0.00037576982513,0.000375769831223,0.000751533994522,-0.00286671569845,-0.00286671569845,-0.00286671569845,-0.00286671569845,-0.000409183517917,-0.000409183517917,-0.000409183517917,-0.000409183517917,0.000643154834705,0.000643154834705,8.32266698687e-05,8.32266698687e-05,0.000719184427577,-0.000719184419474,-0.0014383682136,-0.00311974919082,-0.00311974919082,0.00017566431258,0.00017566431258,0.000696399317666,0.000696399317666,0.000733906183986,0.000733906183986,0.000121620248947,0.000121620248947,0.000802021792972,-0.000401010184023,0.000401010195338,0.000401010195338,-0.000401010184023,0.000802021792972,0.000281648789375,0.000281648789375,-0.000281648791637,-0.000281648791637,0.000563298270281,0.000563298270281,-0.000144313463492,-0.000144313463492,0.000644040876164,0.000644040876164,0.00128807565944,0.000404087058578,0.000406828698967,0.000203414981728,-0.000203414982185,0.000203414981728,-0.000203414982185,-0.000406828699601,-0.000406828699601,0.000406828698967,0.000813663638867,0.000615270454896,0.000615270454896,0.000149613778101,0.000323618772111,0.000323618772111,0.000647237546632,6.94895046559e-05,-6.94894765942e-05,0.000138979249915,-0.000891036749247,-0.000891036749247,-0.000113484282652,-0.000113484282652,0.000353056102571,0.000353056102571,-0.000154316665426,-0.000154316665426,-0.000154316665426,-0.000154316665426,0.000193437557957,0.000193437557957,
    4.59436966101e-05,4.59436966101e-05,-4.59437700173e-05,-4.59437700173e-05,9.18875043334e-05,9.18875043334e-05,0.000136291602516,-6.81456240408e-05,6.81456094429e-05,6.81456094429e-05,-6.81456240408e-05,0.000136291602516,0.00105843931402,-0.00030827093478,0.000154132783704,0.000154132783704,-0.000154132763601,-0.000154132763601,0.000308270981919,0.000737602035173,0.000737602035173,-0.000737602034775,-0.000737602034775,0.00147520106008,0.00147520106008,-0.000998894097101,-0.000998894097101,0.000164726639601,-0.000164726645878,0.000329454631698,-0.000368615093924,-0.000368615093924,-0.000737229684605,0.00253207361197,0.00253207361197,-0.00130869085205,-0.00130869085205,-0.00358374956124,-0.000351907398791,-0.000351907398791,-2.69843039385e-05,-2.69843039385e-05,-0.000175849540025,-0.000175849540025,-0.000175849540025,-0.000175849540025,-0.000351699626253,-0.000351699626253,-0.000165355920271,0.000165355915155,0.00033070885473,-0.000614833316475,-0.00010061883837,-0.00010061883837,0.000305963215374,0.000305963215374,0.000611925937417,-0.000295223917147,-0.000295223917147,-0.000295223917147,-0.000295223917147,-0.000106166491955,-5.30833886456e-05,5.30833964975e-05,5.30833964975e-05,-5.30833886456e-05,-0.000106166491955,-0.00189164935655,0.00189164936462,-0.000148015782537,-0.000148015782537,-6.88923970811e-05,-3.44462817362e-05,3.44462826207e-05,-3.44462817362e-05,3.44462826207e-05,6.88923877497e-05,6.88923877497e-05,-6.88923970811e-05,-0.000137784303284,-0.000585023441691,-0.000585023441691,0.000279064746747,0.000279064746747,-5.93788821541e-05,5.93788804333e-05,-0.00011875616558,-9.84846219712e-05,9.84846239286e-05,-0.000196968961453,-0.000121633819342,0.000121633781753,-0.000243266545948,0.000114446590934,-0.000114446590956,-0.000228889613731,0.000247543557061,-0.000247543563449,0.000247543557061,-0.000247543563449,
    0.000495087452718,-0.000495087467025,0.000268607930921,-0.000268607946894,-0.000537216819617,0.000123447016756,6.17239452533e-05,-6.1723948745e-05,6.17239452533e-05,-6.1723948745e-05,-0.000123447013113,-0.000123447013113,0.000123447016756,0.000246894546707,-0.000251420892328,0.000125710910174,-0.000125710911729,0.000125710910174,-0.000125710911729,0.00025142089414,-0.000251420892328,0.00025142089414,-0.00050284260838,0.000900294871154,-0.00090029488053,-0.00090029488053,0.000900294871154,-0.00145833955895,-0.00145833955895,-8.08172141618e-05,8.08171704411e-05,-0.000161633457086,-3.7254124591e-05,0.000502745355321,-0.000108514946572,0.000108514948057,-0.000217033773642,0.000888321612757,-0.000198738197721,-0.000198738197721,2.25809553812e-05,1.04835494801e-05,1.04835494801e-05,0.000283053390121,0.000283053390121,0.00100899209283,0.00100899209283,0.000327113548911,-0.000327113548023,0.000654228841533,0.0016180980822,0.0016180980822,-0.00025580278646,0.000255802709672,-0.000511606011894,-8.2442029797e-05,-8.2442029797e-05,0.000674309706127,0.000674309706127,-9.47748467874e-05,-4.73876288944e-05,4.7387652919e-05,-4.73876288944e-05,4.7387652919e-05,9.47748786756e-05,9.47748786756e-05,-9.47748467874e-05,-0.000189550254869,0.000196778483424,-0.000196778437592,-0.000393559431225,-0.00101336715106,0.00101336715462,0.000931117728141,-0.000931117724604,-0.00186223256569,0.000117185430974,-0.000117185435117,0.000234373221935,6.18113452783e-05,6.18113452783e-05,5.95028750792e-05,9.41746032666e-05,9.41746032666e-05,-9.41745803781e-05,-9.41745803781e-05,0.000188349686947,0.000188349686947,0.000702308664083,-0.000351155291735,0.000351155299619,0.000351155299619,-0.000351155291735,0.000702308664083,-0.000466016426691,0.000466016483171,-0.000250240089604,0.000250239992608,-0.000500480901355,-0.000136418573776,
    0.000136418582931,-0.00027283838381,-6.37484083684e-05,-6.37484083684e-05,-6.37484083684e-05,-6.37484083684e-05,0.00020576737383,0.00020576737383,-0.000370868543126,6.81346589644e-05,6.81346589644e-05,6.81346589644e-05,6.81346589644e-05,6.67981363789e-05,3.33992715183e-05,-3.3399089976e-05,-3.3399089976e-05,3.33992715183e-05,6.67981363789e-05,-0.000271053130424,0.000271053163402,0.00054210564892,0.00165162369646,-0.00165162371476,0.000145935726487,7.29679237591e-05,-7.29679237131e-05,-7.29679237131e-05,7.29679237591e-05,0.000145935726487,-0.000102892450098,0.000102892440119,-0.000205785130727,0.00158153575944,-0.00158153575852,-0.00316307323812,0.000841354322426,-0.000841354358196,0.000262887294835,0.000262887294835,0.000339104198893,0.000339104198893,-0.000153041346765,7.65204478674e-05,-7.6520446178e-05,7.65204478674e-05,-7.6520446178e-05,0.000153041350422,-0.000383935835637,-0.000383935835637,-3.08107653983e-05,3.08111822429e-05,-6.16252831571e-05,-0.000110940299966,-5.54704315717e-05,5.54704332481e-05,5.54704332481e-05,-5.54704315717e-05,-0.000110940299966,0.000110940297142,-0.000110940299966,-0.000221881608175,0.000560650904611,0.000189341384041,0.000189341384041,-0.000189341356507,-0.000189341356507,0.000189341384041,0.000189341384041,0.000189341384041,-0.000189341356507,-0.000189341356507,0.000568026636115,-8.1689102624e-05,8.168910868e-05,-0.000163377435314,-0.000111125385196,-0.000132008298246,0.000132008442067,0.000264027690757,-2.83671791592e-05,2.83668339284e-05,-5.6739587899e-05,-0.00125794517673,0.00125794518065,0.00251589089027,0.00100904619835,0.000517642399188,0.000517642399188,-0.000277197585258,-0.000138600215842,0.000138600214871,-0.000138600215842,0.000138600214871,0.000277197582578,0.000277197582578,-0.000277197585258,-0.000554400409766,0.000265111767676,-0.000265111911927,
    0.000530224882377,-7.25186220486e-05,-7.25186220486e-05,-0.000227952551875,-0.000227952551875,-0.000227952551875,-0.000227952551875,7.60104097627e-06,-7.60105768216e-06,1.51964486551e-05,0.00019977488422,0.00019977488422,0.000322653128642,0.000161327234348,-0.000161327234059,-0.000161327234059,0.000161327234348,0.000322653128642,0.000214487884884,0.000107243527224,-0.000107243547334,-0.000107243547334,0.000107243527224,0.000214487884884,-0.000278323462862,0.000278323453862,0.000556646807772,0.00059897129447,-0.000598971272152,0.00119794851409,-0.000928739666497,0.000928739669032,-0.00185747940711,-0.000241268135214,0.000241268164242,-0.000482547003357,-0.000170873515799,-0.000170873515799,0.000170873536207,0.000170873536207,0.000341749777168,0.000341749777168,-0.000107047749683,0.000107047770663,-0.000214094554393,0.000324097858152,0.000162049529757,-0.000162049530592,0.000162049529757,-0.000162049530592,-0.000324097864032,-0.000324097864032,0.000324097858152,0.000648195746141,0.000346837740644,-0.000346837754476,-0.000693682139962,7.94340007092e-05,-0.00156258706015,-0.00104035677305,0.000520178418266,-0.000520178406506,-0.000520178406506,0.000520178418266,-0.00104035677305,0.0002825073221,0.0002825073221,-0.000282507308286,-0.000282507308286,0.00056501336481,0.00056501336481,0.000427344179689,0.000427344179689,0.000427344179689,0.000427344179689,9.69065697136e-05,-9.69065842797e-05,-9.69065842797e-05,9.69065697136e-05,0.00090909338194,0.00090909338194,0.00051775563998,0.00051775563998,0.000978863119129,0.000978863119129,-7.1704195704e-05,-3.58514283322e-05,3.58514058066e-05,3.58514058066e-05,-3.58514283322e-05,-7.1704195704e-05,-4.74189351854e-05,4.74188171998e-05,9.48344218458e-05,0.000401902479205,0.000401902479205,0.000182024779383,0.000182024779383,-0.000182024780162,-0.000182024780162,
    0.000364050733022,0.000364050733022,8.31601981742e-05,-8.22064609235e-05,-4.1103128318e-05,4.11031311619e-05,4.11031311619e-05,-4.1103128318e-05,-8.22064609235e-05,9.88803075497e-05,-9.88803465884e-05,-0.000197760321309,0.00022080137432,-0.000220801392103,-0.000441605297329,0.000197315977117,0.000197315977117,-0.00910641461415,0.00910641457983,-0.000506201657959,0.000506201659978,0.00101240458583,2.57464598543e-05,2.57464598543e-05,2.57464598543e-05,2.57464598543e-05,-0.000692359594126,-0.000692359594126,0.000136873638634,-0.000136873638173,0.000273743201956,-0.000299864335262,-0.000225691129449,-0.000225691129449,0.000225691123842,0.000225691123842,0.000451382513019,0.000451382513019,0.000437094071987,0.000437094071987,-0.000405182552062,-0.000405182552062,0.000405182551572,0.000405182551572,-0.000810367128528,-0.000810367128528,-0.000779514986525,-0.000779514986525,-0.00130761133569,-0.000653805200802,0.000653805205364,0.000653805205364,-0.000653805200802,-0.00130761133569,0.000230941460865,0.000230941460865,-0.000243390181051,0.00090920636793,-0.000454602517701,0.000454602517824,0.000454602517824,-0.000454602517701,0.00090920636793,0.00114564969157,-0.000572827000369,0.000572827001073,0.000572827001073,-0.000572827000369,0.00114564969157,0.000609552503273,0.000609552503273,-0.000403614473748,0.000403614473624,-0.000807231395078,0.000169388390652,0.000169388390652,-0.000619291299478,-0.000619291299478,0.000619291249677,0.000619291249677,-0.00123858865157,-0.00123858865157,-0.000165503310447,-0.000165503310447,0.00043032078896,0.00043032078896,-0.00043032078865,-0.00043032078865,0.000860640490981,0.000860640490981,-4.69431309353e-05,4.69431374076e-05,9.38854630894e-05,-0.000149932080173,7.49665119204e-05,-7.49665114265e-05,7.49665119204e-05,-7.49665114265e-05,0.00014993207942,-0.000149932080173,
    0.00014993207942,-0.000299864682849,5.12727770593e-05,5.12727770593e-05,-5.1272761888e-05,-5.1272761888e-05,0.000102546739107,0.000102546739107,-0.00103623484994,-0.00103623484994,0.00082407045664,-0.000824070464093,-0.000953448607295,-0.000953448607295,-0.000953448607295,-0.000953448607295,-5.13506087284e-05,-5.13506087284e-05,-0.000102701483595,-0.000375954224165,0.00018797817299,-0.000187978182061,0.00018797817299,-0.000187978182061,0.000375954248211,-0.000375954224165,0.000375954248211,-0.000751910574117,8.47476125313e-05,-8.4747600361e-05,0.000169497546165,0.00113334377918,-0.000224865801068,-0.000224865801068,0.00038085674633,-0.000380856783132,0.000761717258761,-0.000657177795045,-0.000657177795045,-0.000346968356583,-0.000346968356583,-8.59236477154e-05,-8.59236477154e-05,-0.00103362747867,-0.00103362747867,9.2967416311e-05,9.2967416311e-05,0.000185909212641,-0.000829093770342,-0.000829093770342,0.000217812691841,0.000217812691841,-0.000128480367873,-0.000128480367873,-0.000375102294941,-0.000375102294941,0.000317802348676,0.000317802348676,-0.000478989215657,0.000478989336238,0.000957986315415,2.40119111476e-05,2.40119111476e-05,-2.40119193153e-05,-2.40119193153e-05,4.80236879847e-05,4.80236879847e-05,-0.000122060763305,-0.000122060763305,-0.000660493380415,-0.000491584638094,0.00049158464032,-0.00098316842206,0.000356754902336,0.000356754902336,3.98880520498e-05,1.99438965601e-05,-1.9943902625e-05,1.99438965601e-05,-1.9943902625e-05,-3.98880613506e-05,-3.98880613506e-05,3.98880520498e-05,7.97753704774e-05,-0.000651447343261,-0.000651447343261,-0.000267690595774,-0.000267690595774,-0.000719284816886,0.00071928481271,0.00143856933107,0.000138185543095,-6.90928749311e-05,6.90928705342e-05,-6.90928749311e-05,6.90928705342e-05,-0.000138185552087,0.000138185543095,-0.000138185552087,0.000276370841133,
    -0.00140924282178,-0.00140924282178,0.000231760061076,0.000231760061076,0.00169166988722,-2.33899760546e-05,-2.33899760546e-05,-0.00666889969604,0.00666889969235,0.0133378156965,-0.000195328973313,7.44015929905e-05,-7.4401592314e-05,-9.36712570214e-05,4.68356228016e-05,-4.68356364175e-05,4.68356228016e-05,-4.68356364175e-05,9.36712930892e-05,-9.36712570214e-05,9.36712930892e-05,-0.000187345097606,-0.00024403047461,-0.000262410410167,-0.000262410410167,-0.000406425276795,-0.000406425276795,0.000406425276305,0.000406425276305,-0.000812849024809,-0.000812849024809,-0.000229312389304,-0.000229312389304,-0.000229312389304,-0.000229312389304,0.000173103897024,0.000173103897024,-1.62794601557e-05,-1.62794601557e-05,0.00178303210032,0.00178303210032,-6.21642052984e-05,-3.10820633054e-05,3.10820621762e-05,3.10820621762e-05,-3.10820633054e-05,-6.21642052984e-05,0.000647879133053,-0.000305443498429,-0.000305443498429,-0.000279736561081,0.000139868792297,-0.000139868794383,0.000139868792297,-0.000139868794383,0.000279736554116,-0.000353414229777,-0.000353414229777,-0.000136742351694,6.83705831635e-05,-6.83705793379e-05,6.83705831635e-05,-6.83705793379e-05,0.000136742323921,0.000136742323921,-0.000136742351694,0.000273484714239,0.000318713806836,0.000318713806836,-0.00310323698814,0.00310323700181,0.00620649520305,-5.64090750506e-05,5.64090801912e-05,-0.000112818479117,9.26994077805e-06,-9.26962381598e-06,-1.85400098569e-05,-0.000347783682759,-0.000347783682759,0.000347783682025,0.000347783682025,-0.000695566880372,-0.000695566880372,0.000240626822892,0.000240626822892,-0.000240626840206,-0.000240626840206,0.000481252296526,0.000481252296526,8.15246062984e-05,8.15246062984e-05,-0.000156688963487,-7.83448780873e-05,7.83448774386e-05,-7.83448780873e-05,7.83448774386e-05,0.000156688966692,0.000156688966692,-0.000156688963487,
    -0.000313378507932,2.10860226772e-05,2.10860226772e-05,2.10860226772e-05,2.10860226772e-05,-7.68548505888e-05,7.68549151444e-05,-0.000153709196032,-0.000249334251135,-0.000249334251135,-0.000415756985142,-0.000415756985142,0.000415756994013,0.000415756994013,-0.000831512760511,-0.000831512760511,-0.00110041342037,-0.00110041342037,0.00110041342283,0.00110041342283,-0.00220082651631,-0.00220082651631,0.000356629669371,0.000356629669371,0.000395048953413,0.000395048953413,0.000395048953413,0.000395048953413,6.34664264628e-05,6.34664264628e-05,-0.000195174384079,0.00019517439998,-0.000195174384079,0.00019517439998,-0.000390347655207,0.000390347653329,0.00045619206808,0.00045619206808,0.000224666000875,-0.000224666038729,0.000449331876955,-9.05595139047e-05,-9.05595139047e-05,4.82936629056e-05,2.41467598793e-05,-2.41467650535e-05,2.41467598793e-05,-2.41467650535e-05,-4.8293670478e-05,0.0001922781254,-0.000192278109352,0.000384556762564,-0.00112754270426,-0.000104106141626,-0.000104106141626,-0.000231791073106,-0.000231791073106,0.000231791071943,0.000231791071943,-0.000463582209837,-0.000463582209837,-0.000137645139363,-0.000137645139363,-0.000416942797831,0.000208472152422,-0.000208472177833,-0.000208472177833,0.000208472152422,-0.000416942797831,0.000250510683134,0.000250510683134,0.00106375469345,0.00106375469345,-6.37788637922e-05,6.37791297909e-05,0.000260076572485,0.000260076572485,-1.29219654044e-06,-1.29219654044e-06,9.3678213191e-05,-0.000112048960997,-5.60248965593e-05,5.60248969383e-05,-5.60248965593e-05,5.60248969383e-05,0.000112048958426,-0.000112048960997,0.000112048958426,0.000224095284881,0.000155385346974,-0.000155385316474,-0.000310768340244,0.0004552456497,-0.000227623218146,0.00022762318701,-0.000227623218146,0.00022762318701,-0.000455245567471,-0.000899588578007,-0.000899588578007,
    -0.000632945631974,-0.000632945631974,9.59580614795e-05,4.79792573807e-05,-4.79792548486e-05,4.79792573807e-05,-4.79792548486e-05,-9.59580526359e-05,-9.59580526359e-05,9.59580614795e-05,0.000191916066853,-0.00083844861428,0.000838448609424,0.00167690209561,-0.000501578854111,-0.000501578854111,-0.00114419870227,0.000572099385754,-0.000572099408061,-0.000572099408061,0.000572099385754,-0.00114419870227,0.00074878078968,0.00074878078968,0.000379771983128,0.000379771983128,-0.000269131912043,-0.000269131912043,-0.000269131912043,-0.000269131912043,-2.6960410664e-05,2.69604130823e-05,-5.39220358453e-05,-8.18291086446e-07,-4.08931549289e-07,4.08272708086e-07,-4.08931549289e-07,4.08272708086e-07,8.1763224502e-07,-8.18291086446e-07,8.1763224502e-07,1.63553951715e-06,-0.00114178729776,-0.00114178729776,0.0017755671877,3.53018020892e-05,3.53018020892e-05,3.53018020892e-05,3.53018020892e-05,7.67677167101e-05,7.67677167101e-05,0.000153536920439,0.000100951362101,-0.000100951363604,-0.000201904311482,0.000312133597953,0.000314527051069,0.00033051261787,-0.000165256888954,0.000165256885964,0.000165256885964,-0.000165256888954,0.00033051261787,0.000140984124287,-5.76837555491e-05,5.76837569537e-05,-0.000115369123139,-0.00013518798478,-0.00013518798478,0.000150452474377,0.000150452474377,0.000209682113438,-0.000209682106318,0.000209682113438,-0.000209682106318,-0.000259174375461,0.000259174375278,0.000518350412551,-4.76980117318e-05,4.76980016024e-05,-9.53953813279e-05,0.00213409066664,-0.000140978110144,-0.000140978110144,0.000922543867139,0.000236117544565,0.000236117544565,-0.00056096638809,0.000560966570887,0.00112192825056,0.000634582601677,0.000634582601677,0.00121349706876,0.00121349706876,0.000375674539848,-0.00037567453221,-0.000751348827646,-0.00109293045618,0.000546464388569,-0.000546464396701,
    0.000546464388569,-0.000546464396701,0.00109293053028,-0.00109293045618,0.00109293053028,-0.00218584787524,0.000110541638448,0.000110541638448,-0.000256593837027,-0.000256593837027,0.000255828263387,-0.000127913455948,0.000127913456166,0.000127913456166,-0.000127913455948,0.000255828263387,0.000255828263387,-0.000255828247635,0.000511657415707,0.000263233317758,-0.000263233348819,0.000526466274324,-0.00139377889837,0.00139377890532,0.00278756833687,7.84521945058e-05,0.000241998901718,-0.000241998905362,-0.00048399876332,-0.00110858278185,-0.00110858278185,0.00127600789977,-0.000346385437432,-0.000346385437432,2.58217886333e-05,2.58217886333e-05,-2.58216421016e-05,-2.58216421016e-05,-5.16449089517e-05,-5.16449089517e-05,-0.000643104970961,-0.000643104970961,0.000772382478459,0.000772382478459,0.000831846391232,0.000831846391232,-0.000141428694877,-0.000141428694877,0.00100978347693,0.00100978347693,-0.000272292509461,0.000272292512848,-0.000544585073112,0.000753933742099,0.000376967496728,-0.000376967492772,0.000376967496728,-0.000376967492772,-0.000753933741117,-0.000753933741117,0.000753933742099,0.00150786539376,0.00153910947174,0.00153910947174,6.26183798965e-05,3.13085819938e-05,-3.13086162829e-05,-3.13086162829e-05,3.13085819938e-05,6.26183798965e-05,-0.001168641838,-0.000584321014029,-0.000584321014029,0.00058432101413,0.00058432101413,0.00116864184069,0.00116864184069,0.00116864184069,0.00233728391192,0.000285399227325,-0.00014269990936,0.000142699909583,0.000142699909583,-0.00014269990936,0.000285399227325,0.000869194469415,0.000869194469415,-0.0002140765954,0.000214076501345,-0.000428158126603,-9.79075466836e-05,-9.79075466836e-05,-0.000422845791171,2.46279565879e-05,-2.46278984892e-05,4.92567858077e-05,-0.000663777557307,-0.000663777557307,-0.000463546410951,-0.000463546410951,
    0.000668344255791,0.000668344255791,-0.000668344259635,-0.000668344259635,0.00133669269952,0.00133669269952,-0.00317230142223,0.000106237025765,-0.000106237085798,-0.000212472525567,0.000188013360139,-0.00018801335986,0.000376025838241,-0.000256646146658,0.00012832222411,-0.000128322243587,0.00012832222411,-0.000128322243587,0.000256646159622,-0.000129589352794,0.000129589359475,0.000259179791837,8.12319079995e-05,-8.12318480216e-05,0.00016246927274,0.000429088619619,0.000429088619619,-0.000429088634146,-0.000429088634146,0.00085817668784,0.00085817668784,6.74318216676e-05,-3.37164236675e-05,3.37164416766e-05,-3.37164236675e-05,3.37164416766e-05,-6.74317090356e-05,6.74318216676e-05,-6.74317090356e-05,0.000134863383268,-0.000729649506262,0.00020679866138,-0.000206798662248,-0.000413597398457,-0.000712044494569,-0.000712044494569,-0.000485639974191,-0.000485639974191,-0.000971281378106,-0.000138177371594,6.90886833983e-05,-6.90886840628e-05,6.90886833983e-05,-6.90886840628e-05,0.000138177374807,-0.000138177371594,0.000138177374807,-0.000276354913807,1.06215304734e-05,5.31063384311e-06,-5.31067067197e-06,-5.31067067197e-06,5.31063384311e-06,1.06215304734e-05,0.000481682218935,-0.00043546432347,-0.00043546432347,-0.000468214412502,-0.000468214412502,0.00131323880818,0.00131323880818,0.000317385386324,-0.000133865298805,-0.000133865298805,-0.000687528469796,0.00132425202108,0.00132425202108,0.000133305817101,-0.0001333058552,-0.000266611647504,0.00117521300898,0.00117521300898,-0.00117521301062,-0.00117521301062,0.00235042722621,0.00235042722621,-9.03627694054e-05,-9.03627694054e-05,-9.03627694054e-05,-9.03627694054e-05,-0.00018072534465,-0.00018072534465,-0.000321003697292,-0.000321003697292,0.000321003697921,0.000321003697921,-0.000642007897809,-0.000642007897809,0.000154043993078,0.000154043993078,
    -0.00300424402832,-0.00300424402832,-9.89304831703e-05,-9.89304831703e-05,9.89304920179e-05,9.89304920179e-05,-0.000197860493936,-0.000197860493936,0.000389416412348,-0.0012920390054,-0.0012920390054,-0.000646889869147,-0.000646889869147,-0.000646889869147,-0.000646889869147,-0.000279975002119,0.000279975018809,0.000559950755322,0.000360653040198,0.000360653040198,-0.00036065304013,-0.00036065304013,0.000721303682448,0.000721303682448,-1.81637011829e-05,-1.81637011829e-05,1.81637049204e-05,1.81637049204e-05,-3.63271563946e-05,-3.63271563946e-05,0.000436871765723,-0.000218435803044,0.000218435790798,0.000218435790798,-0.000218435803044,0.000436871765723,-0.00089932690387,0.000107968767128,0.000107968767128,0.000146106263957,0.000146106263957,2.28102561413e-05,-2.28102478595e-05,4.56206301796e-05,0.000640105744129,0.000640105744129,-4.00183716774e-05,-4.00183716774e-05,-0.000285596771219,-0.000285596771219,0.000285596768742,0.000285596768742,0.000571193583334,0.000571193583334,-0.00122245037436,0.00122245031821,0.0024449049561,-0.00026209946237,-0.00026209946237,0.000568569272663,-0.000284285055461,0.000284285037442,-0.000284285055461,0.000284285037442,-0.0005685692874,1.59344124191e-05,1.59344124191e-05,1.59344124191e-05,1.59344124191e-05,0.000669321280791,-0.000669321266754,-0.00133864035353,-0.000511002994698,-0.000255501888028,0.000255501891629,-0.000255501888028,0.000255501891629,0.00051100299314,0.00051100299314,-0.000511002994698,-0.00102200917143,0.00243923700794,-0.00243923700507,-0.000826510656161,-0.000352211276994,0.00035221127528,-0.000704423656725,-0.000206756366448,-0.000206756366448,-7.70001624922e-05,7.70001262751e-05,-0.000153998901119,-0.00104439780204,-0.00104439780204,-0.00104439780204,-0.00104439780204,-0.000316868852949,-0.000316868852949,9.52216164999e-05,-9.52215637982e-05,
    0.000190444434152,0.000545173193104,0.000545173193104,0.00036057148973,0.000180285714697,-0.000180285710109,0.000180285714697,-0.000180285710109,-0.000360571489012,-0.000360571489012,0.00036057148973,0.000721144481715,0.00142164298969,0.00142164298969,-0.00294236420292,0.00294236419922,0.00588474046526,-0.000199644972655,0.0019008264282,-0.00190082644206,-8.89544082181e-05,-8.89544082181e-05,-8.89544082181e-05,-8.89544082181e-05,-0.000631808371284,-0.000631808371284,-5.78994155356e-05,7.22698508326e-05,7.22698508326e-05,0.000144540011866,-0.000235087496304,0.000117543344122,-0.000117543346282,-0.000117543346282,0.000117543344122,-0.000235087496304,-0.000235087496304,0.000235087505698,-0.000470176664457,-0.000614247684276,-2.02247916964e-05,2.02248861101e-05,-4.04488848518e-05,-0.000107376443351,0.000107376443289,-0.000214752688828,-0.000146686137496,-0.000225888374248,-0.000225888374248,-0.000225888374248,-0.000225888374248,-0.00110370834496,-0.00110370834496,0.00248766819158,0.00248766819158,0.00060808374284,0.00120848274201,0.00120848274201,0.000525470016285,0.000253510830762,0.000253510830762,-0.000253510825613,-0.000253510825613,-0.000507023362343,-0.000507023362343,-0.000443058959164,-0.000443058959164,-0.000443058959164,-0.000443058959164,-0.000153235254808,-0.000153235254808,0.000153235256566,0.000153235256566,-0.000306470292382,-0.000306470292382,-2.94451484276e-05,1.47227945785e-05,-1.47227987318e-05,-1.47227987318e-05,1.47227945785e-05,-2.94451484276e-05,-0.000425872036028,0.000212934428587,-0.000212934425279,0.000212934428587,-0.000212934425279,0.000425872041903,-0.000713954699211,-0.000356978149095,0.000356978146372,-0.000356978149095,0.000356978146372,0.000713954689804,0.000713954689804,-0.000713954699211,-0.00142791425808,0.000136132285303,0.000136132285303,-0.000204258580704,-0.000102129119064,
    0.000102129118322,0.000102129118322,-0.000102129119064,-0.000204258580704,8.04039304606e-05,-8.04045893021e-05,0.000160806730035,-0.000437427016679,0.000437427108335,-9.9948008028e-05,-9.9948008028e-05,-0.000351413404436,0.000351413438336,0.000702830753046,-0.000310096453884,-8.67327344314e-05,-8.67327344314e-05,-8.67327344314e-05,-8.67327344314e-05,-0.000185498898802,0.000185498883669,0.000370997858837,5.7702868801e-06,5.7702868801e-06,5.7702868801e-06,5.7702868801e-06,1.15395448317e-05,1.15395448317e-05,-0.00694555437692,-0.000368979697605,0.00036897975582,-0.000298773295833,0.000298773296355,-0.000597547017147,-0.000413925783928,-0.000413925783928,8.19177964384e-06,8.19177964384e-06,-8.19175392186e-06,-8.19175392186e-06,1.63834251727e-05,1.63834251727e-05,-0.000511634293683,-0.000511634293683,-0.00104261257628,-0.00104261257628,0.00034503425437,-0.00034503425504,-0.000690065704444,0.00220147673989,0.00220147673989,0.000114482969065,0.000114482969065,-0.000114482974883,-0.000114482974883,0.000228965939235,0.000228965939235,-0.00128482479832,-0.00128482479832,-0.000258124251514,-0.000129061975731,0.00012906197386,-0.000129061975731,0.00012906197386,0.000258124251218,0.000258124251218,-0.000258124251514,-0.000516249356315,0.000539387175929,0.000539387175929,-0.000539387158957,-0.000539387158957,0.00107877326986,0.00107877326986,-0.000195805355931,-0.000195805355931,0.000195805355573,0.000195805355573,-0.000391609208095,-0.000391609208095,0.000137611841662,-0.00024811650604,0.000248116527203,-0.000496233307694,-0.00123818030374,0.000277827623062,-0.000277827599929,0.000277827623062,-0.000277827599929,0.000199694530645,0.000199694530645,0.000819289466329,0.000917083363082,-0.000917083340751,-0.00183416908787,0.00145677341987,-0.000728386519133,0.000728386524139,0.000728386524139,-0.000728386519133,
    0.00145677341987,0.000386019843016,-0.00038601983801,-0.000772035190511,-5.64470466631e-05,-5.64470466631e-05,5.64471490061e-05,5.64471490061e-05,0.000112895547979,0.000112895547979,-0.000235746132213,0.00011787349404,-0.000117873494646,0.00011787349404,-0.000117873494646,0.000235746133207,-0.000235746132213,0.000235746133207,-0.000471493244256,0.00125084498506,-0.000625422007192,0.000625422013506,0.000625422013506,-0.000625422007192,0.00125084498506,-0.00014018481426,-0.00014018481426,0.000140184816132,0.000140184816132,-0.00014018481426,-0.00014018481426,-0.00014018481426,0.000140184816132,0.000140184816132,-0.000420552784787,0.000363252805858,0.000363252805858,-0.00026589526191,0.000132947374835,-0.000132947359106,-0.000132947359106,0.000132947374835,-0.00026589526191,0.00127079852805,2.23542679746e-05,2.23542679746e-05,-2.23542422542e-05,2.23542679746e-05,-2.23542422542e-05,-2.23542422542e-05,2.23542679746e-05,-2.23542422542e-05,-2.23542422542e-05,-6.70684764815e-05,0.000188663578225,-0.000188663343941,-0.000377325771935,-4.91234558408e-06,-0.00023803093741,-0.00023803093741,-0.00023803093741,-0.00023803093741,-0.000214750959731,0.000214750952919,-0.000429502832328,0.000155273554581,-0.000155273562861,0.000155273554581,-0.000155273562861,0.000310549189187,-0.000310549209622,0.000805897974594,-0.000805897947268,-0.00161180958644,-6.45212659053e-05,-6.45212659053e-05,-6.45212659053e-05,-6.45212659053e-05,-1.35840936395e-05,-1.35840936395e-05,1.35840333539e-05,1.35840333539e-05,2.71655135152e-05,2.71655135152e-05,0.000528881616895,0.000528881616895,0.000528881616895,0.000528881616895,0.000786954222352,-0.00101634695607,0.000508175181756,-0.000508175183672,0.000508175181756,-0.000508175183672,0.00101634695935,-0.00101634695607,0.00101634695935,-0.00203269241574,-0.00069172079586,-0.00069172079586,
    -0.000106755499113,-0.000106755499113,0.000106755386077,0.000106755386077,0.000213509881618,0.000213509881618,-0.000508417875357,-0.000508417875357,-6.76348951136e-05,-3.3817660692e-05,3.38176610067e-05,-3.3817660692e-05,3.38176610067e-05,6.76349046973e-05,6.76349046973e-05,-6.76348951136e-05,-0.000135270171851,0.0011876223431,0.0011876223431,0.0011876223431,0.0011876223431,0.000430651031876,0.000215326398418,-0.000215326395665,-0.000215326395665,0.000215326398418,0.000430651031876,0.00207090239399,-0.000266432908465,-0.000266432908465,-0.00394684809783,-0.000424818196158,0.000212408267954,-0.000212408261708,-0.000212408261708,0.000212408267954,-0.000424818196158,0.000159567484925,-0.000159567414243,0.000319134660239,-0.000961800417796,-5.90125327702e-06,-5.90125327702e-06,5.90123900892e-06,5.90123900892e-06,-1.18039301944e-05,-1.18039301944e-05,-0.000274442099226,-0.000274442099226,0.000274442106709,0.000274442106709,-0.000548883017869,-0.000548883017869,-9.2120123798e-05,-0.000135490227929,-0.000135490227929,-0.000327349725001,8.68825286359e-05,8.68825286359e-05,8.68825286359e-05,8.68825286359e-05,-0.00105920540816,-0.00105920540816,0.000178577828349,-0.000178577847906,-0.000357155337307,0.00041403193808,-0.000207015851621,0.000207015848435,-0.000207015851621,0.000207015848435,-0.000414031943284,0.00041403193808,-0.000414031943284,0.000828062732749,-0.00500618252005,-0.00500618252005,0.000231721158747,0.000231721158747,-0.000231721124497,-0.000231721124497,-0.000221826056091,-0.000110912804952,0.00011091280663,0.00011091280663,-0.000110912804952,-0.000221826056091,-0.00459403998494,-0.00459403998494,9.5461416643e-05,-9.54613680017e-05,-0.000190922551683,0.000171135164167,-0.000171135148149,0.000342271708885,-6.10441481735e-05,-6.10441481735e-05,-0.000156699269071,0.000156699269378,-0.000313398793501,
    5.80612606776e-05,-5.80612662704e-05,0.000116122207412,-4.08190277829e-05,-4.08190277829e-05,5.04509803834e-06,2.52287651025e-06,-2.52263921226e-06,-2.52263921226e-06,2.52287651025e-06,5.04509803834e-06,0.000120958061223,0.000120958061223,0.000120958061223,0.000120958061223,0.000773655213428,0.000773655213428,-0.000608829982219,-0.000608829982219,-0.00121765813152,-0.000113036129012,-5.65182661249e-05,5.65181385613e-05,5.65181385613e-05,-5.65182661249e-05,-0.000113036129012,-0.000541843043123,0.000541843052492,0.00108368724239,0.000569296863707,-0.000340798383608,0.000340798363686,-0.000681595363722,-0.000649901174442,-0.000649901174442,-0.000516512324275,-0.000516512324275,-0.000516512324275,-0.000516512324275,-0.000125420817225,-0.000125420817225,0.000156285565571,-0.00015628556246,0.00031257198892,9.50023798413e-05,-9.50022595575e-05,-0.000190004740998,0.000465455418136,0.000465455418136,-0.000330723388905,-0.000165360926915,0.000165360920044,0.000165360920044,-0.000165360926915,-0.000330723388905,0.000239259133353,0.000239259133353,0.000239259133353,0.000239259133353,-0.000308117456852,-0.000308117456852,0.000308117461089,-0.000308117456852,0.000308117461089,0.000308117461089,0.000308117461089,-0.000308117456852,-0.000308117456852,-0.000924353125691,0.000361569254117,0.000361569254117,0.000164965264094,0.000164965264094,-0.000190191392196,-0.000190191392196,-0.000164092109543,0.00016409220783,0.00016409220783,-0.000164092109543,-0.000304948399311,0.000304948410277,0.00060989694788,-0.000248482722129,-0.000248482722129,-8.48408524335e-05,-8.48408524335e-05,0.00135125519638,0.00135125519638,0.000796481884654,0.000796481884654,-0.000840565195381,0.000420282223442,-0.000420282221982,-0.000420282221982,0.000420282223442,-0.000840565195381,-0.00105641814762,-0.00105641814762,-5.40646115298e-05,-5.40646115298e-05,
    5.40646113557e-05,5.40646113557e-05,-0.000108129109861,-0.000108129109861,-0.000446148452278,-0.000446148452278,-0.000165370936333,-0.000165370936333,0.000165370939874,0.000165370939874,0.000330742778617,0.000330742778617,-0.000240761562233,-0.000120381580858,0.000120381583876,-0.000120381580858,0.000120381583876,0.000240761569932,0.000240761569932,-0.000240761562233,-0.000481524767339,0.000229867970754,-0.000229867945463,-0.00045974084012,0.000903924449369,-0.000903924460472,-0.00180784830882,-0.000315338868773,-0.000315338868773,-7.51485510625e-05,-7.51485510625e-05,0.000107238046178,0.000107238046178,0.000107238046178,0.000107238046178,0.000755117659973,0.000755117659973,0.000136378488512,0.000136378488512,-0.000195855481448,0.000195855456215,6.53079045703e-05,-9.20540392813e-05,-9.20540392813e-05,-0.00050449596867,-0.00050449596867,-0.00100899449894,-1.17376561833e-05,-1.17376561833e-05,-0.000305703081886,-0.000305703081886,-0.00103760700607,-0.00103760700607,0.000158815499141,0.000158815499141,0.000253573904576,-0.000253573909069,0.000507148197217,0.000359514150464,0.000359514150464,0.000453796741717,-0.000453796738932,0.000907594838068,0.00029579832398,0.000147899772991,-0.000147899771806,0.000147899772991,-0.000147899771806,-0.000295798324291,-0.000295798324291,0.00029579832398,0.000591598164196,0.000487810133565,0.000487810133565,-0.00016646063104,0.00016646062875,-0.000332921264403,-0.000326645517766,-0.000326645517766,-0.000527027665426,-0.000527027665426,-0.000527027665426,-0.000527027665426,-0.000581422328753,-0.000581422328753,-0.000197206736577,-0.000197206736577,0.000362157919493,0.000362157919493,0.000362157919493,0.000362157919493,-0.000907171164145,-6.32694035141e-05,-6.32694035141e-05,6.32693763579e-05,6.32693763579e-05,-0.000126541565304,-0.000126541565304,6.59054515948e-05,-6.59054417515e-05,
    0.000131810999364,0.000106018995316,0.000106018995316,-0.000125409085179,-0.000125409085179,-0.000125409085179,-0.000125409085179,-0.000250817720744,-0.000250817720744,0.00301442179905,-0.00301442179562,0.000407926505915,-0.000407926515581,-3.25157314187e-05,-3.25157314187e-05,0.000973342389559,-0.000973342388548,-0.000973342388548,0.000973342389559,0.00742483760232,-0.000506603293918,0.00025330116539,-0.000253301171563,-0.000253301171563,0.00025330116539,-0.000506603293918,-2.98774194052e-05,2.98776517356e-05,-5.97543692913e-05,-0.000210905977411,0.000210905980503,-0.000421813349976,0.000196342930224,-0.000196342909351,0.000392686559842,-0.000785761065068,-0.000785761065068,-0.000522613721471,4.16795196969e-05,4.16795196969e-05,-4.16795437276e-05,-4.16795437276e-05,-0.000117793422994,-0.000117793422994,-0.000117793422994,-0.000117793422994,-0.000682734068052,-0.000682734068052,-0.000682734068052,-0.000682734068052,6.23334189687e-05,-6.23332240486e-05,0.000124664963734,-0.000316027578645,0.000316027582622,0.000632057914149,-8.6535469336e-05,-0.000906528136075,0.000906528136974,-0.000906528136075,0.000906528136974,-0.000904767024973,-0.000904767024973,0.000178306819317,0.000178306819317,-0.000178306818364,-0.000178306818364,-0.000356615057446,-0.000356615057446,0.00035391471286,0.00035391471286,-1.56729605285e-05,1.56729542988e-05,3.13460114093e-05,-0.00175097931515,-0.00175097931515,-4.30214249311e-05,4.3021608236e-05,8.60415340344e-05,-0.000309880240585,-0.000309880240585,-0.00061976125904,0.000306236968686,-0.000153118739133,0.000153118710325,0.000153118710325,-0.000153118739133,0.000306236968686,-2.04531038044e-05,2.04524449633e-05,-4.09059869755e-05,0.000253483488797,0.000126742365571,-0.000126742346588,0.000126742365571,-0.000126742346588,-0.00025348349916,-0.00025348349916,0.000253483488797,0.000506962190241,
    -0.000115602757002,-0.000115602757002,0.000188207316263,0.000188207316263,0.000636082979927,0.000636082979927,-0.00102824310112,-0.00102824310112,-4.60371703567e-05,-4.60371703567e-05,-4.60371703567e-05,-4.60371703567e-05,4.02577922573e-05,-4.02577388741e-05,-8.05199803442e-05,0.000404835264197,0.000404835264197,-0.00248290360458,0.00248290358624,0.00496580473791,-0.000333147837664,0.000166573970689,-0.000166573976473,-0.000166573976473,0.000166573970689,-0.000333147837664,-2.47249417773e-05,1.23624766859e-05,-1.23624346221e-05,-1.23624346221e-05,1.23624766859e-05,-2.47249417773e-05,0.000821842991811,0.00219998145009,0.00219998145009,-0.000260368983582,-0.000130183473677,0.000130183478845,0.000130183478845,-0.000130183473677,-0.000260368983582,-7.37321829126e-05,-7.37321829126e-05,-0.00112975730499,-0.00112975730499,-0.00112975730499,-0.00112975730499,0.000222185961698,0.000222185961698,-0.000469719988541,-0.000469719988541,0.00129406362133,0.000315742899921,0.000315742899921,-0.00227731613101,-0.00227731613101,-0.000520225489074,0.000520225496313,0.00104045210789,0.000609208140979,0.000609208140979,0.000609208140979,0.000609208140979,-2.15187790498e-05,-2.15187790498e-05,-0.000228424391577,-0.000114212312389,0.000114212313612,-0.000114212312389,0.000114212313612,0.00022842439161,-0.000265766403938,-0.000265766403938,1.77342586645e-05,1.77342586645e-05,-0.000185144200429,-0.000185144200429,-0.000142906734729,-0.000142906734729,-3.76360036436e-05,1.88182289609e-05,-1.88181362046e-05,-1.88181362046e-05,1.88182289609e-05,-3.76360036436e-05,8.31977003555e-05,8.31977003555e-05,8.31977003555e-05,8.31977003555e-05,-0.000726540397437,-0.000726540397437,-8.32897607705e-06,-8.32897607705e-06,-0.000170969159296,-0.000170969159296,0.000170969168479,0.000170969168479,0.000341939175466,0.000341939175466,0.000201462855964,
    -0.000788735020104,7.62079973881e-05,7.62079973881e-05,0.000319631520693,0.000319631520693,0.000319631520693,0.000319631520693,0.000639263046764,0.000639263046764,-0.000224757542775,-0.000582852753516,-0.000582852753516,-0.000288518818385,-0.000288518818385,8.87007378215e-05,8.87007378215e-05,-0.000222967051051,0.00011148406465,-0.000111484055282,0.00011148406465,-0.000111484055282,0.00022296705781,0.00022296705781,-0.000222967051051,0.000445935753387,-0.000386865505354,-0.000386865505354,-0.000369336060882,0.000369336040745,-0.000738673848643,0.000275393767855,0.000275393767855,0.000275393767855,0.000275393767855,-0.00251910653986,-0.00251910653986,-9.61563288102e-05,-4.80784525146e-05,4.80784273073e-05,-4.80784525146e-05,4.80784273073e-05,9.6156374309e-05,9.6156374309e-05,-9.61563288102e-05,-0.000192313070317,-0.000407425095655,-0.000407425095655,0.000407425094309,0.000407425094309,0.000814850428589,0.000814850428589,-0.000385162217468,-0.000385162217468,0.000342662414477,0.000342662414477,-0.000342662430964,-0.000342662430964,0.000685322067913,0.000685322067913,-0.000105203793322,-0.000105203793322,0.000105203794637,0.000105203794637,-0.000210407441589,-0.000210407441589,-0.000263664385249,0.000263664385285,-0.000527328656808,-2.17179287318e-05,-2.17179287318e-05,-4.34338124127e-05,0.00140152224834,0.00140152224834,0.00140152224834,0.00140152224834,0.000756480387615,0.000756480387615,6.60288525164e-05,-0.000405091551444,-0.000405091551444,-5.58004174481e-05,5.58004412303e-05,-0.0001116012765,8.19269771722e-05,8.19269771722e-05,0.000163854904651,-0.000234140057626,0.0001063506002,0.0001063506002,-0.000106350646024,-0.000106350646024,0.000212700008693,0.000212700008693,-0.000221190211477,-0.000221190211477,-4.48269135326e-05,-4.48269135326e-05,4.48269136186e-05,4.48269136186e-05,-8.96532298457e-05,
    -8.96532298457e-05,-0.000547242324565,-0.000547242324565,0.00081948931191,-0.000819489343347,-0.00163898087031,0.000203685962042,-0.00010184337521,0.00010184337959,0.00010184337959,-0.00010184337521,0.000203685962042,0.00014060355646,0.00014060355646,-0.000140603557963,-0.000140603557963,0.00028120740269,0.00028120740269,-8.11782300612e-06,8.11778226895e-06,-1.62350159172e-05,-0.00026934669431,-0.00026934669431,-0.000340217400602,0.000340217454541,-0.000680435131471,0.000151969091135,-7.59852712494e-05,7.59852641594e-05,7.59852641594e-05,-7.59852712494e-05,0.000151969091135,0.000151969091135,-0.000151969112055,0.000303937719721,0.000134865342338,0.000134865342338,0.00277040387612,0.00276991265739,0.00276991265739,0.000346174301913,0.000346174301913,-0.000355850624162,-0.000355850624162,0.000355850630976,0.000355850630976,-0.000711701427906,-0.000711701427906,0.00260996127902,-0.0026099612967,5.18189265973e-05,2.59095876163e-05,-2.59095711419e-05,2.59095876163e-05,-2.59095711419e-05,-5.18189115348e-05,-5.18189115348e-05,5.18189265973e-05,0.000103638372721,0.000224901850493,-0.000224901855676,0.000449804412464,-0.00059689089105,-0.00059689089105,-0.000760444493595,0.00076044452441,-0.00152089326324,4.24358134035e-05,-2.12177728825e-05,2.12177725327e-05,2.12177725327e-05,-2.12177728825e-05,4.24358134035e-05,0.000199601174436,-0.000199601182337,0.000399203699244,-8.69114123369e-05,-8.69114123369e-05,0.000569617444528,0.000569617444528,-0.000168080335041,0.000168080328568,0.000336160228401,0.000280955999525,-0.000280955991004,0.000561905256671,0.000219539527194,0.000219539527194,6.62458903289e-08,6.62458903289e-08,-0.000304953225267,-0.000304953225267,-0.000149712722184,0.000149712716749,-0.00029942545126,-7.39652395884e-06,-7.39652395884e-06,7.39662191367e-06,7.39662191367e-06,-7.39652395884e-06,
    -7.39652395884e-06,-7.39652395884e-06,7.39662191367e-06,7.39662191367e-06,-2.21907180586e-05,0.00175251476044,0.00175251476044,0.000481320353784,0.000481320353784,-0.000663635375735,-0.000663635375735,-2.36976924046e-05,-2.36976924046e-05,2.36977039414e-05,2.36977039414e-05,-4.73957070473e-05,-4.73957070473e-05,0.000113887530355,0.000113887530355,-0.000247967406399,-0.000247967406399,-0.000495935923898,-0.000271260012249,-0.000271260012249,-0.00054252274543,0.000165033960137,8.25170180416e-05,-8.2517021365e-05,-8.2517021365e-05,8.25170180416e-05,0.000165033960137,-0.000205119046943,-0.000205119046943,0.000205119046646,-0.000205119046943,0.000205119046646,0.000205119046646,-0.000205119046943,0.000205119046646,0.000205119046646,0.000615357166544,0.000114412117533,-0.000114412117253,0.00022882475762,-0.000310946147832,0.000310946146953,0.000115380254259,-0.000115380256042,0.000230760329142,-0.000145760764877,-7.288013041e-05,7.28801326695e-05,7.28801326695e-05,-7.288013041e-05,-0.000145760764877,0.000137014442842,0.000137014442842,0.000137014442842,0.000137014442842,-3.05337359263e-05,3.05337105147e-05,-6.1067284074e-05,-0.000395377663028,-0.000395377663028,-2.83047694562e-05,1.41532061996e-05,-1.41531044877e-05,-1.41531044877e-05,1.41532061996e-05,-2.83047694562e-05,-0.000205988717413,-0.000205988717413,-0.000355731175474,-0.000355731175474,0.000355731197762,0.000355731197762,-0.000711463227161,-0.000711463227161,-0.000233049211932,0.000233049212848,-0.000466097188021,-5.11360801676e-05,-5.11360801676e-05,5.11360542894e-05,5.11360542894e-05,0.000672231624738,0.000672231624738,-0.000225522213217,-0.000225522213217,0.00027552629323,0.000151896888156,0.000151896888156,-0.000151896887718,0.000151896888156,-0.000151896887718,-0.000151896887718,0.000151896888156,-0.000151896887718,-0.000151896887718,-0.000455691652273,
    -0.000158544279746,-0.000158544279746,0.00099728447477,0.00099728447477,-0.000225746760565,-0.000225746760565,-0.000451493089623,-0.000300700681653,-0.000300700681653,0.000408841177999,0.000408841177999,-0.000160338865069,-0.000160338865069,0.000144754242884,0.000144754242884,-0.000144754231935,-0.000144754231935,0.000289511467485,0.000289511467485,0.000120556541891,6.02781497054e-05,-6.02781555537e-05,6.02781497054e-05,-6.02781555537e-05,-0.000120556550136,-0.000120556550136,0.000120556541891,0.000241111631022,0.000494551457657,0.000494551457657,0.000494551457657,0.000494551457657,-0.000215023865366,-0.000215023865366,0.000814805078859,0.000814805078859,-0.000549654008281,0.000274827766287,-0.000274827766005,0.000274827766287,-0.000274827766005,0.000549654007022,0.000549654007022,-0.000549654008281,0.00109930892033,0.000227169452259,-0.00042151772588,-0.000210758939019,0.00021075893596,0.00021075893596,-0.000210758939019,-0.00042151772588,-0.000594122143549,-0.000594122143549,-0.000674287957524,-0.000674287957524,-0.00033716162509,-0.00033716162509,1.92060358294e-05,1.92060358294e-05,-1.92060351282e-05,-1.92060351282e-05,3.84120423056e-05,3.84120423056e-05,0.000255944509162,0.000108098023109,-5.40495252389e-05,5.40495219765e-05,-5.40495252389e-05,5.40495219765e-05,-0.0001080980228,-0.0001080980228,0.000108098023109,-0.00021619720797,0.000161917832754,-0.000180543156731,9.0271728418e-05,-9.02717296868e-05,-9.02717296868e-05,9.0271728418e-05,-0.000180543156731,-0.0018860120077,0.00188601202614,-0.00377202450543,-0.00219588230525,0.00049972118854,0.00049972118854,-0.000471368661199,0.000471368644485,0.000942739022027,0.000137955856747,0.000313790617262,0.000313790617262,0.000313790617262,0.000313790617262,-5.53634464327e-05,-5.53634464327e-05,-0.0013658835639,0.000430860889811,0.000430860889811,
    9.48715936665e-05,9.48715936665e-05,-9.48715939601e-05,-9.48715939601e-05,0.000189742741149,0.000189742741149,-0.000565545447224,-0.000565545447224,0.000131938628312,6.59696071163e-05,-6.59696067327e-05,6.59696071163e-05,-6.59696067327e-05,-0.000131938630414,-0.000131938630414,0.000131938628312,0.000263878180807,9.48441606594e-05,9.48441606594e-05,0.000189688259351,-1.31026060745e-05,-1.31026060745e-05,1.31022769416e-05,1.31022769416e-05,2.62060922401e-05,2.62060922401e-05,0.000285486356324,0.000285486356324,0.000251961878188,0.000125981371699,-0.000125981369591,0.000125981371699,-0.000125981369591,-0.000251961879944,-0.000251961879944,0.000251961878188,0.000503925184701,-0.000264935505633,-0.000264935505633,0.000264935504745,0.000264935504745,-0.000529869159532,-0.000529869159532,0.00180093050837,0.00180093050837,-0.000739101970448,0.000140567337092,-0.000140567314493,0.000281134286046,0.000227258291501,0.000227258291501,-8.89563586798e-05,-8.89563586798e-05,9.22724104805e-05,9.22724104805e-05,-0.000231417430754,-0.000231417430754,-0.000462836377726,0.00076506825444,0.00076506825444,0.00011906818457,0.00011906818457,-0.00117202819871,-0.00117202819871,0.000188120160087,0.000188120160087,-3.38768412456e-05,-3.38768412456e-05,-5.14499683368e-06,-0.000680890626333,0.000340446467734,-0.000340446470038,0.000340446467734,-0.000340446470038,0.000680890645531,-0.000680890626333,0.000680890645531,-0.001361788267,-0.000116755162746,0.000116755161653,-0.000233510710677,0.000285783733465,-0.000285783736266,0.000571568326287,-8.14192304852e-05,4.07095679255e-05,-4.07095612562e-05,4.07095679255e-05,-4.07095612562e-05,8.14192581847e-05,-8.14192304852e-05,8.14192581847e-05,-0.000162837997939,-0.000315767253133,-0.000315767253133,0.000278460026088,-0.000139229551187,0.000139229553681,-0.000139229551187,0.000139229553681,
    -0.00027846004755,4.32083980096e-05,4.32083980096e-05,3.24873335306e-05,3.24873335306e-05,-0.000764158646994,-0.000764158646994,-0.00152831823942,-0.000186998953866,0.000186998962452,-0.000373997956887,0.000190228400714,9.51148964614e-05,-9.51148293209e-05,9.51148964614e-05,-9.51148293209e-05,-0.000190228430974,-0.000190228430974,0.000190228400714,0.000380459511032,0.00046751686221,0.00046751686221,0.000307706308619,0.000307706308619,-0.000307706308421,-0.000307706308421,-0.000615412188631,-0.000615412188631,-1.65004951325e-05,8.24961541685e-06,-8.24960095537e-06,8.24961541685e-06,-8.24960095537e-06,1.6500644704e-05,-1.65004951325e-05,1.6500644704e-05,-3.29992026158e-05,-9.40606798003e-05,-9.40606798003e-05,-9.40606798003e-05,-9.40606798003e-05,-4.85891869174e-05,4.85891661853e-05,9.71792713608e-05,-0.00180230104695,-0.00180230104695,0.000624348525557,-0.000624348490311,-0.000140666320402,0.00014066635772,-0.000281333868895,0.000151076543816,0.000151076543816,-0.000151076544574,-0.000151076544574,0.000302153595562,0.000302153595562,0.000650631929579,0.000325315870007,-0.000325315869656,-0.000325315869656,0.000325315870007,0.000650631929579,0.000252186545808,0.000126093382756,-0.000126093380689,-0.000126093380689,0.000126093382756,0.000252186545808,0.000124882910304,0.000124882910304,-5.91871958072e-05,5.9186960911e-05,0.000118378720439,-0.000439817815175,-0.000439817815175,-0.000439817815175,-0.000439817815175,0.000260692106307,-0.000130344715232,0.00013034471033,0.00013034471033,-0.000130344715232,0.000260692106307,-0.000261004122401,-0.000261004122401,7.38881562444e-05,7.38881562444e-05,-7.38881937891e-05,-7.38881937891e-05,0.0001477779368,0.0001477779368,-0.000652699114627,-0.000437107002969,-0.000437107002969,0.000410858275229,0.000410858275229,-0.000137226331152,6.86130515068e-05,-6.86130486993e-05,
    6.86130515068e-05,-6.86130486993e-05,0.000137226316677,-0.000137226331152,0.000137226316677,-0.000274452228492,-4.72566824139e-05,-4.72566824139e-05,4.72566856629e-05,4.72566856629e-05,-9.45133541819e-05,-9.45133541819e-05,0.00106637984096,0.00106637984096,0.00229951080499,-0.000284263305652,-0.000284263305652,-0.000284263305652,-0.000284263305652,0.000100606172445,0.000100606172445,-0.000100606187279,-0.000100606187279,0.000201213764531,0.000201213764531,0.000150656326866,7.53267813261e-05,-7.53267849552e-05,-7.53267849552e-05,7.53267813261e-05,0.000150656326866,-0.000562539622717,-0.000300643269032,0.000300643268447,-0.000601288406768,9.53332876884e-05,-9.53332881106e-05,-0.00019066774222,-0.000395612810964,0.000197807331571,-0.00019780715504,0.000197807331571,-0.00019780715504,0.000395612883641,0.000395612883641,-0.000395612810964,0.000791226935978,0.000282516463093,0.000282516463093,0.000282516463093,0.000282516463093,0.000174825695003,-0.000174825721393,0.000174825695003,-0.000174825721393,0.000174825695003,-0.000174825721393,-0.000174825721393,0.000174825695003,-0.000174825721393,-0.000524476173717,-0.000243753894229,-0.000243753894229,-0.000312761280734,-0.000312761280734,-0.000206819144639,-0.000103409715864,0.000103409716904,0.000103409716904,-0.000103409715864,-0.000206819144639,0.000172106601339,0.000172106601339,-0.000172106610343,-0.000172106610343,0.000344212794363,0.000344212794363,-4.68201642071e-05,2.34101240152e-05,-2.34101292588e-05,-2.34101292588e-05,2.34101240152e-05,-4.68201642071e-05,-1.97580951279e-05,-1.97580951279e-05,-0.000107859956811,-0.000107859956811,-0.000107859956811,-0.000107859956811,0.0017210864822,-0.000860545641377,0.000860545644507,-0.000860545641377,0.000860545644507,-0.00172108648048,0.0017210864822,-0.00172108648048,0.00344217934213,-0.00115038689051,0.000362971458607,
    0.000362971458607,0.000314787915783,0.000314787915783,0.000314787915783,0.000314787915783,0.000389177558385,0.000389177558385,-0.000389177559428,-0.000389177559428,0.000778356580608,0.000778356580608,0.000646365421556,-0.000646365442307,0.000733855251799,-0.000733855223881,-0.00020944553442,-0.00020944553442,0.000628299419063,0.000628299419063,-0.000254719792323,-0.000254719792323,0.000254719795314,0.000254719795314,-0.000509437933708,-0.000509437933708,-0.000316909149615,0.000158454340034,0.000158454340034,-0.00015845434402,-0.00015845434402,0.000316909166068,0.000133660378863,6.68304083234e-05,-6.68304198765e-05,-6.68304198765e-05,6.68304083234e-05,0.000133660378863,-9.83923080665e-05,9.83923047019e-05,-0.000196784926396,-9.97845406208e-05,-4.98922262046e-05,4.9892300085e-05,4.9892300085e-05,-4.98922262046e-05,-9.97845406208e-05,-0.000666623883662,-0.000666623883662,0.000109720910786,5.48602194567e-05,-5.48601694348e-05,-5.48601694348e-05,5.48602194567e-05,0.000109720910786,-0.000178908020448,-0.000178908020448,0.000146625777752,0.000146625777752,-0.000121078642561,0.000121078660149,0.000242156489342,0.000897144400894,1.31208905739e-05,1.31208905739e-05,2.62425306669e-05,0.000709077287907,0.000709077287907,2.49446710952e-05,1.24722532693e-05,-1.24722669571e-05,1.24722532693e-05,-1.24722669571e-05,-2.49446272013e-05,-2.49446272013e-05,2.49446710952e-05,4.98891558235e-05,0.000203148006627,-0.00020314800734,0.000406297412801,-0.000912538472171,0.0009125384752,0.00182507752668,-7.66883899466e-05,7.66884192847e-05,-0.000153372482186,-0.000403845251957,-0.000403845251957,9.24987984532e-05,9.24987984532e-05,9.24987984532e-05,9.24987984532e-05,-0.000590317785141,-0.00170307465572,-0.000851539148538,0.000851539150146,0.000851539150146,-0.000851539148538,-0.00170307465572,-3.99515018599e-06,-1.99751656218e-06,
    1.99748098614e-06,-1.99751656218e-06,1.99748098614e-06,3.99519042113e-06,3.99519042113e-06,-3.99515018599e-06,-7.9897421558e-06,-4.0788971223e-05,-2.03945298278e-05,2.03944881918e-05,2.03944881918e-05,-2.03945298278e-05,-4.0788971223e-05,-0.000386251411727,-0.000386251411727,-0.000289376437637,-0.000289376437637,-0.000289376437637,-0.000289376437637,-0.000411415310601,-0.000411415310601,0.000214518869228,0.000214518869228,0.000214518869228,0.000214518869228,-0.000262783959812,-0.000262783959812,-0.000262783959812,-0.000262783959812,2.4423604798e-05,2.4423604798e-05,2.4423604798e-05,2.4423604798e-05,4.88477223165e-05,4.88477223165e-05,-0.000310724333977,-0.000310724333977,0.00222169192561,0.00111085139654,-0.00111085139769,0.00111085139654,-0.00111085139769,-0.00222169193554,-0.00222169193554,0.00222169192561,0.00444339595092,0.000141819608539,0.000141819608539,-0.000141819467877,-0.000141819467877,0.000283639118612,0.000283639118612,-0.000651337224142,-0.000651337224142,-0.000150905835322,-0.000150905835322,0.000150905801538,0.000150905801538,0.00030181176029,0.00030181176029,0.000123078530682,-0.000123078527097,-0.000246157204014,0.00132888641844,0.00132888641844,3.03165268674e-05,1.51582642795e-05,-1.51582613862e-05,-1.51582613862e-05,1.51582642795e-05,3.03165268674e-05,0.00160864888647,0.00160864888647,-2.70694036907e-05,-2.70694036907e-05,2.70694307372e-05,-2.70694036907e-05,2.70694307372e-05,2.70694307372e-05,-2.70694036907e-05,2.70694307372e-05,2.70694307372e-05,8.12075163742e-05,-7.72730324522e-05,7.7273017408e-05,0.000154546980063,0.000195224802506,0.000195224802506,-0.000195224796847,-0.000195224796847,0.000390448411742,0.000390448411742,0.0148158091795,-0.0148158091757,-0.000371363716737,0.00018568194344,-0.000185681942693,0.00018568194344,-0.000185681942693,0.000371363710717,
    0.000371363710717,-0.000371363716737,0.000742728820392,-0.000230530028638,0.000230530025954,-0.000461061090194,-7.3567043529e-05,0.000185634807949,0.000185634807949,0.000185634807949,0.000185634807949,-0.000569056690745,-0.00158508182951,-0.00158508182951,0.00117136091013,0.000585680449346,-0.000585680455639,-0.000585680455639,0.000585680449346,0.00117136091013,-0.000383206224639,-0.000383206224639,-0.000148929097867,-0.000148929097867,-0.00108146229391,0.00108146230059,0.00216293519273,0.000659722658985,-0.000659722659704,0.00131944287439,-0.000101963884525,-0.000101963884525,-0.000203928395613,-0.000991647616891,-0.000991647616891,9.12769927075e-05,9.12769927075e-05,-0.00067564609633
  };
  vector<RealType> slope(myslope,myslope+sizeof(myslope)/sizeof(RealType));

  // C contains current coefficients
  // CSFcoeff initialized with original coefficients in MultiSlaterDeterminantFast constructor
    // - this should work for restart since original C are always read from input ptcl.xml
  vector<RealType>::iterator it(C.begin()),last(C.end());
  vector<RealType>::iterator original_it(originalC.begin()),original_last(originalC.end());
  vector<RealType>::iterator slope_it(slope.begin()),slope_last(slope.end());
  while(it != last){ // linear interpolation
    // Ci(R)=dCi/dR*(R-Ro)+Ci(Ro)
    (*it)=(*slope_it)*RminusRo+(*original_it); 
    it++; slope_it++; original_it++;
  }
}
OrbitalBase::ValueType MultiSlaterDeterminantFast::evaluate(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  EvaluateTimer.start();
  //for(int i=0; i<Dets.size(); i++)
  //  Dets[i]->evaluateForWalkerMove(P);
  Dets[0]->evaluateForWalkerMove(P);
  Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  EvaluateTimer.stop();
  return psiCurrent;
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  ValueType psi = evaluate(P,G,L);
  return LogValue = evaluateLogAndPhase(psi,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,
    ParticleSet::ParticleGradient_t& G,
    ParticleSet::ParticleLaplacian_t& L,
    PooledData<RealType>& buf,
    bool fillBuffer )
{
  if(fillBuffer)
  {
    Dets[0]->evaluateForWalkerMove(P);
    Dets[0]->copyToDerivativeBuffer(P,buf);
    Dets[1]->evaluateForWalkerMove(P);
    Dets[1]->copyToDerivativeBuffer(P,buf);
  }
  else
  {
    Dets[0]->copyFromDerivativeBuffer(P,buf);
    Dets[1]->copyFromDerivativeBuffer(P,buf);
  }
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  return evaluateLogAndPhase(psiCurrent,PhaseValue);
}


OrbitalBase::GradType MultiSlaterDeterminantFast::evalGrad(ParticleSet& P, int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: evalGrad not implemented. \n");
  }
  GradType grad_iat;
  if(DetID[iat] == 0)
  {
    Dets[0]->evaluateGrads(P,iat);
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    int N1 = Dets[0]->FirstIndex;
    ValueType psi=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
  else
  {
    Dets[1]->evaluateGrads(P,iat);
    ValueType psi=0.0;
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
}

OrbitalBase::ValueType MultiSlaterDeterminantFast::ratioGrad(ParticleSet& P
    , int iat, GradType& grad_iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratioGrad not implemented. \n");
  }
  UpdateMode=ORB_PBYP_PARTIAL;
  if(DetID[iat] == 0)
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[0]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    int N1 = Dets[0]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    it=C.begin();
    last=C.end();
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
  else
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[1]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
}


// This routine need work, sloppy for now
OrbitalBase::ValueType  MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat
    , ParticleSet::ParticleGradient_t& dG,ParticleSet::ParticleLaplacian_t& dL)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio(P,dG,dL) not implemented. \n");
  }
  UpdateMode=ORB_PBYP_ALL;
  if(DetID[iat] == 0)
  {
    RatioAllTimer.start();
    /*
          P.acceptMove(iat);
          Dets[0]->evaluateForWalkerMove(P);
          ValueVector_t& detValues_up = Dets[0]->detValues;
          ValueVector_t& detValues_dn = Dets[1]->detValues;
          GradMatrix_t& grads_up = Dets[0]->grads;
          GradMatrix_t& grads_dn = Dets[1]->grads;
          ValueMatrix_t& lapls_up = Dets[0]->lapls;
          ValueMatrix_t& lapls_dn = Dets[1]->lapls;
    */
//*
    Ratio1AllTimer.start();
    Dets[0]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    ValueMatrix_t& lapls_up = Dets[0]->new_lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->lapls;
//*/
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
  else
  {
    RatioAllTimer.start();
    Ratio1AllTimer.start();
    Dets[1]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    ValueMatrix_t& lapls_up = Dets[0]->lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->new_lapls;
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
}

// use ci_node for this routine only
OrbitalBase::ValueType MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat)
{
// debug
//    testMSD(P,iat);
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio not implemented. \n");
  }
  UpdateMode=ORB_PBYP_RATIO;
  if(DetID[iat] == 0)
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[0]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
  else
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[1]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
}

void MultiSlaterDeterminantFast::acceptMove(ParticleSet& P, int iat)
{
// this should depend on the type of update, ratio / ratioGrad
// for now is incorrect fot ratio(P,iat,dG,dL) updates
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: acceptMove not implemented. \n");
  }
// update psiCurrent,myG_temp,myL_temp
  AccRejTimer.start();
  psiCurrent *= curRatio;
  curRatio=1.0;
  Dets[DetID[iat]]->acceptMove(P,iat);
  switch(UpdateMode)
  {
  case ORB_PBYP_ALL:
    // ratio(P,iat,dG,dL)
    myG = myG_temp;
    myL = myL_temp;
    break;
  default:
    break;
  }
  AccRejTimer.stop();
//    Dets[0]->evaluateForWalkerMove(P);
//    Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  /*
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;

      ValueType psi=0.0;
      myG_temp=0.0;
      myL_temp=0.0;
      vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
      vector<RealType>::iterator it(C.begin()),last(C.end());
      while(it != last) {
        psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
        for(int k=0,n=N1; k<NP1; k++,n++) {
          myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
          myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
        }
        for(int k=0,n=N2; k<NP2; k++,n++) {
          myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
          myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
        }
        it++;upC++;dnC++;
      }
      ValueType psiinv = 1.0/psi;
      myG_temp *= psiinv;
      myL_temp *= psiinv;
  */
}

void MultiSlaterDeterminantFast::restore(int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  AccRejTimer.start();
  Dets[DetID[iat]]->restore(iat);
  curRatio=1.0;
  AccRejTimer.stop();
}

void MultiSlaterDeterminantFast::update(ParticleSet& P
                                        , ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL
                                        , int iat)
{
  APP_ABORT("IMPLEMENT MultiSlaterDeterminantFast::update");
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,BufferType& buf)
{
  Dets[0]->evaluateLog(P,buf);
  Dets[1]->evaluateLog(P,buf);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::registerData(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  Dets[0]->registerData(P,buf);
  Dets[1]->registerData(P,buf);
  LogValue = evaluateLog(P,P.G,P.L);
  FirstAddressOfG = &myG[0][0];
  LastAddressOfG = FirstAddressOfG + P.getTotalNum()*DIM;
  buf.add(psiCurrent);
  buf.add(myL.first_address(), myL.last_address());
  buf.add(FirstAddressOfG,LastAddressOfG);
// debug, erase
//    msd->registerData(P,buf);
  return LogValue;
}

// this routine does not initialize the data, just reserves the space
void MultiSlaterDeterminantFast::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: registerDataForDerivatives not implemented. \n");
  }
  Dets[0]->registerDataForDerivatives(P,buf,storageType);
  Dets[1]->registerDataForDerivatives(P,buf,storageType);
}

// FIX FIX FIX
OrbitalBase::RealType MultiSlaterDeterminantFast::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)
{
  UpdateTimer.start();
  Dets[0]->updateBuffer(P,buf,fromscratch);
  Dets[1]->updateBuffer(P,buf,fromscratch);
  //Dets[0]->updateBuffer(P,buf,true);
  //Dets[1]->updateBuffer(P,buf,true);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  P.G += myG;
  for(int i=0; i<P.L.size(); i++)
    P.L(i) += myL[i] - dot(myG[i],myG[i]);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  UpdateTimer.stop();
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

void MultiSlaterDeterminantFast::copyFromBuffer(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: copyFromBuffer not implemented. \n");
  }
  Dets[0]->copyFromBuffer(P,buf);
  Dets[1]->copyFromBuffer(P,buf);
  buf.get(psiCurrent);
  buf.get(myL.first_address(), myL.last_address());
  buf.get(FirstAddressOfG,LastAddressOfG);
}


void MultiSlaterDeterminantFast::checkInVariables(opt_variables_type& active)
{
  if(Optimizable)
  {
    if(myVars.size())
      active.insertFrom(myVars);
    else
      Optimizable=false;
  }
}

void MultiSlaterDeterminantFast::checkOutVariables(const opt_variables_type& active)
{
  if(Optimizable)
    myVars.getIndex(active);
}

/** resetParameters with optVariables
 *
 * USE_resetParameters
 */
void MultiSlaterDeterminantFast::resetParameters(const opt_variables_type& active)
{
  if(Optimizable)
  {
    if(usingCSF)
    {
      for(int i=0; i<CSFcoeff.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          CSFcoeff[i+1]=myVars[i]=active[loc];
      }
      int cnt=0;
      for(int i=0; i<DetsPerCSF.size(); i++)
      {
        for(int k=0; k<DetsPerCSF[i]; k++)
        {
          C[cnt] = CSFcoeff[i]*CSFexpansion[cnt];
          cnt++;
        }
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
    else
    {
      for(int i=0; i<C.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          C[i+1]=myVars[i]=active[loc];
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
  }
}
void MultiSlaterDeterminantFast::reportStatus(ostream& os)
{
}

//   OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
//   {
//      APP_ABORT("IMPLEMENT OrbitalBase::makeClone");
//      return 0;
//   }

void MultiSlaterDeterminantFast::evaluateDerivatives(ParticleSet& P,
    const opt_variables_type& optvars,
    vector<RealType>& dlogpsi,
    vector<RealType>& dhpsioverpsi)
{
  bool recalculate(false);
  for (int k=0; k<myVars.size(); ++k)
  {
    int kk=myVars.where(k);
    if (kk<0)
      continue;
    if (optvars.recompute(kk))
      recalculate=true;
  }
// need to modify for CSF later on, right now assume Slater Det basis
  if (recalculate)
  {
    if(usingCSF)
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
// myG,myL should already be calculated
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
//       for(int i=0; i<C.size(); i++){
      num=CSFcoeff.size()-1;
      int cnt=0;
//        this one is not optable
      cnt+=DetsPerCSF[0];
      int ip(1);
      for(int i=0; i<num; i++,ip++)
      {
        int kk=myVars.where(i);
        if (kk<0)
        {
          cnt+=DetsPerCSF[ip];
          continue;
        }
        ValueType cdet=0.0,q0=0.0,v1=0.0,v2=0.0;
        for(int k=0; k<DetsPerCSF[ip]; k++)
        {
          int upC = C2node_up[cnt];
          int dnC = C2node_dn[cnt];
          ValueType tmp1=CSFexpansion[cnt]*detValues_dn[dnC]*psiinv;
          ValueType tmp2=CSFexpansion[cnt]*detValues_up[upC]*psiinv;
          cdet+=CSFexpansion[cnt]*detValues_up[upC]*detValues_dn[dnC]*psiinv;
          q0 += (tmp1*laplSum_up[upC] + tmp2*laplSum_dn[dnC]);
          for(int l=0,j=N1; l<NP1; l++,j++)
            v1 += tmp1*(dot(P.G[j],grads_up(upC,l))-dot(myG_temp[j],grads_up(upC,l)) );
          for(int l=0,j=N2; l<NP2; l++,j++)
            v2 += tmp2*(dot(P.G[j],grads_dn(dnC,l))-dot(myG_temp[j],grads_dn(dnC,l)));
          cnt++;
        }
        convert(cdet,dlogpsi[kk]);
        ValueType dhpsi =  -0.5*(q0-cdet*lapl_sum)
                           -cdet*gg-v1-v2;
        //ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
        //                         -cdet*lapl_sum)
        //                   -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    }
    else
      //usingCSF
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
      for(int i=1; i<C.size(); i++)
      {
        int kk=myVars.where(i-1);
        if (kk<0)
          continue;
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType cdet=detValues_up[upC]*detValues_dn[dnC]*psiinv;
        ValueType tmp1=detValues_dn[dnC]*psiinv;
        ValueType tmp2=detValues_up[upC]*psiinv;
        convert(cdet,dlogpsi[kk]);
        ValueType v1=0.0,v2=0.0;
        for(int k=0,j=N1; k<NP1; k++,j++)
          v1 += (dot(P.G[j],grads_up(upC,k))-dot(myG_temp[j],grads_up(upC,k)) );
        for(int k=0,j=N2; k<NP2; k++,j++)
          v2 += (dot(P.G[j],grads_dn(dnC,k))-dot(myG_temp[j],grads_dn(dnC,k)));
        ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
                                 -cdet*lapl_sum)
                           -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    } // usingCSF
  }
}

void MultiSlaterDeterminantFast::registerTimers()
{
  RatioTimer.reset();
  RatioGradTimer.reset();
  RatioAllTimer.reset();
  Ratio1Timer.reset();
  Ratio1GradTimer.reset();
  Ratio1AllTimer.reset();
  UpdateTimer.reset();
  EvaluateTimer.reset();
  AccRejTimer.reset();
  TimerManager.addTimer (&RatioTimer);
  TimerManager.addTimer (&RatioGradTimer);
  TimerManager.addTimer (&RatioAllTimer);
  TimerManager.addTimer (&Ratio1Timer);
  TimerManager.addTimer (&Ratio1GradTimer);
  TimerManager.addTimer (&Ratio1AllTimer);
  TimerManager.addTimer (&UpdateTimer);
  TimerManager.addTimer (&EvaluateTimer);
  TimerManager.addTimer (&AccRejTimer);
}


}
/***************************************************************************
 * $RCSfile$   $Author: jnkim $
 * $Revision: 3416 $   $Date: 2008-12-07 11:34:49 -0600 (Sun, 07 Dec 2008) $
 * $Id: MultiSlaterDeterminantFast.cpp 3416 2008-12-07 17:34:49Z jnkim $
 ***************************************************************************/
