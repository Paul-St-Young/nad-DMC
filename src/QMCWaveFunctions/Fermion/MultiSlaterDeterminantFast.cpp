//////////////////////////////////////////////////////////////////
// (c) Copyright 2003-  by Jeongnim Kim
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
//   National Center for Supercomputing Applications &
//   Materials Computation Center
//   University of Illinois, Urbana-Champaign
//   Urbana, IL 61801
//   e-mail: jnkim@ncsa.uiuc.edu
//
// Supported by
//   National Center for Supercomputing Applications, UIUC
//   Materials Computation Center, UIUC
//////////////////////////////////////////////////////////////////
// -*- C++ -*-
#include "QMCWaveFunctions/Fermion/MultiSlaterDeterminantFast.h"
#include "QMCWaveFunctions/Fermion/MultiDiracDeterminantBase.h"
#include "ParticleBase/ParticleAttribOps.h"

namespace qmcplusplus
{

MultiSlaterDeterminantFast::MultiSlaterDeterminantFast(ParticleSet& targetPtcl, MultiDiracDeterminantBase* up, MultiDiracDeterminantBase* dn):
  RatioTimer("MultiSlaterDeterminantFast::ratio"),
  RatioGradTimer("MultiSlaterDeterminantFast::ratioGrad"),
  RatioAllTimer("MultiSlaterDeterminantFast::ratio(all)"),
  Ratio1Timer("MultiSlaterDeterminantFast::detEval_ratio"),
  Ratio1GradTimer("MultiSlaterDeterminantFast::detEval_ratioGrad"),
  Ratio1AllTimer("MultiSlaterDeterminantFast::detEval_ratio(all)"),
  UpdateTimer("MultiSlaterDeterminantFast::updateBuffer"),
  EvaluateTimer("MultiSlaterDeterminantFast::evaluate"),
  AccRejTimer("MultiSlaterDeterminantFast::Accept_Reject")
{
  registerTimers();
  //Optimizable=true;
  Optimizable=true;
  OrbitalName="MultiSlaterDeterminantFast";
  usingCSF=false;
  NP = targetPtcl.getTotalNum();
  nels_up = targetPtcl.last(0)-targetPtcl.first(0);
  nels_dn = targetPtcl.last(1)-targetPtcl.first(1);
  FirstIndex_up=targetPtcl.first(0);
  FirstIndex_dn=targetPtcl.first(1);
  Dets.resize(2);
  Dets[0]=up;
  Dets[1]=dn;
  myG.resize(NP);
  myL.resize(NP);
  myG_temp.resize(NP);
  myL_temp.resize(NP);
  DetID.resize(NP);
  for(int i=0; i<targetPtcl.groups(); ++i)
    for(int j=targetPtcl.first(i); j<targetPtcl.last(i); ++j)
      DetID[j]=i;
  usingBF=false;
  BFTrans=0;
}

OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
{
  MultiDiracDeterminantBase* up_clone = new MultiDiracDeterminantBase(*Dets[0]);
  MultiDiracDeterminantBase* dn_clone = new MultiDiracDeterminantBase(*Dets[1]);
  MultiSlaterDeterminantFast* clone = new MultiSlaterDeterminantFast(tqp,up_clone,dn_clone);
  if(usingBF)
  {
    BackflowTransformation *tr = BFTrans->makeClone(tqp);
    clone->setBF(tr);
  }
  clone->resetTargetParticleSet(tqp);
  clone->C2node_up=C2node_up;
  clone->C2node_dn=C2node_dn;
  clone->Optimizable=Optimizable;
  clone->C=C;
  clone->myVars=myVars;
  clone->usingCSF=usingCSF;
  clone->usingBF=usingBF;
  if (usingCSF)
  {
    clone->CSFcoeff=CSFcoeff;
    clone->CSFexpansion=CSFexpansion;
    clone->DetsPerCSF=DetsPerCSF;
  }
  return clone;
}

MultiSlaterDeterminantFast::~MultiSlaterDeterminantFast() { }

void MultiSlaterDeterminantFast::resetTargetParticleSet(ParticleSet& P)
{
  if(usingBF)
  {
    BFTrans->resetTargetParticleSet(P);
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(BFTrans->QP);
  }
  else
  {
    for(int i=0; i<Dets.size(); i++)
      Dets[i]->resetTargetParticleSet(P);
  }
}

//  void MultiSlaterDeterminantFast::resize(int n1, int n2)
//  {
//  }

void MultiSlaterDeterminantFast::testMSD(ParticleSet& P, int iat)
{
//     APP_ABORT("Testing disabled for safety");
  app_log() <<"Testing MSDFast. \n";
  int n = nels_up+nels_dn;
  ParticleSet::ParticleGradient_t G(n),G0(n);
  ParticleSet::ParticleLaplacian_t L(n),L0(n);
  ValueType log, log0;
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  /*
       app_log() <<"Testing evaluate(P,G,L). \n";
       cout<<endl <<endl;
       cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;

       for(int i=0; i<n; i++) {
         cout<<i  <<"\n"
             <<"  x: " <<G(i)[0]-G0(i)[0] <<"\n"
             <<"  y: " <<G(i)[1]-G0(i)[1] <<"\n"
             <<"  z: " <<G(i)[2]-G0(i)[2] <<"\n"
             <<"  d2: " <<L(i)-L0(i) <<"\n"
             <<endl;
       }
       cout<<endl <<endl;
       APP_ABORT("end of test 1");
  */
  Walker_t::Buffer_t wbuffer;
  wbuffer.clear();
  log=registerData(P,wbuffer);
//     log = msd->evaluate(P,G,L);
  log0 = evaluate(P,G0,L0);
  PosType dr;
  dr[0] = 0.1;
  dr[1]=0.05;
  dr[2] = -0.01;
  PosType newpos(P.makeMove(iat,dr));
  app_log() <<"Testing ratio(P,dG,dL). \n";
  G=0;
  G0=0;
  L=0;
  L0=0;
//     log = msd->ratio(P,iat,G,L);
  log0 = ratio(P,iat,G0,L0);
  cout<<"Psi: " <<log <<"   " <<log0 <<"   " <<log/log0 <<endl;
  for(int i=0; i<n; i++)
  {
    cout<<i  <<"\n"
        <<"  x: " <<G(i)[0]-G0(i)[0] <<"  " <<G(i)[0]   <<"\n"
        <<"  y: " <<G(i)[1]-G0(i)[1] <<"  " <<G(i)[1] <<"\n"
        <<"  z: " <<G(i)[2]-G0(i)[2] <<"  " <<G(i)[2] <<"\n"
        <<"  d2: " <<L(i)-L0(i) <<"  " <<L(i) <<"\n"
        <<endl;
  }
  cout<<endl <<endl;
  APP_ABORT("After MultiSlaterDeterminantFast::testMSD()");
}

void MultiSlaterDeterminantFast::updateCoeff(RealType RminusRo){
  // update determinant coeffients with ion position

  // !!! hard-code coefficient interpolation
  RealType myslope[]=
{
  0,0.0207958598442,-0.0272797597512,-0.00654102711168,-0.0273906239865,-0.00199319152889,0.00199319262464,-0.00398640276843,0.00567587651431,0.00567587651431,0.0113517527905,0.000671785484867,0.000671785484867,0.000500812961099,0.000500812961099,-0.000979266213771,-0.00131514672087,-0.00131514672087,0.00131514664245,0.00131514664245,-0.00263031082446,-0.00263031082446,-0.00223195959955,-0.00223195959955,0.00179976711768,-0.00179976709981,0.00359955896806,-0.00417146560615,-0.00417146560615,-0.00371169411255,-0.00371169411255,0.0011653252423,0.0011653252423,-0.000895713386409,-0.000895713386409,-0.00176752249159,-0.00176752249159,0.0057633091437,0.00145431601852,0.00145431601852,0.00235884900571,-0.00117942725011,0.00117942724839,-0.00117942725011,0.00117942724839,-0.00235884897853,0.00235884900571,-0.00235884897853,0.00471764747549,-0.00143363069014,-0.00143363069014,-0.00286719796572,0.03138404485,-0.0313840448249,-0.062768209887,0.000531423615361,-0.000531423631419,0.00106276772014,0.00340163942512,0.00340163942512,0.00034810060935,-0.000174051765927,0.000174051667439,-0.000174051765927,0.000174051667439,-0.000348100451781,0.00034810060935,-0.000348100451781,0.000696149797394,-0.00141088234788,-0.00141088234788,0.00425881901299,-0.000695918004075,-0.000695918004075,-0.000695918004075,-0.000695918004075,0.000566808743943,0.000566808743943,-0.00188222425233,-0.00188222425233,-0.00376444482068,0.00474878077061,0.0433983236192,0.0433983236192,0.00238406432984,-0.00238406445182,-0.00476813022378,-0.00463047375002,-0.00463047375002,0.0253687375672,0.0253687375672,-0.000156491051377,-0.000156491051377,-0.00852804118569,0.00852804114953,-0.000425127915525,-0.000425127915525,0.000525152140161,-0.000525151915947,-0.00105033602871,0.00227752615928,
  -0.0028185276812,-0.0028185276812,7.3004619203e-05,7.3004619203e-05,-7.30049923539e-05,-7.30049923539e-05,0.000146006784965,0.000146006784965,0.00265439006548,0.00246781644242,0.00101879409374,0.00189945310563,-0.00189945310231,-0.00379890523656,-0.00294220314593,0.00165468880281,-0.00165468879838,-0.00330937809357,-0.00301856049437,0.00301856049641,-0.00603707980741,-0.00153540070068,0.000767706507958,-0.000767706445163,-0.000767706445163,0.000767706507958,-0.00153540070068,0.00333401631059,0.000155965629827,0.000155965629827,0.000311899081373,-0.00121193869061,0.000395384612752,0.000395384612752,0.00110162796268,0.000282783772535,-0.000282783731891,0.000565568085773,0.000177882038831,-0.000177882108927,0.000355765271983,0.00111363774708,0.00111363774708,-0.000483620963248,0.000483620941259,-0.000967222328541,0.000475075771084,-0.000237536662366,0.000237536664427,-0.000237536662366,0.000237536664427,-0.000475075799024,0.000475075771084,-0.000475075799024,0.0009501460944,0.0021374111649,0.00118155245402,0.00118155245402,-0.0011100986422,0.00111009865857,0.00222022661111,0.00126710373322,0.00126710373322,0.00253417666976,0.00158485540653,-0.000792427415538,0.000792427434945,-0.000792427415538,0.000792427434945,-0.00158485543008,0.00158485540653,-0.00158485543008,0.00316972037471,-2.77640206707e-05,-0.00087666650542,0.00211323979218,-0.00211323957842,-0.000873347828641,-0.000873347828641,-0.000460621084357,0.000230313488662,-0.000230313451392,-0.000230313451392,0.000230313488662,-0.000460621084357,-0.00228846557262,-0.00228846557262,0.000101445839183,-0.000101445784385,-0.000202895076323,-0.000615359949045,0.000344734654125,0.000344734654125,-0.000344734637577,-0.000344734637577,0.000689461549654,0.000689461549654,0.00603484273521,0.00603484273521,-5.4671210032e-05,
  -5.4671210032e-05,0.0010900582873,-0.00109005825841,-0.00218013051077,-0.00296425616864,0.00233904220064,0.00233904220064,0.0046780763215,0.0426327025562,-0.0426327025363,-0.0852655612992,-0.000368524474045,0.000368524465362,-0.000737051624401,0.000448081983145,0.000448081983145,-0.000448081984129,-0.000448081984129,0.000896150677768,0.000896150677768,-0.003808005431,0.00380800542946,0.00761601022866,0.0020159964598,0.00107310750912,0.00107310750912,0.00107310750912,0.00107310750912,0.0031921003073,0.0031921003073,-6.62059529716e-05,-6.62059529716e-05,6.62059156913e-05,6.62059156913e-05,-0.00013241659638,-0.00013241659638,-0.000371418971631,-0.000371418971631,-0.0172467036131,0.0172467036562,0.0168944842236,0.00069555616648,-0.000695556182423,-0.00139110730993,-0.000732478357315,0.000366244252306,-0.000366244232524,-0.000366244232524,0.000366244252306,-0.000732478357315,0.00204143641862,0.00204143641862,0.000146099114538,-0.000146099213877,-0.000292201437807,-0.00803244745119,0.00803244743835,0.000558452462447,0.00026530070475,-0.00120727955123,0.00120727956505,-0.00241455326205,0.000527749926783,0.00131414818126,0.00131414818126,0.00117966022381,0.00117966022381,-0.00117966020699,-0.00117966020699,0.00235932512331,0.00235932512331,0.00159356612125,-0.0015935660528,-0.00318712600126,0.00062897625191,0.00062897625191,-0.000628976263524,-0.000628976263524,0.00125794787493,0.00125794787493,0.00271146535688,0.00271146535688,5.24240309229e-05,-5.24239069316e-05,0.000104843584944,0.00499847892929,0.000167890895243,0.000167890895243,0.00409320925981,-0.0012982807368,0.00129828074754,-0.00259656335549,0.000596556104864,0.000596556104864,-0.000596556081672,-0.000596556081672,0.00119311457041,0.00119311457041,-0.000164609238936,8.65034525645e-05,
  8.65034525645e-05,-0.000465915138731,-0.000465915138731,-0.000931824153954,0.000391892308976,-0.000391892314818,0.000783794270441,-0.00110350065553,-0.00110350065553,0.00110350065088,0.00110350065088,-0.00220699435737,-0.00220699435737,0.00244580161294,-0.0012228975203,0.00122289752254,0.00122289752254,-0.0012228975203,0.00244580161294,-0.000640603587461,-0.000640603587461,-0.0117893933175,-0.00385568798057,0.00385568798592,0.00771139104703,-9.00962340613e-05,9.0096176127e-05,-0.000180199619899,0.000654238143668,0.000327119806931,-0.000327119811438,0.000327119806931,-0.000327119811438,-0.00065423813623,-0.00065423813623,0.000654238143668,0.0013084801331,7.50984158093e-05,-7.50983586295e-05,0.000150190514659,-0.00164309464455,-0.00164309464455,-0.000416478024152,-0.000416478024152,-0.000416478024152,-0.000416478024152,0.000947984939526,0.000947984939526,0.000947984939526,0.000947984939526,0.00177538230299,0.00177538230299,-0.00177538231275,-0.00177538231275,0.00355075588586,0.00355075588586,-0.000311557671618,-0.000311557671618,-0.00480820820028,6.12904383869e-05,-6.12915117571e-05,-0.000122580406833,0.000388458149309,-0.000648483582326,-0.000648483582326,-0.000138101048631,-0.000138101048631,-0.000569648469279,-0.000569648469279,-0.00113930316613,-0.000174290612379,0.000174290620226,-0.000348579542762,0.000969839011841,-0.000529869341277,0.000529869365071,-0.00105973579296,-0.000140958874533,0.000140958934803,0.000281913418678,0.00160370544251,0.00127681940338,0.00127681940338,0.00255364550833,0.000935499589056,-0.000935499592044,-0.00187100182199,0.00418579639853,0.000232015801176,-0.000116009499324,0.000116009597591,0.000116009597591,-0.000116009499324,0.000232015801176,0.000207423186764,-0.000207423152527,0.000414840370267,-0.000968761997224,-0.000968761997224,0.124776342405,
  -0.12477634243,0.00324139759448,0.00324139759448,0.00324139759448,0.00324139759448,-0.000591074213745,-0.000591074213745,0.000910933581554,0.000910933581554,0.000542942632923,-0.000542942610891,0.00108588324276,0.00122706670638,0.00122706670638,0.00122706670638,0.00122706670638,0.00667189075083,-0.00667189076928,-0.0133437965157,0.000912245716684,0.000456127011129,-0.000456127018707,0.000456127011129,-0.000456127018707,-0.000912245706669,-0.000912245706669,0.000912245716684,0.00182450178542,-0.00152720185168,-0.00152720185168,0.00132267199144,0.00132267199144,1.62154714336e-05,1.62154714336e-05,-1.62159556566e-05,-1.62159556566e-05,3.24352661285e-05,3.24352661285e-05,0.000321176015557,-0.000321176002811,0.000642355226731,0.00221647179333,-0.00141199661854,-0.00141199661854,-0.00141199661854,-0.00141199661854,0.000171405173875,-2.47850110227e-05,0.00145236447903,0.00145236447903,0.00145236447903,0.00145236447903,-1.89012453635e-05,-0.00017097000653,-0.00017097000653,-0.00108119467449,9.41166537189e-05,9.41166537189e-05,-0.000113051018889,-0.000113051018889,-0.000113051018889,-0.000113051018889,-0.0217648909846,0.0217648909555,0.000250379048592,0.000250379048592,0.00802013992122,-0.00802013993828,-0.0160403098882,-0.000585181163837,-0.000292588497657,0.000292588485969,-0.000292588497657,0.000292588485969,0.000585181164569,0.000585181164569,-0.000585181163837,-0.00117035348081,0.000371145491521,0.000371145491521,0.000550536465127,0.000550536465127,0.00109063195539,0.000283847423094,0.000283847423094,-0.000606380449331,-0.000606380449331,0.000194221856447,0.000194221856447,-0.00123768265272,-0.00123768265272,-0.00247537169222,-0.000382329610607,-0.000382329610607,-0.000382329610607,-0.000382329610607,0.000220855429214,0.000220855429214,0.000441718045804,-0.000535026299889,
  -0.000267513158681,0.000267513164534,-0.000267513158681,0.000267513164534,0.000535026282979,0.000535026282979,-0.000535026299889,-0.00107004740073,0.000893660702888,0.000893660702888,0.0012313911654,0.0012313911654,0.000121519057375,-0.000121519032363,0.000243049401178,-0.000351569007268,-0.000325536903709,0.000325536906173,-0.000651079300622,0.00196488266177,0.00196488266177,0.000390383441222,0.000390383441222,-0.000390383421082,-0.000390383421082,0.000780762001284,0.000780762001284,0.000625744973525,0.000625744973525,0.00125148466921,0.000741081960167,0.000741081960167,-0.000741081985319,-0.000741081985319,0.00148216251554,0.00148216251554,0.00113548527897,0.00113548527897,0.00227098186728,-0.00203888570484,-0.00203888570484,0.000411831851279,0.000205915916941,-0.000205915920772,0.000205915916941,-0.000205915920772,-0.000411831840613,-0.000411831840613,0.000411831851279,0.000823662371716,-0.000159927935779,0.000159927823405,-0.000319868066391,0.00102374040399,-0.00102374040701,-0.00204748241883,0.0010510292505,0.0010510292505,-0.0013896255222,-0.0013896255222,0.00143843352533,0.000365313397908,0.000365313397908,-0.000100951422185,-0.000100951422185,-0.00104839074401,0.00393678686037,-0.00393678686782,0.00106955640694,0.00106955640694,0.0025006719513,5.30057042503e-06,5.30057042503e-06,1.06072542139e-05,0.00096038500106,0.00096038500106,-0.00113042958825,-0.00113042958825,-0.00038478046361,0.000700605014721,0.000700605014721,-0.000700605022075,-0.000700605022075,0.00140120424756,0.00140120424756,-0.000137136307608,0.000137136249508,0.000274268254082,-0.000634666899104,-0.000634666899104,-0.004424650887,-0.004424650887,0.00219152518104,0.00219152518104,0.00054430686487,0.00054430686487,-0.000321828348743,-0.00016091508203,0.000160915080238,-0.00016091508203,
  0.000160915080238,0.000321828363128,0.000321828363128,-0.000321828348743,-0.000643657499464,0.000200045894117,0.000200045894117,5.38428233771e-06,-5.3839236957e-06,-1.077660238e-05,-0.000884136944993,-0.000884136944993,-0.00176828025192,-0.000233322598888,-0.000233322598888,0.000233322597069,0.000233322597069,-0.000466646902065,-0.000466646902065,-0.000929179961185,-0.000929179961185,0.000986385785282,0.000986385785282,-0.000335805032095,0.000307168664812,-0.000153583354911,0.000153583356633,-0.000153583354911,0.000153583356633,-0.000307168692423,0.000307168664812,-0.000307168692423,0.000614332988204,0.000383705842988,0.000383705842988,-0.000383705847748,-0.000383705847748,0.00076740865613,0.00076740865613,-3.14115523551e-05,-3.14115523551e-05,3.14115904581e-05,-3.14115523551e-05,3.14115904581e-05,3.14115904581e-05,-3.14115523551e-05,3.14115904581e-05,3.14115904581e-05,9.42326115332e-05,0.00136929733804,-0.00136929739749,-0.000108384597539,-0.000108384597539,-0.000278195031294,-0.000278195031294,-0.00115944208288,0.000156533720247,-7.82669321787e-05,7.82669321128e-05,-7.82669321787e-05,7.82669321128e-05,-0.000156533723632,0.000156533720247,-0.000156533723632,0.000313068466279,-0.00027499251664,0.0115204447447,0.0115204447447,0.000611230519906,0.000611230519906,2.34997270882e-05,1.1749781164e-05,-1.17497901126e-05,1.1749781164e-05,-1.17497901126e-05,-2.34996978415e-05,-2.34996978415e-05,2.34997270882e-05,4.69991357109e-05,-0.000391755139148,0.000391755144279,-0.000783509526139,-0.0019725464826,-0.0019725464826,-0.00109455686975,-0.000547278535948,0.000547278540055,0.000547278540055,-0.000547278535948,-0.00109455686975,-0.000277778785254,-0.000277778785254,-0.000581604475195,-0.000581604475195,0.000268874826962,0.000268874826962,0.00904945500383,-0.00904945500638,-0.0180989136719,-0.000297906446212,
  -0.000297906446212,3.43741412708e-05,3.43741412708e-05,0.000803131763904,0.000803131763904,-0.000887480530649,0.000178778270986,0.000178778270986,-0.000178778263352,-0.000178778263352,0.000357560057665,0.000357560057665,0.000205500902438,0.000205500902438,-0.000239076382592,-0.000239076382592,-0.000362360604493,-0.000362360604493,-0.000201031187639,-0.000201031187639,-0.00402614341309,-0.00402614341309,-0.000130339643663,-0.000130339643663,0.00675503865723,0.00675503865723,0.00170261483664,0.00170261483664,0.0034052152469,0.00041908088117,0.00287265604874,0.00287265604874,0.00055761106224,0.00055761106224,0.000961225531236,0.000961225531236,-0.000124001280284,-0.000124001280284,0.00105750636154,-0.00105750636235,0.00105750636154,-0.00105750636235,2.43523056275e-05,-2.43523948537e-05,-4.87046617461e-05,-0.000450812580106,-0.000450812580106,0.00156719334772,0.00156719334772,-0.00194838361041,-0.00194838361041,-0.000224034931833,0.000224034928647,-0.000448070349491,0.00125141875743,0.00125141875743,0.000106366475604,0.000106366475604,4.52758524005e-05,-4.52759954683e-05,-9.05542976803e-05,0.000363961582407,0.000363961582407,0.00137435426405,0.00137435426405,0.00100769773062,-0.00337850565023,-0.00337850565023,-0.000212618084387,0.000212618088366,-0.000425234952821,-0.000883640385599,0.000883640399995,0.00176726615739,-0.000492227860106,0.000492227875891,-0.000984453929638,-1.21666869868e-06,1.21416748611e-06,2.42746958168e-06,0.000154043043544,-7.7021663405e-05,7.70216377127e-05,-7.7021663405e-05,7.70216377127e-05,-0.000154043019123,0.000154043043544,-0.000154043019123,0.000308086962156,0.000161495490566,0.000161495490566,0.000488051718019,0.000488051718019,0.000378420849248,-0.000378420840777,-0.000756844880971,-0.0490803787296,0.0490803786902,-3.09013601583e-06,-3.09013601583e-06,
  0.00180986238444,-0.00180986238822,-0.00361972189703,0.000893318680283,0.000893318680283,0.00365472638005,0.00365472638005,0.000290613201412,0.000290613201412,0.00142969572743,-0.00142969572504,-0.00285939515044,0.000299577318269,0.000299577318269,-0.000251431497995,0.000251431489713,-0.000502860383116,-0.000223229182757,0.000111614699436,-0.000111614701952,0.000111614699436,-0.000111614701952,0.000223229159757,-0.000223229182757,0.000223229159757,-0.00044645932404,0.00023543833946,-0.000235438340854,-0.000470877322026,-0.000709493125275,-0.000709493125275,8.91598702676e-05,8.91598702676e-05,-8.9159871131e-05,-8.9159871131e-05,0.0001783182013,0.0001783182013,-0.000591492220022,0.000591492220858,-0.00118298752284,0.000272046972562,0.000272046972562,0.000544098644027,0.000232787147518,0.000232787147518,5.77005800584e-05,5.77005800584e-05,0.000933601227971,0.000933601227971,0.00220752922469,0.00220752922469,5.63404103151e-05,2.81702191806e-05,-2.8170198767e-05,2.81702191806e-05,-2.8170198767e-05,-5.63403933832e-05,-5.63403933832e-05,5.63404103151e-05,0.000112680978083,0.00898171450516,0.00898171450516,-0.000398104573289,-0.000398104573289,-0.000286378286826,-0.000286378286826,0.000337683270346,0.000337683270346,-3.68378373941e-05,-3.68378373941e-05,3.68378880618e-05,3.68378880618e-05,-7.36768940745e-05,-7.36768940745e-05,0.00028515356194,0.00028515356194,-0.000285153572109,-0.000285153572109,0.000570306280135,0.000570306280135,0.00191232383415,-0.000551028952215,-0.000551028952215,-0.000551028952215,-0.000551028952215,-2.31830045656e-05,2.31830752078e-05,-4.63666232169e-05,-0.000375872113672,-0.000187939550459,0.000187939532424,0.000187939532424,-0.000187939550459,-0.000375872113672,-0.000602757145842,-0.000602757145842,-5.44284718049e-05,-5.44284718049e-05,-0.000560449577787,-0.000560449577787,
  0.000186911168236,9.34558394302e-05,-9.34558336204e-05,9.34558394302e-05,-9.34558336204e-05,-0.000186911167926,-0.000186911167926,0.000186911168236,0.000373821420571,0.00195188100767,0.00195188100767,-0.00217480706736,-0.00136921433182,-0.000204541067146,-0.000204541067146,0.000204541065597,0.000204541065597,-0.000409081348731,-0.000409081348731,-0.000760028773066,-0.000760028773066,0.00205348574574,0.00205348574574,2.6523020862e-05,2.6523020862e-05,-5.52291091577e-05,2.76147436694e-05,-2.76147520875e-05,2.76147436694e-05,-2.76147520875e-05,5.52291485614e-05,5.52291485614e-05,-5.52291091577e-05,0.000110459454643,-0.000105935747294,0.000105935751571,-0.000211874544524,-0.000489496904146,-0.000244749157767,0.000244749160328,-0.000244749157767,0.000244749160328,0.000489496893311,0.000489496893311,-0.000489496904146,-0.000978995099211,0.000282138552646,0.000141069396417,-0.000141069395903,-0.000141069395903,0.000141069396417,0.000282138552646,6.44918389328e-05,6.44918389328e-05,0.000128970490702,0.000319583960372,-0.000319583956295,0.000639170796899,0.000376211721608,0.000376211721608,0.000752426477285,0.000215344800644,0.000894282573485,0.000894282573485,0.00105638021771,0.00105638021771,0.00211276501945,-1.63201891008e-05,-1.63201891008e-05,0.000899046668491,0.000899046668491,0.00074113558423,-0.000741135583434,0.000469941118213,0.000469941118213,0.000444461422723,0.000444461422723,0.000444461422723,0.000444461422723,-0.00030335308881,-0.00030335308881,0.00128611742869,0.00128611742869,0.000363646304132,0.000363646304132,-0.00168569172428,0.00056085620842,0.00056085620842,0.00112173300219,0.000477356884877,-0.000477356885146,0.000954715805741,-0.00107888867403,-0.00107888867403,0.000262085021137,0.000131043670093,-0.000131043669833,0.000131043670093,-0.000131043669833,-0.000262085018459,
  -0.000262085018459,0.000262085021137,0.000524170497274,0.000469276862442,0.000469276862442,-0.000182773122123,-0.000182773122123,9.85407051232e-05,9.85407051232e-05,9.85407051232e-05,9.85407051232e-05,-0.000205686988244,0.000205686996543,-0.000411371379707,-0.0007526420171,-0.0007526420171,0.000752642020234,0.000752642020234,0.00122194916995,-0.00122194918391,0.00244390547941,3.66562740365e-05,3.66562740365e-05,7.33127045018e-05,-7.56014555771e-05,-3.77987679623e-05,3.77988058417e-05,3.77988058417e-05,-3.77987679623e-05,-7.56014555771e-05,5.74231913563e-05,-5.74232515161e-05,5.74231913563e-05,-5.74232515161e-05,0.000114847531706,-0.00011484761991,2.28155376472e-05,-2.28157024861e-05,4.56309584262e-05,-0.000143421709082,-0.000143421709082,-0.000697474968357,-0.00034873887497,0.000348738877722,-0.00034873887497,0.000348738877722,0.000697474966938,0.000697474966938,-0.000697474968357,-0.00139495665795,0.000210195667931,0.000105098141981,-0.000105098140899,-0.000105098140899,0.000105098141981,0.000210195667931,-0.000210195668076,0.000210195667931,0.000420391856378,-0.000316562999466,-0.000316562999466,-0.000160297515842,0.00016029748518,0.000320595066408,0.00032017355117,-0.000320173577619,-0.000640344114953,0.000212988577571,0.000212988577571,-0.00021298857695,-0.00021298857695,0.000425977934866,0.000425977934866,0.000700777301852,0.000700777301852,0.000700777301852,0.000700777301852,0.000319888449416,0.000319888449416,-0.00122079784943,0.0012207978475,0.00244160356342,0.00582372767093,-0.00582372766801,-0.011647450685,0.000946059256274,-0.000946059260486,-0.00189212376792,0.000623389976371,0.000203975064504,0.000203975064504,-0.000203975062628,-0.000203975062628,0.000407949056012,0.000407949056012,-0.00529210214906,-0.00529210214906,0.000436757045534,-0.000436757037461,0.000873515974123,
  -0.000239443371294,0.000119721088539,-0.000119721088509,0.000119721088539,-0.000119721088509,0.000239443365984,0.000239443365984,-0.000239443371294,0.00047889396045,-0.000178328737864,-0.000178328737864,0.000178328745513,0.000178328745513,-0.000356657580609,-0.000356657580609,-0.000115611830822,-0.000115611830822,-0.00175254062095,-0.000497970734713,-0.000497970734713,8.02098630837e-06,8.02098630837e-06,0.000161619123528,8.08090123848e-05,-8.0809010838e-05,8.08090123848e-05,-8.0809010838e-05,-0.000161619117652,-0.000161619117652,0.000161619123528,0.000323239206899,-0.000599219648855,-0.000599219648855,-0.00026096784691,-0.00026096784691,0.000169544260052,-0.000169544276309,0.000339087580396,-2.51057494547e-05,-1.25532681612e-05,1.25532643018e-05,-1.25532681612e-05,1.25532643018e-05,2.51058133052e-05,2.51058133052e-05,-2.51057494547e-05,-5.02071613703e-05,-0.000966355289557,0.000966355290606,0.00193271066635,0.000243029918325,-0.000188261850592,-0.000188261850592,0.000188261850797,0.000188261850797,-0.00037652454195,-0.00037652454195,-0.000663221546479,-0.000663221546479,-8.37110744002e-06,8.3706144035e-06,-1.67421795229e-05,-0.0005878020848,-0.000247517806332,-0.000247517806332,-0.000149729079312,-0.000464115011218,-0.000464115011218,0.000432722558346,-0.000432722570863,-0.000865448984037,-1.13888196347e-05,0.00114916126419,0.00114916126419,-0.000687458524394,-0.000687458524394,-0.000326920098293,-0.000326920098293,-0.000326920098293,-0.000326920098293,9.77960621869e-05,9.77960621869e-05,-9.77960614768e-05,-9.77960614768e-05,0.000195590823744,0.000195590823744,-0.00196023981161,-0.00196023981161,0.000361752683702,-0.0003617526694,-0.000723508079729,0.000787508856643,-0.000393752804851,0.000393752802281,-0.000393752804851,0.000393752802281,-0.000787508851719,0.000207183135143,-0.00020718313315,0.000239538894412,
  0.000239538894412,0.000479081598887,0.0011973258912,0.0011973258912,-0.0012039810814,-0.0012039810814,0.000510288351438,0.000510288351438,-0.000296775356584,-0.000296775356584,0.000296775352616,0.000296775352616,-0.000593548339061,-0.000593548339061,0.000914482079145,-0.000457245152936,0.000457245123148,-0.000457245152936,0.000457245123148,-0.000914482040027,0.000914482079145,-0.000914482040027,0.00182897482523,0.000148877777109,0.000148877777109,7.15581179776e-05,-7.1558126361e-05,0.000143113887069,0.000288858907802,-0.000288858904042,0.000288858907802,-0.000288858904042,0.00057771631747,-0.000577716285765,-0.000857559241379,-0.000857559241379,-0.000329116089444,-0.000329116089444,0.000127763276924,-0.000127763283938,0.000255525626677,-0.000126422761998,-0.000126422761998,0.000698142280091,0.000698142280091,0.00139628921746,-0.000174295080859,-8.71475378479e-05,8.71475391542e-05,8.71475391542e-05,-8.71475378479e-05,-0.000174295080859,-7.02257859969e-05,7.02257932711e-05,-0.000140452587082,-0.000173186721222,0.000173186723029,0.000346373130665,0.000424032440449,0.000424032440449,0.000121962754962,-0.000121962755536,-0.000121962755536,0.000121962754962,-0.000243925244715,0.000243925245828,0.000819626924379,0.000819626924379,0.000819626924379,0.000819626924379,-0.000564874430212,0.000564874430563,-0.00112975025785,-0.00113365249117,-0.00113365249117,0.00624545115015,0.00624545115015,0.000103715426379,-0.000685477547925,-0.000685477547925,-0.00110988614377,0.000158166552132,0.000158166552132,0.000704647669326,0.000704647669326,-0.00070464767359,-0.00070464767359,-0.00140929885638,-0.00140929885638,7.41716805297e-05,7.41716805297e-05,-7.41716865997e-05,-7.41716865997e-05,0.00014834268208,0.00014834268208,-0.000449337757809,-0.000449337757809,5.56706412461e-05,5.56706412461e-05,0.000343135396193,
  0.000746591825978,-0.000373298694613,0.000373298686051,-0.000373298694613,0.000373298686051,-0.00074659183039,0.000746591825978,-0.00074659183039,0.00149319019332,-0.000109910956143,0.000109910957642,-0.000219822949619,0.000265476274262,0.000265476274262,4.31474533004e-06,4.31474533004e-06,-0.000283327718094,0.000283327725382,-0.000566658443544,-0.000270354723953,-0.000135176465213,0.00013517646437,0.00013517646437,-0.000135176465213,-0.000270354723953,0.00839188539073,-0.00839188538854,-0.0167838045936,0.000222251993362,0.000111127001788,-0.000111127001253,0.000111127001788,-0.000111127001253,-0.000222251993269,-0.000222251993269,0.000222251993362,0.000444504767292,-0.000410237675805,-0.000205119078707,0.000205119086929,0.000205119086929,-0.000205119078707,-0.000410237675805,0.000128511107499,0.000128511107499,-0.000332356158956,-0.000332356158956,-0.000286455855288,0.000286455848613,-0.000286455855288,0.000286455848613,-2.70759826366e-05,-2.70759826366e-05,2.70759911223e-05,2.70759911223e-05,-5.41524285277e-05,-5.41524285277e-05,0.00264329028309,0.00264329028309,-0.0011850224152,-8.82503680103e-05,8.82503797612e-05,-0.000176501558588,-7.43150792071e-05,7.43149918444e-05,0.000148623380671,-0.00018533528577,-0.00018533528577,-0.000548758864182,0.000548758844309,-0.00109751725206,-0.000156312888863,-0.000156312888863,0.000122660298408,-6.13307406149e-05,6.13307155783e-05,-6.13307406149e-05,6.13307155783e-05,-0.000122660365176,-0.000122660365176,0.000122660298408,-0.000245322825926,0.0022393095261,-0.00223930952037,-0.00223930952037,0.0022393095261,6.8211374779e-05,-6.82114633464e-05,-0.000136421855675,-0.000396060177127,-0.000396060177127,0.000117929800354,0.000117929800354,0.000235860473894,0.000715138177989,0.000715138177989,0.000288953977941,0.000719690997588,0.00410123154776,9.58281844915e-05,
  9.58281844915e-05,-9.58281935654e-05,-9.58281935654e-05,-0.000191655814918,-0.000191655814918,5.5875730601e-05,-5.5875722822e-05,0.000111753590887,-0.000993893556273,-0.000993893556273,-0.000993893556273,-0.000993893556273,0.000833367514927,0.000833367514927,-6.71944282374e-05,-6.71944282374e-05,-6.71944282374e-05,-6.71944282374e-05,-0.000134388993284,-0.000134388993284,0.000216613387598,-0.00021661337656,0.00043322544628,-6.86835861434e-05,6.86835941487e-05,0.00013736735461,-0.000679857481597,-0.000339929271509,0.000339929271809,-0.000339929271509,0.000339929271809,0.000679857488741,-0.000679857481597,0.000679857488741,0.00135971533741,0.00122699425004,0.00122699425004,-2.8664534228e-05,1.43326000777e-05,-1.43326149423e-05,1.43326000777e-05,-1.43326149423e-05,2.86644714854e-05,-2.8664534228e-05,2.86644714854e-05,-5.73312167691e-05,-0.000759685641469,-0.000759685641469,0.000759685630284,0.000759685630284,-0.00151936867976,-0.00151936867976,0.000175394661499,0.000386816110604,0.000193409067299,-0.00019340908136,-0.00019340908136,0.000193409067299,0.000386816110604,0.00130488339231,0.00130488339231,0.000230676114183,0.000230676114183,0.000461359514738,0.000124258165651,0.000618570810668,-0.000618570811937,0.00123714057005,0.000212574952496,0.000212574952496,-0.000505331015789,-0.00103901782577,-0.00103901782577,-0.00119100797544,-0.00119100797544,0.00206412091085,-9.73010600272e-05,-4.86499786002e-05,4.86499733798e-05,4.86499733798e-05,-4.86499786002e-05,-9.73010600272e-05,-8.13063426808e-07,0.000622384170567,0.000622384170567,0.00124476835715,0.000495444575513,0.000495444575513,0.000990890401893,1.20405279444e-05,-1.20404621037e-05,2.40793411562e-05,0.000345473572426,-0.000345473564016,0.000690946396353,7.51893181628e-05,-7.51893295019e-05,0.000150378970933,0.000231588139162,0.000231588139162,
  -0.000381736746553,-0.000190869165,0.000190869163824,-0.000190869165,0.000190869163824,0.000381736745531,0.000381736745531,-0.000381736746553,-0.000763475318313,-0.00103283609105,-0.00103283609105,-0.000744818471554,0.000744818461122,-0.00148964377153,-0.000667918194023,-0.000667918194023,-0.000912711878213,-0.000912711878213,0.000912711877779,0.000912711877779,-0.00182542287282,-0.00182542287282,0.000999907954266,0.000999907954266,0.0012778951372,-0.000638949421759,0.000638949423231,-0.000638949421759,0.000638949423231,-0.00127789514106,-0.00127789514106,0.0012778951372,-0.0025557893869,0.000108697848674,5.43488741822e-05,-5.43488744177e-05,5.43488741822e-05,-5.43488744177e-05,-0.000108697830359,-0.000108697830359,0.000108697848674,0.000217398019123,8.73231659405e-06,8.73231659405e-06,-8.73220839597e-06,-8.73220839597e-06,1.74656638009e-05,1.74656638009e-05,0.00028118692185,-0.000281186915683,0.00056237426579,0.000181258938355,-0.000181258921999,0.000181258938355,-0.000181258921999,-0.000228905064618,-0.000228905064618,-0.000275128173397,-0.000275128173397,0.000103992574757,0.000103992574757,-0.000358738342997,-0.000179369695374,0.000179369692388,-0.000179369695374,0.000179369692388,0.000358738338654,0.000358738338654,-0.000358738342997,-0.000717478352256,-0.000241644757356,0.000799788103381,-0.000799788101425,0.0015995858966,0.00168828364339,-3.28349337119e-05,3.28350435626e-05,6.56681498593e-05,-0.00151992248434,0.000613789943497,0.000306895353531,-0.00030689535278,-0.00030689535278,0.000306895353531,0.000613789943497,8.7280163147e-05,8.7280163147e-05,0.000174560387695,-2.51535877266e-05,-2.51535877266e-05,5.99143673052e-05,-5.9914347533e-05,0.000119829898601,0.000303530883129,-0.000151766165619,0.000151766167774,-0.000151766165619,0.000151766167774,-0.000303530884486,0.000303530883129,
  -0.000303530884486,0.000607062926759,0.00140651236787,0.00140651236787,-0.00069333444832,-0.00069333444832,-0.000170206401396,0.000170206404708,-0.000170206401396,0.000170206404708,-0.000170206401396,0.000170206404708,-0.000170206401396,0.000170206404708,-0.000170206401396,-0.000510617537562,-5.2608576817e-05,-5.2608576817e-05,-5.2608576817e-05,-5.2608576817e-05,0.000177544125314,0.000208719582201,-0.000446855411164,-0.000446855411164,-0.00114169527272,0.00114169528761,-0.00228339505439,-0.000806028141594,-0.000806028141594,-0.000191138014884,-0.000191138014884,0.000191138007314,0.000191138007314,-0.00038227675185,-0.00038227675185,0.000708527709189,0.000354265042207,-0.000354265043831,0.000354265042207,-0.000354265043831,-0.000708527708387,-0.000708527708387,0.000708527709189,0.00141705734089,2.73994716459e-06,1.37064520497e-06,-1.37029334592e-06,1.37064520497e-06,-1.37029334592e-06,-2.73956582595e-06,-2.73956582595e-06,2.73994716459e-06,5.48153794919e-06,0.00115844974258,0.00115844974258,8.56432202129e-05,8.56432202129e-05,-8.56432090513e-05,-8.56432090513e-05,-0.000171286571482,-0.000171286571482,-0.000268475885152,-0.000268475885152,-0.000199732781054,-0.000199732781054,0.000199732786023,0.000199732786023,-0.000399466764295,-0.000399466764295,0.000442173336899,0.000442173336899,-0.000271460894195,-4.93038784623e-05,-4.93038784623e-05,-0.000682358182608,-0.000682358182608,-7.82730780602e-05,7.82730927392e-05,-0.000156546637348,-6.95417608645e-06,3.47732325911e-06,-3.47732404161e-06,-3.47732404161e-06,3.47732325911e-06,-6.95417608645e-06,-0.000659667290052,-0.000659667290052,0.00024166074607,-0.000241660787686,-0.000483321789934,-0.000630308740992,-0.000630308740992,-0.000378850519212,0.000189425366943,-0.000189425367535,0.000189425366943,-0.000189425367535,0.000378850520061,0.000378850520061,-0.000378850519212,
  0.000757701777601,-0.000309475044103,-0.000309475044103,0.000959218342398,0.000959218342398,-0.000453754528638,-0.000167310049717,-0.000167310049717,0.000167310059712,0.000167310059712,0.000334619952156,0.000334619952156,-0.000586793537463,-0.000586793537463,-0.00176495953826,-0.00176495953826,-0.000195521660795,-0.000195521660795,0.00030019541296,0.000150097830463,-0.000150097830031,0.000150097830463,-0.000150097830031,-0.00030019541505,-0.00030019541505,0.00030019541296,0.000600390609308,-0.00338743538435,-0.00338743538435,-0.00338743538435,-0.00338743538435,-0.000310934971251,-0.000310934971251,-0.000310934971251,-0.000310934971251,0.00117376511402,0.00117376511402,-0.000250988089654,-0.000250988089654,0.00108734055551,-0.00108734055544,-0.00217468060746,-0.00505336142977,-0.00505336142977,0.000658494987565,0.000658494987565,0.000795043522808,0.000795043522808,-5.05284510538e-05,-5.05284510538e-05,0.000671836056568,0.000671836056568,0.00147917882589,-0.00073958860198,0.000739588602095,0.000739588602095,-0.00073958860198,0.00147917882589,0.000329862351047,0.000329862351047,-0.000329862350882,-0.000329862350882,0.000659724549589,0.000659724549589,0.000723726400487,0.000723726400487,0.000430785599818,0.000430785599818,0.000861569222859,0.000753689477313,1.4668576728e-05,7.33400001384e-06,-7.33397631385e-06,7.33400001384e-06,-7.33397631385e-06,-1.46685106801e-05,-1.46685106801e-05,1.4668576728e-05,2.93362819445e-05,0.00138881670463,0.00138881670463,0.000492784142664,0.000379882081556,0.000379882081556,0.000759765526902,0.000399123446236,-0.000399123445599,0.000798248322945,0.000597086065352,0.000597086065352,0.000197418671567,0.000197418671567,0.000223940400275,0.000223940400275,5.96807419516e-05,5.96807419516e-05,5.96807419516e-05,5.96807419516e-05,0.000176817778312,0.000176817778312,
  -0.000142567942135,-0.000142567942135,0.000142567951253,0.000142567951253,-0.000285136213153,-0.000285136213153,1.91240318042e-05,-9.56197865299e-06,9.56206339772e-06,9.56206339772e-06,-9.56197865299e-06,1.91240318042e-05,0.000778321099644,-0.000308995709232,0.000154500025383,0.000154500025383,-0.000154500018953,-0.000154500018953,0.000308995726426,0.000107959975035,0.000107959975035,-0.000107959954126,-0.000107959954126,0.000215918479033,0.000215918479033,0.000315604414284,0.000315604414284,-0.000536940730971,0.000536940731067,-0.00107388346141,-2.72705561337e-06,-2.72705561337e-06,-5.45806279744e-06,0.0011192213714,0.0011192213714,-0.000180353432614,-0.000180353432614,-0.00334591992084,8.17309886585e-05,8.17309886585e-05,0.000313349008344,0.000313349008344,-0.000138257527288,-0.000138257527288,-0.000138257527288,-0.000138257527288,-0.000276515087716,-0.000276515087716,-0.00069692779875,0.000696927802885,0.00139385533903,0.000700451572133,-0.000170193675262,-0.000170193675262,0.00103608892417,0.00103608892417,0.00207216649418,-0.000339951723027,-0.000339951723027,-0.000339951723027,-0.000339951723027,-0.000229339163508,-0.000114669398225,0.000114669398,0.000114669398,-0.000114669398225,-0.000229339163508,-0.000310212417045,0.000310212437346,-8.04155238221e-05,-8.04155238221e-05,-8.39736419435e-05,-4.19867890911e-05,4.19867892315e-05,-4.19867890911e-05,4.19867892315e-05,8.39736410999e-05,8.39736410999e-05,-8.39736419435e-05,-0.000167947498269,-0.000110698707263,-0.000110698707263,0.000269034374833,0.000269034374833,0.000128331279282,-0.000128331282515,0.000256663898093,8.01988520409e-05,-8.01988455962e-05,0.000160399236915,-6.80999759229e-05,6.81000032556e-05,-0.000136200790123,-0.000146817438979,0.000146817438791,0.000293635604193,-2.41230161619e-05,2.41231122602e-05,-2.41230161619e-05,2.41231122602e-05,
  -4.82455271619e-05,4.82456284691e-05,0.000240029288612,-0.000240029290704,-0.000480059811603,6.59741143247e-05,3.29873712816e-05,-3.29873788407e-05,3.29873712816e-05,-3.29873788407e-05,-6.59741212954e-05,-6.59741212954e-05,6.59741143247e-05,0.000131949257324,-0.000535490180691,0.000267745895462,-0.000267745895745,0.000267745895462,-0.000267745895745,0.000535490185626,-0.000535490180691,0.000535490185626,-0.00107098167005,0.000387981024905,-0.000387981021606,-0.000387981021606,0.000387981024905,0.000144496233317,0.000144496233317,-0.000263397667236,0.000263397667534,-0.000526797156948,-2.73875938088e-05,0.000355375103389,-0.00017850740592,0.000178507410433,-0.00035701634886,0.00100642534844,-0.00161830475272,-0.00161830475272,-0.000429620237273,-0.000599961728205,-0.000599961728205,0.000161684974052,0.000161684974052,0.000614504936545,0.000614504936545,0.000141438488804,-0.000141438476266,0.000282877243571,0.000147364205223,0.000147364205223,-0.000742653174965,0.000742653169759,-0.00148530964188,-4.74097078235e-05,-4.74097078235e-05,0.00111452439366,0.00111452439366,0.000133888192085,6.69437082507e-05,-6.69437069226e-05,6.69437082507e-05,-6.69437069226e-05,-0.00013388819539,-0.00013388819539,0.000133888192085,0.000267776288893,-9.87868162613e-05,9.87867934188e-05,0.00019757337526,-0.000728135034074,0.000728135031205,0.000447875782115,-0.000447875813566,-0.000895746044362,0.000128318826919,-0.000128318836471,0.000256639742958,0.000508969018778,0.000508969018778,0.000315626715604,-0.000116905833787,-0.000116905833787,0.000116905838102,0.000116905838102,-0.000233812576177,-0.000233812576177,0.00010014910322,-5.00749457059e-05,5.00749383293e-05,5.00749383293e-05,-5.00749457059e-05,0.00010014910322,6.03580926126e-05,-6.03581804982e-05,-0.000468027303769,0.000468027289238,-0.000936055872636,-0.000307325342368,
  0.0003073253419,-0.00061464922758,5.30757892114e-06,5.30757892114e-06,5.30757892114e-06,5.30757892114e-06,0.00063988973698,0.00063988973698,0.000426003067236,-0.00018908568204,-0.00018908568204,-0.00018908568204,-0.00018908568204,0.000903016241426,0.000451508389076,-0.000451508388015,-0.000451508388015,0.000451508389076,0.000903016241426,0.00118233015764,-0.00118233015836,-0.002364666234,0.000221103360233,-0.00022110346259,4.30699751633e-06,2.15359649834e-06,-2.15358200506e-06,-2.15358200506e-06,2.15359649834e-06,4.30699751633e-06,-2.776464953e-05,2.77646494134e-05,-5.55292683467e-05,0.000254510401042,-0.000254510351557,-0.000509019024533,0.0021097973282,-0.00210979732754,0.000290878669954,0.000290878669954,0.000339076906231,0.000339076906231,0.000163699660181,-8.18499837282e-05,8.18499880338e-05,-8.18499837282e-05,8.18499880338e-05,-0.000163699652974,5.2376091928e-05,5.2376091928e-05,-5.09325165004e-05,5.09325687574e-05,-0.000101867665368,-2.60925455026e-06,-1.30469810092e-06,1.30475354955e-06,1.30475354955e-06,-1.30469810092e-06,-2.60925455026e-06,2.60938562442e-06,-2.60925455026e-06,-5.21942949624e-06,-0.000638298289163,-0.000120312207773,-0.000120312207773,0.000120312209319,0.000120312209319,-0.000120312207773,-0.000120312207773,-0.000120312207773,0.000120312209319,0.000120312209319,-0.000360937860393,-0.000360603690242,0.000360603691254,-0.000721208299335,-7.05939810202e-05,0.000398398028787,-0.000398398030393,-0.00079679563108,9.95232697081e-05,-9.9523278636e-05,0.000199047933405,-0.00174004369049,0.0017400436888,0.00348010201471,0.0016085938693,0.00149469786477,0.00149469786477,-0.00032161081851,-0.000160806106352,0.000160806107652,-0.000160806106352,0.000160806107652,0.000321610816881,0.000321610816881,-0.00032161081851,-0.000643221581491,-0.000407083996929,0.000407083989264,
  -0.000814171131953,-0.000156740735423,-0.000156740735423,-0.000168910871996,-0.000168910871996,-0.000168910871996,-0.000168910871996,-0.00014855742438,0.000148557445181,-0.000297115266203,-0.000396587233562,-0.000396587233562,-0.0002543228766,-0.000127161064015,0.000127161063555,0.000127161063555,-0.000127161064015,-0.0002543228766,0.000276974367691,0.000138487294101,-0.000138487291185,-0.000138487291185,0.000138487294101,0.000276974367691,-0.000115902834495,0.000115902844097,0.000231804954174,-4.92170339303e-05,4.92169593692e-05,-9.84340866765e-05,-0.0011404125275,0.0011404125165,-0.00228082426455,0.000430320572035,-0.000430320572957,0.00086064143491,6.0923330188e-05,6.0923330188e-05,-6.09233534453e-05,-6.09233534453e-05,-0.000121848001517,-0.000121848001517,0.000176258569326,-0.000176258573204,0.000352516601332,0.000187197672788,9.35984421465e-05,-9.35984472836e-05,9.35984421465e-05,-9.35984472836e-05,-0.000187197679651,-0.000187197679651,0.000187197672788,0.000374394480439,-0.00028367710219,0.000283677109523,0.000567354692502,-0.00122053997934,-0.000919352802737,-0.000988760785385,0.000494380798298,-0.000494380794965,-0.000494380794965,0.000494380798298,-0.000988760785385,-5.27512732728e-06,-5.27512732728e-06,5.27536337516e-06,5.27536337516e-06,-1.05511377116e-05,-1.05511377116e-05,0.000466305070353,0.000466305070353,0.000466305070353,0.000466305070353,0.000771942668065,-0.000771942668635,-0.000771942668635,0.000771942668065,-8.35892043047e-05,-8.35892043047e-05,0.00103306763771,0.00103306763771,0.00130065967712,0.00130065967712,-0.000178582220437,-8.92906006873e-05,8.9290587698e-05,8.9290587698e-05,-8.92906006873e-05,-0.000178582220437,0.000449920256233,-0.000449920244059,-0.000899843200093,0.000193888809293,0.000193888809293,8.58963542476e-05,8.58963542476e-05,-8.58963584742e-05,-8.58963584742e-05,
  0.000171793294321,0.000171793294321,-0.000450565011023,-0.000158278402391,-7.91392003964e-05,7.91391929954e-05,7.91391929954e-05,-7.91392003964e-05,-0.000158278402391,0.000152331280329,-0.000152331258711,-0.000304661118872,4.24783368984e-05,-4.24783711206e-05,-8.49575613915e-05,9.77956222713e-06,9.77956222713e-06,-0.0151456810173,0.0151456810171,-0.00149902333672,0.00149902333658,0.00299804943963,-0.000123678342728,-0.000123678342728,-0.000123678342728,-0.000123678342728,-0.00178134177109,-0.00178134177109,0.000741453189414,-0.000741453188198,0.00148291136446,-0.000315420163259,-0.000385596046095,-0.000385596046095,0.000385596046643,0.000385596046643,0.000771193234501,0.000771193234501,0.000189080263377,0.000189080263377,0.000211964105347,0.000211964105347,-0.000211964122629,-0.000211964122629,0.000423928939399,0.000423928939399,-6.69423222551e-05,-6.69423222551e-05,0.000424552722723,0.000212276410084,-0.00021227641285,-0.00021227641285,0.000212276410084,0.000424552722723,0.000781701056647,0.000781701056647,0.000235986819475,0.00126791029746,-0.000633956192684,0.000633956192067,0.000633956192067,-0.000633956192684,0.00126791029746,-0.00164399745153,0.00082199944467,-0.000821999447614,-0.000821999447614,0.00082199944467,-0.00164399745153,1.17611702115e-06,1.17611702115e-06,-0.000308309862423,0.00030830986371,-0.000616620616255,0.000170644034702,0.000170644034702,-8.05169364835e-06,-8.05169364835e-06,8.05182276326e-06,8.05182276326e-06,-1.61037533193e-05,-1.61037533193e-05,-0.000106307044593,-0.000106307044593,0.000113086262116,0.000113086262116,-0.00011308626063,-0.00011308626063,0.000226172548247,0.000226172548247,0.000367442926425,-0.000367442926932,-0.000734886986836,0.000101846666781,-5.09236751789e-05,5.09236512925e-05,-5.09236751789e-05,5.09236512925e-05,-0.000101846689067,0.000101846666781,
  -0.000101846689067,0.000203694518674,-0.000215690644578,-0.000215690644578,0.000215690645528,0.000215690645528,-0.000431380664683,-0.000431380664683,-0.0010233700879,-0.0010233700879,0.000808314125833,-0.000808314134707,-0.00236250843579,-0.00236250843579,-0.00236250843579,-0.00236250843579,-8.75476957668e-05,-8.75476957668e-05,-0.000175096134595,-0.000678621319587,0.000339311373974,-0.000339311381227,0.000339311373974,-0.000339311381227,0.00067862134005,-0.000678621319587,0.00067862134005,-0.00135724351278,-0.000116801261096,0.000116801260975,-0.000233602146315,0.001415375074,0.000517387448026,0.000517387448026,3.89164144734e-05,-3.89164352913e-05,7.78336834701e-05,-0.000806676022083,-0.000806676022083,-0.000421951273727,-0.000421951273727,-0.000533416363215,-0.000533416363215,-0.000146858284847,-0.000146858284847,0.000654325254449,0.000654325254449,0.00130864984456,-0.000562730566785,-0.000562730566785,0.000100224023979,0.000100224023979,-0.0003128176969,-0.0003128176969,9.30963626844e-05,9.30963626844e-05,0.000846171647575,0.000846171647575,0.001291394526,-0.00129139452674,-0.00258279075687,6.38053324282e-05,6.38053324282e-05,-6.38053351279e-05,-6.38053351279e-05,0.000127610397433,0.000127610397433,-0.000247760401996,-0.000247760401996,-0.00110399558066,-0.000658607321999,0.000658607321851,-0.00131721909852,-0.000267795114154,-0.000267795114154,-0.000220922667787,-0.000110461491041,0.000110461490656,-0.000110461491041,0.000110461490656,0.000220922663784,0.000220922663784,-0.000220922667787,-0.000441845414612,0.000490203615036,0.000490203615036,-0.000248643541883,-0.000248643541883,6.72135632142e-05,-6.72135189052e-05,-0.000134431302178,-2.11364586747e-05,1.05685633875e-05,-1.05685482871e-05,1.05685633875e-05,-1.05685482871e-05,2.11364384238e-05,-2.11364586747e-05,2.11364384238e-05,-4.22727753562e-05,
  -0.00110580828786,-0.00110580828786,-0.000609764221156,-0.000609764221156,9.00442625296e-05,0.000158075148797,0.000158075148797,-0.00844823176118,0.00844823175887,0.0168964665833,0.00182650863479,2.56378378392e-05,-2.56377059105e-05,4.93048181342e-05,-2.46522758165e-05,2.46522257694e-05,-2.46522758165e-05,2.46522257694e-05,-4.93048174522e-05,4.93048181342e-05,-4.93048174522e-05,9.86148362392e-05,0.000163317013626,-5.06197274868e-06,-5.06197274868e-06,-0.000141556649628,-0.000141556649628,0.000141556647808,0.000141556647808,-0.000283113762484,-0.000283113762484,-0.000425037547901,-0.000425037547901,-0.000425037547901,-0.000425037547901,9.49481018952e-06,9.49481018952e-06,0.000215220903771,0.000215220903771,-0.000228004984066,-0.000228004984066,2.98809766284e-05,1.49404491168e-05,-1.49404517001e-05,-1.49404517001e-05,1.49404491168e-05,2.98809766284e-05,0.000847944204996,-5.53837648197e-05,-5.53837648197e-05,-9.06097632072e-06,4.53029289032e-06,-4.53036142906e-06,4.53029289032e-06,-4.53036142906e-06,9.06151032565e-06,-0.000199354069564,-0.000199354069564,-0.000171658297886,8.58299248957e-05,-8.58299285486e-05,8.58299248957e-05,-8.58299285486e-05,0.000171658302822,0.000171658302822,-0.000171658297886,0.000343315220704,5.23503682544e-05,5.23503682544e-05,-0.00210294935159,0.00210294935523,0.00420589626472,-0.000438921764841,0.000438921769809,-0.000877844496462,-0.000554453452831,0.000554453451139,0.00110890930981,0.000312961477716,0.000312961477716,-0.000312961478382,-0.000312961478382,0.000625923682342,0.000625923682342,-0.00105219714694,-0.00105219714694,0.00105219714437,0.00105219714437,-0.00210438957361,-0.00210438957361,-0.000396010403889,-0.000396010403889,-0.000121307705104,-6.06536217047e-05,6.06536223109e-05,-6.06536217047e-05,6.06536223109e-05,0.000121307704434,0.000121307704434,-0.000121307705104,
  -0.000242615375897,-0.000917798185408,-0.000917798185408,-0.000917798185408,-0.000917798185408,-0.000164022488805,0.000164022489677,-0.000328046048083,-0.000614565385188,-0.000614565385188,-0.000535985512168,-0.000535985512168,0.000535985512394,0.000535985512394,-0.00107197006359,-0.00107197006359,-0.000689055030627,-0.000689055030627,0.000689055032379,0.000689055032379,-0.00137810932039,-0.00137810932039,0.000743280791444,0.000743280791444,-0.000131047408413,-0.000131047408413,-0.000131047408413,-0.000131047408413,0.00048010145902,0.00048010145902,-0.000706006692536,0.000706006691536,-0.000706006692536,0.000706006691536,-0.00141201427879,0.00141201428139,-9.68031468852e-05,-9.68031468852e-05,-0.000223899021925,0.000223899026441,-0.000447797743631,-2.62353444115e-05,-2.62353444115e-05,0.000312696329874,0.000156348119006,-0.000156348118016,0.000156348119006,-0.000156348118016,-0.000312696328878,0.000145242477402,-0.000145242477762,0.000290485653178,0.000244450822704,-0.000320322383218,-0.000320322383218,-0.000243086103401,-0.000243086103401,0.000243086111531,0.000243086111531,-0.000486172360513,-0.000486172360513,0.000103609064382,0.000103609064382,-0.000341966010419,0.00017098154494,-0.000170981540535,-0.000170981540535,0.00017098154494,-0.000341966010419,1.39706852106e-05,1.39706852106e-05,-9.30818181143e-05,-9.30818181143e-05,-0.00017755422352,0.000177554180165,0.000563488017377,0.000563488017377,-0.000229808229688,-0.000229808229688,0.000504785782199,-0.000452138789425,-0.000226070473071,0.000226070485344,-0.000226070473071,0.000226070485344,0.000452138925255,-0.000452138789425,0.000452138925255,0.000904282005005,-0.00164546638412,0.00164546638785,0.00329093810585,6.78094096696e-05,-3.39050028898e-05,3.39049889053e-05,-3.39050028898e-05,3.39049889053e-05,-6.78092639748e-05,-0.000367938435606,-0.000367938435606,
  0.000189087391299,0.000189087391299,0.000155767972518,7.78845238764e-05,-7.78845226424e-05,7.78845238764e-05,-7.78845226424e-05,-0.00015576797766,-0.00015576797766,0.000155767972518,0.000311536343983,0.000303384660354,-0.000303384687907,-0.000606773974189,0.00042915256268,0.00042915256268,1.77575745497e-06,-8.88587775805e-07,8.86086563123e-07,8.86086563123e-07,-8.88587775805e-07,1.77575745497e-06,0.000570577136068,0.000570577136068,-0.000215456748246,-0.000215456748246,-5.7987531483e-05,-5.7987531483e-05,-5.7987531483e-05,-5.7987531483e-05,-0.000147109274907,0.000147109276972,-0.00029421884348,8.80514139185e-05,4.40259557081e-05,-4.40259576829e-05,4.40259557081e-05,-4.40259576829e-05,-8.80514388933e-05,8.80514139185e-05,-8.80514388933e-05,-0.000176103685712,-0.00136187344447,-0.00136187344447,0.000152038790693,0.000327735368985,0.000327735368985,0.000327735368985,0.000327735368985,-0.000330326386653,-0.000330326386653,-0.000660654983308,0.000226339950584,-0.00022633995241,-0.000452681203682,0.00035337786472,-0.000296823751876,-0.000755406951799,0.00037770350256,-0.00037770349534,-0.00037770349534,0.00037770350256,-0.000755406951799,5.59689867928e-05,5.15220571471e-05,-5.15220551134e-05,0.00010304604878,-4.96854574445e-05,-4.96854574445e-05,9.5130959609e-05,9.5130959609e-05,-0.000115353585429,0.000115353585194,-0.000115353585429,0.000115353585194,-9.62633051998e-05,9.62632988642e-05,0.000192523334021,9.18260747569e-05,-9.18260665323e-05,0.000183652413209,0.00187538463599,-0.000530427983665,-0.000530427983665,0.000762225889031,0.000198247970963,0.000198247970963,-0.000132661318008,0.000132661282974,0.000265325452711,0.000571023702274,0.000571023702274,0.00195492960856,0.00195492960856,0.000108511681401,-0.000108511663951,-0.000217023367494,-0.000222323045032,0.000111160577763,-0.000111160666607,
  0.000111160577763,-0.000111160666607,0.000222322901109,-0.000222323045032,0.000222322901109,-0.000444640068599,0.000160418828115,0.000160418828115,-0.00111690957749,-0.00111690957749,-8.97560157209e-05,4.48780937963e-05,-4.48780861846e-05,-4.48780861846e-05,4.48780937963e-05,-8.97560157209e-05,-8.97560157209e-05,8.97559734244e-05,-0.000179517136467,0.000330887908509,-0.000330887907915,0.000661777863393,0.000685406300664,-0.000685406329251,-0.00137081069428,-0.000609536313074,-3.73311164748e-05,3.73311200549e-05,7.46619471213e-05,-0.000141529528099,-0.000141529528099,-0.000109506745087,-0.000289074563546,-0.000289074563546,0.000194773962662,0.000194773962662,-0.00019477396027,-0.00019477396027,-0.000389550012472,-0.000389550012472,-0.000172256952237,-0.000172256952237,0.00211038328133,0.00211038328133,0.00039212247974,0.00039212247974,-0.000228813747544,-0.000228813747544,0.000773840594273,0.000773840594273,-8.31408123689e-05,8.31408131808e-05,-0.000166282948974,0.000563612385761,0.000281806634308,-0.000281806633458,0.000281806634308,-0.000281806633458,-0.000563612386632,-0.000563612386632,0.000563612385761,0.00112722634077,-0.000230506018883,-0.000230506018883,-0.000519766632099,-0.000259883826395,0.000259883825826,0.000259883825826,-0.000259883826395,-0.000519766632099,-0.00139729516689,-0.000698649676173,-0.000698649676173,0.000698649675206,0.000698649675206,0.00139729516661,0.00139729516661,0.00139729516661,0.00279459620151,4.19150619821e-05,-2.09574093868e-05,2.09574089248e-05,2.09574089248e-05,-2.09574093868e-05,4.19150619821e-05,0.000358166008543,0.000358166008543,0.000376054307815,-0.000376054312197,0.000752112403291,-0.00215449567393,-0.00215449567393,-0.000490430902921,0.000278913857389,-0.000278913857576,0.000557828253598,-0.000330617963192,-0.000330617963192,-0.00300755370536,-0.00300755370536,
  0.000504465980638,0.000504465980638,-0.000504465988728,-0.000504465988728,0.00100893129565,0.00100893129565,-0.00134035063701,-0.000370085094235,0.000370085092289,0.000740171003111,-0.000274370763192,0.000274370770162,-0.000548741719214,5.75920340633e-05,-2.87958264352e-05,2.87958318948e-05,-2.87958264352e-05,2.87958318948e-05,-5.7592002845e-05,-2.3104129565e-05,2.31042988105e-05,4.62094445577e-05,0.000839579509148,-0.000839579518775,0.00167915806309,0.000417723987282,0.000417723987282,-0.000417723987444,-0.000417723987444,0.000835447998226,0.000835447998226,0.000140515571113,-7.02580731522e-05,7.02580611528e-05,-7.02580731522e-05,7.02580611528e-05,-0.000140515569856,0.000140515571113,-0.000140515569856,0.000281031437526,-0.000130329493094,0.000156350201554,-0.00015635020001,-0.000312701303389,-0.000501648020891,-0.000501648020891,-0.000409928956562,-0.000409928956562,-0.000819858067939,-1.97115203105e-05,9.85585465603e-06,-9.85586442239e-06,9.85585465603e-06,-9.85586442239e-06,1.97114599217e-05,-1.97115203105e-05,1.97114599217e-05,-3.94228561102e-05,-0.000122031939507,-6.10170526188e-05,6.10170465261e-05,6.10170465261e-05,-6.10170526188e-05,-0.000122031939507,4.46406577581e-05,-0.000690796863386,-0.000690796863386,-3.92600909035e-05,-3.92600909035e-05,0.00151372781377,0.00151372781377,-0.000275458536339,-0.000803049109943,-0.000803049109943,0.000367013842811,0.00335060689355,0.00335060689355,-3.55087230641e-06,3.54837109362e-06,7.10000188153e-06,0.000727035003032,0.000727035003032,-0.000727035018794,-0.000727035018794,0.00145407776801,0.00145407776801,0.000126060162011,0.000126060162011,0.000126060162011,0.000126060162011,0.00025212152914,0.00025212152914,-0.000217771239278,-0.000217771239278,0.000217771236482,0.000217771236482,-0.000435543848138,-0.000435543848138,7.95783333299e-05,7.95783333299e-05,
  -0.00325648573742,-0.00325648573742,1.82930388792e-06,1.82930388792e-06,-1.82933896364e-06,-1.82933896364e-06,3.65760751447e-06,3.65760751447e-06,-0.000443238349036,2.11343383487e-05,2.11343383487e-05,-0.000573088886367,-0.000573088886367,-0.000573088886367,-0.000573088886367,-0.000351506382556,0.000351506382335,0.00070301371701,1.90516498962e-05,1.90516498962e-05,-1.90516274047e-05,-1.90516274047e-05,3.81035491012e-05,3.81035491012e-05,0.000152850866402,0.000152850866402,-0.000152850866842,-0.000152850866842,0.000305702005316,0.000305702005316,0.000178191603317,-8.90955568264e-05,8.90955489369e-05,8.90955489369e-05,-8.90955568264e-05,0.000178191603317,-0.000870517069376,-0.00030561951285,-0.00030561951285,-6.89141232653e-06,-6.89141232653e-06,-0.000235531321339,0.000235531323705,-0.000471063228392,-0.000332847357678,-0.000332847357678,0.000574013199048,0.000574013199048,0.000188888730681,0.000188888730681,-0.000188888725186,-0.000188888725186,-0.000377776357825,-0.000377776357825,-0.00111387353753,0.00111387355915,0.00222775029086,0.000405518970504,0.000405518970504,0.00177918910631,-0.000889595486969,0.000889595486176,-0.000889595486969,0.000889595486176,-0.00177918909996,-0.000291561972951,-0.000291561972951,-0.000291561972951,-0.000291561972951,0.000205395195187,-0.000205395197185,-0.000410791026824,-0.000326917674217,-0.000163458971916,0.000163458971609,-0.000163458971916,0.000163458971609,0.000326917674132,0.000326917674132,-0.000326917674217,-0.00065383537762,0.00274814782611,-0.00274814782774,0.00033887744838,-0.000354438264341,0.000354438265142,-0.000708876856665,-0.000174026351412,-0.000174026351412,-0.000102321589305,0.000102321589716,-0.000204642682136,-0.000905188674536,-0.000905188674536,-0.000905188674536,-0.000905188674536,-0.000109825735429,-0.000109825735429,0.000331506431059,-0.000331506428392,
  0.000663013785444,0.000330063818378,0.000330063818378,0.000306971856841,0.000153486344635,-0.000153486343636,0.000153486344635,-0.000153486343636,-0.000306971855655,-0.000306971855655,0.000306971856841,0.000613944673707,0.000781700662519,0.000781700662519,-0.00109315752204,0.0010931575377,0.00218632518413,0.000230016584543,0.00254514629659,-0.00254514629711,-0.000291347847892,-0.000291347847892,-0.000291347847892,-0.000291347847892,0.000864665878822,0.000864665878822,-0.000844057896312,-0.000508504919926,-0.000508504919926,-0.00101701092232,-0.000240867635704,0.000120435206928,-0.000120435201691,-0.000120435201691,0.000120435206928,-0.000240867635704,-0.000240867635704,0.00024086763165,-0.000481737062963,-0.000799913766907,-0.000461982499051,0.000461982495182,-0.000923965146362,-8.43817330582e-05,8.43817371002e-05,-0.000168763289439,0.000106225337002,0.000505591191363,0.000505591191363,0.000505591191363,0.000505591191363,-0.000620728680162,-0.000620728680162,0.00130366679624,0.00130366679624,0.000212791149225,0.000180753203834,0.000180753203834,0.000446176487658,0.000544690525981,0.000544690525981,-0.000544690525641,-0.000544690525641,-0.00108938044291,-0.00108938044291,-0.000549375171959,-0.000549375171959,-0.000549375171959,-0.000549375171959,-0.000115623119018,-0.000115623119018,0.000115623119812,0.000115623119812,-0.000231246018656,-0.000231246018656,0.000166483286637,-8.3241259153e-05,8.32412876474e-05,8.32412876474e-05,-8.3241259153e-05,0.000166483286637,-0.000975924427632,0.000487962069064,-0.000487962068437,0.000487962069064,-0.000487962068437,0.000975924431177,-0.00061242740304,-0.000306214346387,0.000306214345634,-0.000306214346387,0.000306214345634,0.000612427404252,0.000612427404252,-0.00061242740304,-0.00122485546186,-0.000305263232396,-0.000305263232396,-0.00030798918099,-0.000153994677088,
  0.000153994675924,0.000153994675924,-0.000153994677088,-0.00030798918099,-0.00068122644766,0.000681226448895,-0.00136245336005,0.00041737861382,-0.000417378656234,0.00116482238094,0.00116482238094,-0.00120850751628,0.00120850752239,0.002417017344,-0.00090903473276,-1.50313920496e-06,-1.50313920496e-06,-1.50313920496e-06,-1.50313920496e-06,-0.000273425720601,0.000273425722349,0.000546851427438,-4.80243813803e-05,-4.80243813803e-05,-4.80243813803e-05,-4.80243813803e-05,-9.6048618994e-05,-9.6048618994e-05,-0.00155568410025,-0.000238598552451,0.000238598605322,-0.000543655363245,0.000543655357878,-0.00108731365694,5.45640137579e-05,5.45640137579e-05,-4.10981116359e-05,-4.10981116359e-05,4.10981128434e-05,4.10981128434e-05,-8.21961026871e-05,-8.21961026871e-05,-0.000511664105748,-0.000511664105748,-0.00121646111488,-0.00121646111488,0.000623936769037,-0.000623936771384,-0.00124787696244,0.00231699327433,0.00231699327433,0.000154524823485,0.000154524823485,-0.000154524822609,-0.000154524822609,0.000309049691561,0.000309049691561,0.000625004819771,0.000625004819771,-0.000330109391828,-0.000165055373045,0.000165055370758,-0.000165055373045,0.000165055370758,0.000330109390332,0.000330109390332,-0.000330109391828,-0.000660216435058,-0.000385404668879,-0.000385404668879,0.000385404663661,0.000385404663661,-0.000770809514872,-0.000770809514872,-9.55555250663e-05,-9.55555250663e-05,9.55555279404e-05,9.55555279404e-05,-0.000191112106807,-0.000191112106807,8.25840600065e-05,-0.00102857102048,0.0010285710056,-0.00205714614428,0.001161980427,-0.000542285951827,0.000542285954937,-0.000542285951827,0.000542285954937,0.000182661486064,0.000182661486064,0.000697484621152,0.000981437533608,-0.000981437509913,-0.00196288119317,0.00134976279818,-0.000674881197529,0.000674881217374,0.000674881217374,-0.000674881197529,
  0.00134976279818,0.00020080926094,-0.000200809253856,-0.000401618597263,0.000275131261847,0.000275131261847,-0.000275131263852,-0.000275131263852,-0.000550262703575,-0.000550262703575,9.72009201986e-05,-4.86005402721e-05,4.86005426311e-05,-4.86005402721e-05,4.86005426311e-05,-9.72009203592e-05,9.72009201986e-05,-9.72009203592e-05,0.000194402515088,0.000628002738159,-0.000314000911921,0.000314000916264,0.000314000916264,-0.000314000911921,0.000628002738159,-3.1366455245e-05,-3.1366455245e-05,3.13664472442e-05,3.13664472442e-05,-3.1366455245e-05,-3.1366455245e-05,-3.1366455245e-05,3.13664472442e-05,3.13664472442e-05,-9.40993265949e-05,-0.000154887130378,-0.000154887130378,8.68322395788e-05,-4.34161456346e-05,4.3416167952e-05,4.3416167952e-05,-4.34161456346e-05,8.68322395788e-05,-0.000631004510607,-0.00023788958962,-0.00023788958962,0.000237889578301,-0.00023788958962,0.000237889578301,0.000237889578301,-0.00023788958962,0.000237889578301,0.000237889578301,0.000713669366672,0.000595530012104,-0.000595530009467,-0.00119106073625,-0.000203031168329,-0.000383643980786,-0.000383643980786,-0.000383643980786,-0.000383643980786,-0.000130265668281,0.000130265671473,-0.000260531614479,-0.000514525400131,0.000514525394672,-0.000514525400131,0.000514525394672,-0.00102905329582,0.00102905326605,-0.000426936938043,0.000426936897509,0.000853877788884,0.000218909687358,0.000218909687358,0.000218909687358,0.000218909687358,0.000328722798045,0.000328722798045,-0.000328722794485,-0.000328722794485,-0.000657442197111,-0.000657442197111,2.97142240001e-05,2.97142240001e-05,2.97142240001e-05,2.97142240001e-05,0.000123102735289,-0.00019382326737,9.69113681033e-05,-9.69113565694e-05,9.69113681033e-05,-9.69113565694e-05,0.000193823277214,-0.00019382326737,0.000193823277214,-0.000387645270336,-0.00137199854232,-0.00137199854232,
  -2.47221554816e-06,-2.47221554816e-06,2.47241372211e-06,2.47241372211e-06,4.94546028816e-06,4.94546028816e-06,-0.00285480590152,-0.00285480590152,-0.000326003755196,-0.000163002510027,0.000163002509383,-0.000163002510027,0.000163002509383,0.000326003755495,0.000326003755495,-0.000326003755196,-0.000652008950038,-3.51276363893e-05,-3.51276363893e-05,-3.51276363893e-05,-3.51276363893e-05,0.000289563654711,0.000144781817536,-0.000144781815378,-0.000144781815378,0.000144781817536,0.000289563654711,0.00252031653757,0.000186743628279,0.000186743628279,0.000671993358126,-0.000715848814632,0.000357925790944,-0.000357925794315,-0.000357925794315,0.000357925790944,-0.000715848814632,8.80751929263e-05,-8.80752007324e-05,0.000176150836274,0.00187695961201,-2.93723713755e-05,-2.93723713755e-05,2.9372373513e-05,2.9372373513e-05,-5.87435990536e-05,-5.87435990536e-05,-7.37779185335e-05,-7.37779185335e-05,7.37779262465e-05,7.37779262465e-05,-0.000147555348829,-0.000147555348829,0.000151658533647,0.000663073195793,0.000663073195793,1.78677046684e-05,-2.18704553219e-05,-2.18704553219e-05,-2.18704553219e-05,-2.18704553219e-05,-0.00206903972946,-0.00206903972946,2.72576071469e-05,-2.72575423878e-05,-5.45171412587e-05,0.0010092699884,-0.000504636732702,0.000504636730781,-0.000504636732702,0.000504636730781,-0.00100926998463,0.0010092699884,-0.00100926998463,0.00201854099919,7.31225571814e-05,7.31225571814e-05,-0.000123692440306,-0.000123692440306,0.000123692441574,0.000123692441574,0.000205570831736,0.000102785498719,-0.000102785500353,-0.000102785500353,0.000102785498719,0.000205570831736,-0.00781183104923,-0.00781183104923,-7.5261248158e-05,7.52612441388e-05,0.000150523218308,-0.000229386284592,0.000229386279006,-0.000458768276569,0.000329294610635,0.000329294610635,-1.01848039027e-05,1.01848645741e-05,-2.03688123298e-05,
  0.000130190974813,-0.000130190974588,0.000260381225948,0.00078073099512,0.00078073099512,-0.000166464990534,-8.32327281715e-05,8.32327371608e-05,8.32327371608e-05,-8.32327281715e-05,-0.000166464990534,5.52147111761e-05,5.52147111761e-05,5.52147111761e-05,5.52147111761e-05,0.000536570721583,0.000536570721583,-0.00104036624599,-0.00104036624599,-0.00208073199071,-0.000679728098112,-0.000339863087326,0.000339863088665,0.000339863088665,-0.000339863087326,-0.000679728098112,-0.000917570106238,0.000917570110814,0.00183514151718,0.000989967034187,-0.000368455802607,0.000368455802776,-0.000736912898977,0.00036043722619,0.00036043722619,-0.00026981269444,-0.00026981269444,-0.00026981269444,-0.00026981269444,-0.000417793424929,-0.000417793424929,-5.28291588746e-05,5.2829140399e-05,-0.000105658379154,-0.00013083791509,0.000130837915789,0.00026167473251,-5.43652975601e-05,-5.43652975601e-05,-0.000366202022385,-0.000183100502712,0.000183100505323,0.000183100505323,-0.000183100502712,-0.000366202022385,-0.000165583969973,-0.000165583969973,-0.000165583969973,-0.000165583969973,-8.30510064694e-05,-8.30510064694e-05,8.3050985389e-05,-8.30510064694e-05,8.3050985389e-05,8.3050985389e-05,8.3050985389e-05,-8.30510064694e-05,-8.30510064694e-05,-0.000249152174974,-5.90565415754e-06,-5.90565415754e-06,-0.000342613257621,-0.000342613257621,5.40977903454e-05,5.40977903454e-05,-0.000180498051172,0.000180498052961,0.000180498052961,-0.000180498051172,-0.000875569270051,0.000875569279121,0.00175113672077,0.000257176877675,0.000257176877675,0.000138085430958,0.000138085430958,0.00214914442781,0.00214914442781,0.000865074899416,0.000865074899416,-0.00042535055012,0.000212675760919,-0.000212675761912,-0.000212675761912,0.000212675760919,-0.00042535055012,0.000197873970182,0.000197873970182,-0.000258167763131,-0.000258167763131,
  0.000258167761007,0.000258167761007,-0.000516336205346,-0.000516336205346,-0.000465070270875,-0.000465070270875,0.000300244214148,0.000300244214148,-0.000300244215432,-0.000300244215432,-0.000600488813081,-0.000600488813081,-0.000372551439212,-0.000186276282278,0.000186276283054,-0.000186276282278,0.000186276283054,0.000372551439445,0.000372551439445,-0.000372551439212,-0.000745106301445,-0.000292954606946,0.000292954608233,0.000585906661313,0.00182053041458,-0.00182053041945,-0.0036410691961,-0.000257969692119,-0.000257969692119,-3.09386514936e-05,-3.09386514936e-05,0.000116164844878,0.000116164844878,0.000116164844878,0.000116164844878,0.00032677613197,0.00032677613197,0.00068952357348,0.00068952357348,-0.000565455031756,0.000565454998335,0.000312051624586,-0.000794618039192,-0.000794618039192,-0.000135103851487,-0.000135103851487,-0.000270205822714,0.00038180640054,0.00038180640054,-0.00042292999135,-0.00042292999135,-0.000148589413968,-0.000148589413968,0.000554652804355,0.000554652804355,0.000667747711622,-0.000667747714006,0.00133549889678,0.000223467969526,0.000223467969526,0.000484894760501,-0.000484894758857,0.000969792559441,-7.46215232237e-05,-3.7311197777e-05,3.7311186153e-05,-3.7311197777e-05,3.7311186153e-05,7.46215439187e-05,7.46215439187e-05,-7.46215232237e-05,-0.000149243395298,0.000194454196809,0.000194454196809,4.85749966511e-05,-4.85749943878e-05,9.71500549716e-05,-0.000532646366951,-0.000532646366951,0.000225121347823,0.000225121347823,0.000225121347823,0.000225121347823,0.000136649045993,0.000136649045993,0.00109922732311,0.00109922732311,0.000382363990074,0.000382363990074,0.000382363990074,0.000382363990074,-0.000204662836463,-0.000326523259083,-0.000326523259083,0.000326523258602,0.000326523258602,-0.000653045415059,-0.000653045415059,0.000112426789174,-0.000112426787164,
  0.000224854878829,0.000361392505768,0.000361392505768,-7.52375254809e-05,-7.52375254809e-05,-7.52375254809e-05,-7.52375254809e-05,-0.00015047499374,-0.00015047499374,0.00694015579077,-0.00694015578811,0.00114231533625,-0.00114231532963,-0.000510652494416,-0.000510652494416,0.00109396885802,-0.00109396886517,-0.00109396886517,0.00109396885802,0.00508651479505,-0.000179419674565,8.97099964699e-05,-8.97099918025e-05,-8.97099918025e-05,8.97099964699e-05,-0.000179419674565,0.000944974130001,-0.000944974124,0.00188995006493,-0.000282695278264,0.000282695277688,-0.000565391915108,-0.000483439083244,0.000483439076577,-0.000966877478184,0.000179068854192,0.000179068854192,0.000317170549762,0.000107230580385,0.000107230580385,-0.000107230531669,-0.000107230531669,-0.000378031662047,-0.000378031662047,-0.000378031662047,-0.000378031662047,-0.00126309368245,-0.00126309368245,-0.00126309368245,-0.00126309368245,0.000374757277098,-0.000374757292769,0.000749511534843,0.000281310148856,-0.000281310153178,-0.000562621655986,-0.000255482627448,-0.00207702801542,0.00207702801414,-0.00207702801542,0.00207702801414,-0.00027050120507,-0.00027050120507,-0.000146485044052,-0.000146485044052,0.000146485041411,0.000146485041411,0.000292969522475,0.000292969522475,0.000323363497766,0.000323363497766,-0.000230165626934,0.000230165631089,0.000460331630743,-0.00133489423284,-0.00133489423284,-2.55396104459e-05,2.55396456365e-05,5.10793487029e-05,-0.000866937508758,-0.000866937508758,-0.00173387626198,0.000530450013255,-0.000265225624751,0.000265225630361,0.000265225630361,-0.000265225624751,0.000530450013255,0.000139401043628,-0.000139401067642,0.000278803056862,0.000286375358095,0.000143187753193,-0.000143187746562,0.000143187753193,-0.000143187746562,-0.000286375381486,-0.000286375381486,0.000286375358095,0.000572749048271,
  -0.000509110353111,-0.000509110353111,-0.00016368005062,-0.00016368005062,0.00121875283335,0.00121875283335,-0.000130464189038,-0.000130464189038,7.03256832122e-05,7.03256832122e-05,7.03256832122e-05,7.03256832122e-05,0.000408555584299,-0.000408555576831,-0.000817111165785,0.000714839774993,0.000714839774993,-0.0033588891547,0.00335888915782,0.00671778162428,-0.000788946997721,0.000394473510358,-0.000394473506685,-0.000394473506685,0.000394473510358,-0.000788946997721,0.000185710612807,-9.28549607744e-05,9.28549076587e-05,9.28549076587e-05,-9.28549607744e-05,0.000185710612807,0.000340136210089,0.00226393628909,0.00226393628909,0.000107738890939,5.38690569891e-05,-5.38690816229e-05,-5.38690816229e-05,5.38690569891e-05,0.000107738890939,0.000168192479521,0.000168192479521,0.000994929362382,0.000994929362382,0.000994929362382,0.000994929362382,0.000809533185038,0.000809533185038,0.000304407733065,0.000304407733065,-0.00192043348689,-0.000183808504973,-0.000183808504973,0.000583161799714,0.000583161799714,-0.000210291299552,0.000210291308069,0.00042058331517,7.80286833083e-05,7.80286833083e-05,7.80286833083e-05,7.80286833083e-05,-0.000203814265645,-0.000203814265645,-0.000163848027825,-8.19241819254e-05,8.19241822243e-05,-8.19241819254e-05,8.19241822243e-05,0.000163848027844,-0.000999753357228,-0.000999753357228,-0.000227660059662,-0.000227660059662,-1.62050301163e-05,-1.62050301163e-05,-0.000434434865465,-0.000434434865465,0.000146497051343,-7.32490016277e-05,7.32489987125e-05,7.32489987125e-05,-7.32490016277e-05,0.000146497051343,1.20269391517e-05,1.20269391517e-05,1.20269391517e-05,1.20269391517e-05,0.000280110913296,0.000280110913296,3.53071737617e-05,3.53071737617e-05,-0.00011522335696,-0.00011522335696,0.000115223344518,0.000115223344518,0.000230446441867,0.000230446441867,5.97432493299e-05,
  -0.00144955805633,-0.00223714262984,-0.00223714262984,-0.000293713556417,-0.000293713556417,-0.000293713556417,-0.000293713556417,-0.000587429872621,-0.000587429872621,-7.77345135297e-05,-0.000519782588454,-0.000519782588454,-0.00237346718918,-0.00237346718918,0.000225441679307,0.000225441679307,-0.000246969633406,0.000123484969176,-0.000123484967517,0.000123484969176,-0.000123484967517,0.000246969630262,0.000246969630262,-0.000246969633406,0.000493939578571,0.000276542534874,0.000276542534874,-0.000219948114854,0.00021994810943,-0.000439897130612,0.000166780835372,0.000166780835372,0.000166780835372,0.000166780835372,-0.00341392626409,-0.00341392626409,-2.66389685633e-06,-1.33202786737e-06,1.33206131583e-06,-1.33202786737e-06,1.33206131583e-06,2.66380692005e-06,2.66380692005e-06,-2.66389685633e-06,-5.32787211761e-06,-0.000151970099084,-0.000151970099084,0.000151970099279,0.000151970099279,0.000303941231292,0.000303941231292,9.1585637289e-05,9.1585637289e-05,0.000860107040464,0.000860107040464,-0.000860107037515,-0.000860107037515,0.0017202129765,0.0017202129765,-0.000317385414589,-0.000317385414589,0.000317385415848,0.000317385415848,-0.000634770970744,-0.000634770970744,-1.73015048882e-05,1.73015497877e-05,-3.46035549484e-05,-0.000750874822792,-0.000750874822792,-0.00150175437375,0.000119306639245,0.000119306639245,0.000119306639245,0.000119306639245,0.00080570667116,0.00080570667116,-4.8304761687e-06,0.000408212855855,0.000408212855855,-6.92897602985e-05,6.9289761672e-05,-0.000138579273488,5.58340813399e-05,5.58340813399e-05,0.000111668421653,-0.000489389952531,7.53671420472e-05,7.53671420472e-05,-7.53671128334e-05,-7.53671128334e-05,0.000150734725115,0.000150734725115,-0.000228872678718,-0.000228872678718,-2.40037071676e-06,-2.40037071676e-06,2.40061090816e-06,2.40061090816e-06,-4.80033053179e-06,
  -4.80033053179e-06,-0.000196266582689,-0.000196266582689,0.000933667880254,-0.000933667892251,-0.00186733395853,0.000305764204817,-0.000152882650256,0.000152882647961,0.000152882647961,-0.000152882650256,0.000305764204817,-5.6717064189e-05,-5.6717064189e-05,5.67170594652e-05,5.67170594652e-05,-0.000113434033364,-0.000113434033364,0.000217267153232,-0.000217267157516,0.000434535333654,0.000310676901473,0.000310676901473,-0.000330789504772,0.000330789509472,-0.000661581984262,-0.000212171779119,0.000106085999739,-0.000106085996935,-0.000106085996935,0.000106085999739,-0.000212171779119,-0.000212171779119,0.000212171773991,-0.00042434361216,-0.000599781631205,-0.000599781631205,-0.000460130956047,-0.00113081719199,-0.00113081719199,-0.000242792651892,-0.000242792651892,-0.000225266200143,-0.000225266200143,0.000225266200049,0.000225266200049,-0.000450532322765,-0.000450532322765,0.00275827496456,-0.00275827496117,-7.18889751326e-05,-3.59445366892e-05,3.59445339695e-05,-3.59445366892e-05,3.59445339695e-05,7.18889816558e-05,7.18889816558e-05,-7.18889751326e-05,-0.000143777680837,-0.000195877924014,0.000195877918727,-0.000391755479788,-0.000320016158782,-0.000320016158782,-0.000688012067525,0.000688012066556,-0.00137602150094,-0.000762246962418,0.000381123639924,-0.000381123640355,-0.000381123640355,0.000381123639924,-0.000762246962418,0.000239945962589,-0.000239945980669,0.000479893106056,-0.000641315268944,-0.000641315268944,0.000907624430826,0.000907624430826,0.000209369936864,-0.000209369937606,-0.000418740159313,0.000426078285583,-0.000426078280471,0.000852154582128,0.000253977139197,0.000253977139197,4.08377903033e-05,4.08377903033e-05,-0.000290525381532,-0.000290525381532,-0.000100634511886,0.000100634514193,-0.000201270313155,-9.04764873994e-05,-9.04764873994e-05,9.04764795256e-05,9.04764795256e-05,-9.04764873994e-05,
  -9.04764873994e-05,-9.04764873994e-05,9.04764795256e-05,9.04764795256e-05,-0.000271430207191,0.00129219997909,0.00129219997909,0.00021405326114,0.00021405326114,-0.000429552541697,-0.000429552541697,5.65244840545e-05,5.65244840545e-05,-5.65244742828e-05,-5.65244742828e-05,0.000113049420094,0.000113049420094,-9.5864415843e-05,-9.5864415843e-05,-0.000290322058299,-0.000290322058299,-0.000580644630591,-0.000381875854902,-0.000381875854902,-0.000763752653498,0.000346499604964,0.00017324945919,-0.000173249459384,-0.000173249459384,0.00017324945919,0.000346499604964,-0.000183795645345,-0.000183795645345,0.000183795642202,-0.000183795645345,0.000183795642202,0.000183795642202,-0.000183795645345,0.000183795642202,0.000183795642202,0.00055139013857,0.000102772803842,-0.00010277280139,0.000205546221495,0.000239978677612,-0.000239978677535,-4.29248163458e-07,4.26851327341e-07,-8.56091319134e-07,-0.000121516662275,-6.07579793698e-05,6.07579879769e-05,6.07579879769e-05,-6.07579793698e-05,-0.000121516662275,0.00032989517713,0.00032989517713,0.00032989517713,0.00032989517713,8.12734961537e-05,-8.12734963605e-05,0.000162547206657,-9.67425501963e-05,-9.67425501963e-05,4.9802812097e-05,-2.49015589964e-05,2.49015445204e-05,2.49015445204e-05,-2.49015589964e-05,4.9802812097e-05,-0.00110563416527,-0.00110563416527,-0.000586092439938,-0.000586092439938,0.000586092440638,0.000586092440638,-0.00117218489923,-0.00117218489923,-0.000168642482729,0.00016864247764,-0.00033728335779,-0.000530843930503,-0.000530843930503,0.000530843933603,0.000530843933603,0.000204861716956,0.000204861716956,-0.000249892155582,-0.000249892155582,-0.000394312053687,0.000267891459082,0.000267891459082,-0.000267891458177,0.000267891459082,-0.000267891458177,-0.000267891458177,0.000267891459082,-0.000267891458177,-0.000267891458177,-0.000803674280302,
  0.000167584490678,0.000167584490678,0.000756786533332,0.000756786533332,3.54369418307e-05,3.54369418307e-05,7.08737797015e-05,0.000244828166456,0.000244828166456,0.000990878810642,0.000990878810642,-0.000307428162821,-0.000307428162821,9.20903066208e-05,9.20903066208e-05,-9.20902993329e-05,-9.20902993329e-05,0.00018418169677,0.00018418169677,-0.000246600452618,-0.000123300314525,0.000123300315317,-0.000123300314525,0.000123300315317,0.000246600450908,0.000246600450908,-0.000246600452618,-0.000493201038574,0.000634085819995,0.000634085819995,0.000634085819995,0.000634085819995,-0.000159576307524,-0.000159576307524,0.00102911347828,0.00102911347828,-0.000421389863933,0.000210695593422,-0.000210695591275,0.000210695593422,-0.000210695591275,0.000421389869767,0.000421389869767,-0.000421389863933,0.000842780714626,-0.000345857555416,-9.18304856219e-06,-4.59128857893e-06,4.59102058627e-06,4.59102058627e-06,-4.59128857893e-06,-9.18304856219e-06,-0.000115327703517,-0.000115327703517,-0.000681745767462,-0.000681745767462,-0.000143028676505,-0.000143028676505,-0.000106094435703,-0.000106094435703,0.000106094436103,0.000106094436103,-0.000212188362484,-0.000212188362484,-0.000143505171425,-6.64693601685e-07,3.3088089435e-07,-3.33382107032e-07,3.3088089435e-07,-3.33382107032e-07,6.63108324916e-07,6.63108324916e-07,-6.64693601685e-07,1.32660588248e-06,-0.00119497132054,-0.000286075168987,0.000143037813748,-0.000143037813586,-0.000143037813586,0.000143037813748,-0.000286075168987,-0.00127632589434,0.00127632588421,-0.00255265767653,0.00228094704301,-3.83390447056e-05,-3.83390447056e-05,-5.45061803198e-05,5.45061895832e-05,0.000109014240211,-0.00079995111351,0.000461216639051,0.000461216639051,0.000461216639051,0.000461216639051,0.000167529092845,0.000167529092845,0.00102377140372,-9.84803086324e-05,-9.84803086324e-05,
  0.000329971425939,0.000329971425939,-0.000329971426532,-0.000329971426532,0.000659943744358,0.000659943744358,-0.00204120014088,-0.00204120014088,-5.65670202499e-05,-2.82836965997e-05,2.82836981975e-05,-2.82836965997e-05,2.82836981975e-05,5.65670112965e-05,5.65670112965e-05,-5.65670202499e-05,-0.000113134392836,-8.3704764839e-05,-8.3704764839e-05,-0.000167410088587,-0.000216924460165,-0.000216924460165,0.000216924464493,0.000216924464493,0.000433849681399,0.000433849681399,-0.000160416181379,-0.000160416181379,0.000133309374398,6.66547848967e-05,-6.66547870177e-05,6.66547848967e-05,-6.66547870177e-05,-0.000133309381318,-0.000133309381318,0.000133309374398,0.000266618071298,-0.000145622266882,-0.000145622266882,0.0001456222672,0.0001456222672,-0.000291244163615,-0.000291244163615,-0.00172624721545,-0.00172624721545,0.000215823024592,-3.63454899827e-05,3.63455035201e-05,-7.26907889043e-05,-0.000210464978429,-0.000210464978429,0.000285091878354,0.000285091878354,0.000402732856861,0.000402732856861,-0.000125799138443,-0.000125799138443,-0.000251597859228,0.000118789937413,0.000118789937413,-0.000820463764922,-0.000820463764922,0.000316298694038,0.000316298694038,0.000557005949809,0.000557005949809,-0.000185056821894,-0.000185056821894,-0.000451356225682,-4.28153969307e-05,2.14081686334e-05,-2.14081725815e-05,2.14081686334e-05,-2.14081725815e-05,4.28154035217e-05,-4.28153969307e-05,4.28154035217e-05,-8.56297576532e-05,-6.18643683375e-05,6.18643539504e-05,-0.000123729149064,7.01255608617e-05,-7.01255582448e-05,0.000140250480633,-0.00120761462387,0.000603808810725,-0.000603808812254,0.000603808810725,-0.000603808812254,0.00120761462603,-0.00120761462387,0.00120761462603,-0.00241523206261,-7.89929527e-05,-7.89929527e-05,0.000246379748019,-0.000123190105617,0.000123190113511,-0.000123190105617,0.000123190113511,
  -0.000246379727778,0.000261818457702,0.000261818457702,0.000438660833039,0.000438660833039,-0.00184034200397,-0.00184034200397,-0.00368069494511,0.000363054501582,-0.000363054508318,0.000726109523089,5.73422735938e-05,2.86716733908e-05,-2.86716691045e-05,2.86716733908e-05,-2.86716691045e-05,-5.73423695371e-05,-5.73423695371e-05,5.73422735938e-05,0.000114684934494,0.000196848940064,0.000196848940064,0.000590362101313,0.000590362101313,-0.000590362101484,-0.000590362101484,-0.0011807246696,-0.0011807246696,-0.000170673594371,8.53374734364e-05,-8.53374808349e-05,8.53374734364e-05,-8.53374808349e-05,0.00017067359902,-0.000170673594371,0.00017067359902,-0.00034134809785,-0.000133748661942,-0.000133748661942,-0.000133748661942,-0.000133748661942,-0.000214724034185,0.000214724034911,0.000429448726796,-0.00264500895375,-0.00264500895375,0.000258564624833,-0.000258564614183,-0.000156957265113,0.00015695726393,-0.00031391471501,0.000182910618955,0.000182910618955,-0.000182910619525,-0.000182910619525,0.000365821144003,0.000365821144003,0.00107672315536,0.00053836163398,-0.000538361642301,-0.000538361642301,0.00053836163398,0.00107672315536,-0.000313930385793,-0.000156965019507,0.000156965022013,0.000156965022013,-0.000156965019507,-0.000313930385793,0.000526200014669,0.000526200014669,-0.000378411991929,0.000378412021981,0.000756825028458,-0.000618479182684,-0.000618479182684,-0.000618479182684,-0.000618479182684,-0.000307820968124,0.000153909566684,-0.000153909573928,-0.000153909573928,0.000153909566684,-0.000307820968124,0.000904443975674,0.000904443975674,-0.000131736955622,-0.000131736955622,0.000131736959054,0.000131736959054,-0.00026347347832,-0.00026347347832,-0.00067298126304,-0.00164317345034,-0.00164317345034,0.000555911032828,0.000555911032828,1.32609564805e-05,-6.63042053023e-06,6.63041978733e-06,
  -6.63042053023e-06,6.63041978733e-06,-1.32610045047e-05,1.32609564805e-05,-1.32610045047e-05,2.65214355393e-05,-7.99857229273e-05,-7.99857229273e-05,7.99857183519e-05,7.99857183519e-05,-0.000159971520846,-0.000159971520846,-8.57603515287e-05,-8.57603515287e-05,0.00360327408553,-0.00019224647903,-0.00019224647903,-0.00019224647903,-0.00019224647903,0.000272734706395,0.000272734706395,-0.000272734707204,-0.000272734707204,0.000545471447695,0.000545471447695,0.0001216083574,6.0804021907e-05,-6.08040071194e-05,-6.08040071194e-05,6.0804021907e-05,0.0001216083574,-0.000457968693902,-2.16100254048e-05,2.16100243585e-05,-4.32209506832e-05,0.000151700500922,-0.000151700498914,-0.000303401457006,0.000244113874743,-0.000122057190837,0.000122057194118,-0.000122057190837,0.000122057194118,-0.000244113879809,-0.000244113879809,0.000244113874743,-0.00048822628426,0.000506639097083,0.000506639097083,0.000506639097083,0.000506639097083,-0.00033366645248,0.000333666453393,-0.00033366645248,0.000333666453393,-0.00033366645248,0.000333666453393,0.000333666453393,-0.00033366645248,0.000333666453393,0.00100100065158,0.00048928782193,0.00048928782193,0.000768961104574,0.000768961104574,0.000384272331671,0.000192137252077,-0.000192137252357,-0.000192137252357,0.000192137252077,0.000384272331671,0.000326982436002,0.000326982436002,-0.000326982436195,-0.000326982436195,0.000653964721632,0.000653964721632,-6.88594873281e-05,3.4429636404e-05,-3.44296295044e-05,-3.44296295044e-05,3.4429636404e-05,-6.88594873281e-05,0.000437620500285,0.000437620500285,9.54885023184e-05,9.54885023184e-05,9.54885023184e-05,9.54885023184e-05,0.00220569331418,-0.00110285114875,0.00110285115242,-0.00110285114875,0.00110285115242,-0.00220569330871,0.00220569331418,-0.00220569330871,0.00441139720395,-0.00130333460737,0.000656516613016,
  0.000656516613016,4.83081818258e-05,4.83081818258e-05,4.83081818258e-05,4.83081818258e-05,0.000413682133368,0.000413682133368,-0.000413682135687,-0.000413682135687,0.000827364027539,0.000827364027539,0.000184397047455,-0.000184397034428,0.0012947775679,-0.00129477756893,-5.22902523257e-05,-5.22902523257e-05,-0.000154048987926,-0.000154048987926,-0.000266469318213,-0.000266469318213,0.000266469310406,0.000266469310406,-0.000532940130285,-0.000532940130285,-0.000143034591977,7.1517213293e-05,7.1517213293e-05,-7.15172126115e-05,-7.15172126115e-05,0.00014303458334,-0.000316940334934,-0.000158470626621,0.000158470629136,0.000158470629136,-0.000158470626621,-0.000316940334934,-2.70322301437e-05,2.70322309211e-05,-5.40647892916e-05,-0.000461333562459,-0.000230666926841,0.0002306669289,0.0002306669289,-0.000230666926841,-0.000461333562459,-0.00117400995061,-0.00117400995061,-1.44075289511e-05,-7.20379688466e-06,7.20379256299e-06,7.20379256299e-06,-7.20379688466e-06,-1.44075289511e-05,0.000150331568478,0.000150331568478,0.000584667308104,0.000584667308104,0.0004448194612,-0.000444819464178,-0.000889639923738,0.000273058676657,0.000236909873331,0.000236909873331,0.000473819951202,0.00155515065122,0.00155515065122,0.000100678152762,5.03392412605e-05,-5.03392375704e-05,5.03392412605e-05,-5.03392375704e-05,-0.000100678164325,-0.000100678164325,0.000100678152762,0.000201356488946,8.36182667836e-05,-8.36182614354e-05,0.000167236515727,0.000870261980196,-0.000870261981796,-0.00174051958761,4.23929854199e-06,-4.24179975478e-06,8.47836381634e-06,-0.000591878979,-0.000591878979,0.000420330450853,0.000420330450853,0.000420330450853,0.000420330450853,-0.000819048023782,-0.00194169225065,-0.00097084725891,0.000970847258368,0.000970847258368,-0.00097084725891,-0.00194169225065,0.000139857254709,6.99289038417e-05,
  -6.99289033264e-05,6.99289038417e-05,-6.99289033264e-05,-0.000139857259278,-0.000139857259278,0.000139857254709,0.000279715252421,-0.000307634536862,-0.00015381722173,0.000153817224525,0.000153817224525,-0.00015381722173,-0.000307634536862,-0.00154179675315,-0.00154179675315,-0.000633079665097,-0.000633079665097,-0.000633079665097,-0.000633079665097,0.000123700267157,0.000123700267157,0.000556628675243,0.000556628675243,0.000556628675243,0.000556628675243,-7.90000073193e-07,-7.90000073193e-07,-7.90000073193e-07,-7.90000073193e-07,-6.07182258243e-05,-6.07182258243e-05,-6.07182258243e-05,-6.07182258243e-05,-0.000121435923087,-0.000121435923087,0.000374330874472,0.000374330874472,-0.000333694500768,-0.000166847667033,0.000166847663146,-0.000166847667033,0.000166847663146,0.0003336944995,0.0003336944995,-0.000333694500768,-0.000667394144713,0.000318465104901,0.000318465104901,-0.00031846510475,-0.00031846510475,0.000636930223057,0.000636930223057,6.12567737027e-06,6.12567737027e-06,-0.000199140908998,-0.000199140908998,0.000199140913949,0.000199140913949,0.00039828205304,0.00039828205304,0.000409938419015,-0.000409938416351,-0.000819879026124,-0.000418689688667,-0.000418689688667,-9.45586075949e-05,-4.7279253207e-05,4.72792544569e-05,4.72792544569e-05,-4.7279253207e-05,-9.45586075949e-05,-0.000409475332639,-0.000409475332639,6.19052007481e-06,6.19052007481e-06,-6.19047323094e-06,6.19052007481e-06,-6.19047323094e-06,-6.19047323094e-06,6.19052007481e-06,-6.19047323094e-06,-6.19047323094e-06,-1.85718466344e-05,-0.000710254454914,0.000710254458822,0.0014205116196,0.000210099709757,0.000210099709757,-0.000210099710359,-0.000210099710359,0.000420199110952,0.000420199110952,0.0216736302038,-0.0216736301893,-0.000143802757245,7.19015692738e-05,-7.19015684399e-05,7.19015692738e-05,-7.19015684399e-05,0.000143802753363,
  0.000143802753363,-0.000143802757245,0.000287604899263,-0.000136411056741,0.000136411058921,-0.000272823101032,-0.000224523706222,-6.60521779626e-05,-6.60521779626e-05,-6.60521779626e-05,-6.60521779626e-05,-0.000497480928478,0.000118205326044,0.000118205326044,0.00182230337444,0.000911151455572,-0.000911151457203,-0.000911151457203,0.000911151455572,0.00182230337444,-8.57977413107e-05,-8.57977413107e-05,0.000491603372538,0.000491603372538,-0.000185880627734,0.000185880615986,0.000371762283766,0.00106162596012,-0.00106162595878,0.00212325544867,0.000258544371261,0.000258544371261,0.000517087684114,-0.000839826419757,-0.000839826419757,-0.000118809150632,-0.000118809150632,8.91382990343e-0
};

  vector<RealType> slope(myslope,myslope+sizeof(myslope)/sizeof(RealType));

  // C contains current coefficients
  // CSFcoeff initialized with original coefficients in MultiSlaterDeterminantFast constructor
    // - this should work for restart since original C are always read from input ptcl.xml
  vector<RealType>::iterator it(C.begin()),last(C.end());
  vector<RealType>::iterator original_it(originalC.begin()),original_last(originalC.end());
  vector<RealType>::iterator slope_it(slope.begin()),slope_last(slope.end());
  while(it != last){ // linear interpolation
    // Ci(R)=dCi/dR*(R-Ro)+Ci(Ro)
    (*it)=(*slope_it)*RminusRo+(*original_it); 
    it++; slope_it++; original_it++;
  }
}
OrbitalBase::ValueType MultiSlaterDeterminantFast::evaluate(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  EvaluateTimer.start();
  //for(int i=0; i<Dets.size(); i++)
  //  Dets[i]->evaluateForWalkerMove(P);
  Dets[0]->evaluateForWalkerMove(P);
  Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  //int idx=0; // !!!!!!!! debuging coefficient interpolation
  while(it != last)
  {
    /*if (idx<3){
      cout << idx << ": " << (*it) << endl;
    }
    idx++;
    */
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  EvaluateTimer.stop();
  return psiCurrent;
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P
    , ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)
{
  ValueType psi = evaluate(P,G,L);
  return LogValue = evaluateLogAndPhase(psi,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,
    ParticleSet::ParticleGradient_t& G,
    ParticleSet::ParticleLaplacian_t& L,
    PooledData<RealType>& buf,
    bool fillBuffer )
{
  if(fillBuffer)
  {
    Dets[0]->evaluateForWalkerMove(P);
    Dets[0]->copyToDerivativeBuffer(P,buf);
    Dets[1]->evaluateForWalkerMove(P);
    Dets[1]->copyToDerivativeBuffer(P,buf);
  }
  else
  {
    Dets[0]->copyFromDerivativeBuffer(P,buf);
    Dets[1]->copyFromDerivativeBuffer(P,buf);
  }
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  G += myG;
  for(int i=0; i<L.size(); i++)
    L(i) += myL[i] - dot(myG[i],myG[i]);
  return evaluateLogAndPhase(psiCurrent,PhaseValue);
}


OrbitalBase::GradType MultiSlaterDeterminantFast::evalGrad(ParticleSet& P, int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: evalGrad not implemented. \n");
  }
  GradType grad_iat;
  if(DetID[iat] == 0)
  {
    Dets[0]->evaluateGrads(P,iat);
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    int N1 = Dets[0]->FirstIndex;
    ValueType psi=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
  else
  {
    Dets[1]->evaluateGrads(P,iat);
    ValueType psi=0.0;
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
    {
      psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      grad_iat += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat *= 1.0/psi;
    return grad_iat;
  }
}

OrbitalBase::ValueType MultiSlaterDeterminantFast::ratioGrad(ParticleSet& P
    , int iat, GradType& grad_iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratioGrad not implemented. \n");
  }
  UpdateMode=ORB_PBYP_PARTIAL;
  if(DetID[iat] == 0)
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[0]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    int N1 = Dets[0]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    it=C.begin();
    last=C.end();
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_up(*upC,iat-N1)*detValues_dn[*dnC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
  else
  {
    RatioGradTimer.start();
    Ratio1GradTimer.start();
    Dets[1]->evaluateDetsAndGradsForPtclMove(P,iat);
    Ratio1GradTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    int N2 = Dets[1]->FirstIndex;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    ValueType psiNew=0.0;
    GradType dummy;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      dummy += (*it)*grads_dn(*dnC,iat-N2)*detValues_up[*upC];
      it++;
      upC++;
      dnC++;
    }
    grad_iat+=dummy/psiNew;
    curRatio = psiNew/psiCurrent;
    RatioGradTimer.stop();
    return curRatio;
  }
}


// This routine need work, sloppy for now
OrbitalBase::ValueType  MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat
    , ParticleSet::ParticleGradient_t& dG,ParticleSet::ParticleLaplacian_t& dL)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio(P,dG,dL) not implemented. \n");
  }
  UpdateMode=ORB_PBYP_ALL;
  if(DetID[iat] == 0)
  {
    RatioAllTimer.start();
    /*
          P.acceptMove(iat);
          Dets[0]->evaluateForWalkerMove(P);
          ValueVector_t& detValues_up = Dets[0]->detValues;
          ValueVector_t& detValues_dn = Dets[1]->detValues;
          GradMatrix_t& grads_up = Dets[0]->grads;
          GradMatrix_t& grads_dn = Dets[1]->grads;
          ValueMatrix_t& lapls_up = Dets[0]->lapls;
          ValueMatrix_t& lapls_dn = Dets[1]->lapls;
    */
//*
    Ratio1AllTimer.start();
    Dets[0]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    GradMatrix_t& grads_up = Dets[0]->new_grads;
    GradMatrix_t& grads_dn = Dets[1]->grads;
    ValueMatrix_t& lapls_up = Dets[0]->new_lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->lapls;
//*/
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
  else
  {
    RatioAllTimer.start();
    Ratio1AllTimer.start();
    Dets[1]->evaluateAllForPtclMove(P,iat);
    Ratio1AllTimer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    GradMatrix_t& grads_up = Dets[0]->grads;
    GradMatrix_t& grads_dn = Dets[1]->new_grads;
    ValueMatrix_t& lapls_up = Dets[0]->lapls;
    ValueMatrix_t& lapls_dn = Dets[1]->new_lapls;
    int N1 = Dets[0]->FirstIndex;
    int N2 = Dets[1]->FirstIndex;
    int NP1 = Dets[0]->NumPtcls;
    int NP2 = Dets[1]->NumPtcls;
    ValueType psiNew=0.0;
    // myG,myL should contain current grad and lapl
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    myG_temp=0.0;
    myL_temp=0.0;
    while(it != last)
    {
      psiNew += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
      for(int k=0,n=N1; k<NP1; k++,n++)
      {
        myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
        myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
      }
      for(int k=0,n=N2; k<NP2; k++,n++)
      {
        myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
        myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
      }
      it++;
      upC++;
      dnC++;
    }
    ValueType psiNinv=1.0/psiNew;
    myG_temp *= psiNinv;
    myL_temp *= psiNinv;
    dG += myG_temp-myG;
    for(int i=0; i<dL.size(); i++)
      dL(i) += myL_temp[i] - myL[i] - dot(myG_temp[i],myG_temp[i]) + dot(myG[i],myG[i]);
    curRatio = psiNew/psiCurrent;
    RatioAllTimer.stop();
    return curRatio;
  }
}

// use ci_node for this routine only
OrbitalBase::ValueType MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat)
{
// debug
//    testMSD(P,iat);
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: ratio not implemented. \n");
  }
  UpdateMode=ORB_PBYP_RATIO;
  if(DetID[iat] == 0)
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[0]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->new_detValues;
    ValueVector_t& detValues_dn = Dets[1]->detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
  else
  {
    RatioTimer.start();
    Ratio1Timer.start();
    Dets[1]->evaluateDetsForPtclMove(P,iat);
    Ratio1Timer.stop();
    ValueVector_t& detValues_up = Dets[0]->detValues;
    ValueVector_t& detValues_dn = Dets[1]->new_detValues;
    ValueType psiNew=0.0;
    vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
    vector<RealType>::iterator it(C.begin()),last(C.end());
    while(it != last)
      psiNew += (*(it++))*detValues_up[*(upC++)]*detValues_dn[*(dnC++)];
    curRatio = psiNew/psiCurrent;
    RatioTimer.stop();
    return curRatio;
  }
}

void MultiSlaterDeterminantFast::acceptMove(ParticleSet& P, int iat)
{
// this should depend on the type of update, ratio / ratioGrad
// for now is incorrect fot ratio(P,iat,dG,dL) updates
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: acceptMove not implemented. \n");
  }
// update psiCurrent,myG_temp,myL_temp
  AccRejTimer.start();
  psiCurrent *= curRatio;
  curRatio=1.0;
  Dets[DetID[iat]]->acceptMove(P,iat);
  switch(UpdateMode)
  {
  case ORB_PBYP_ALL:
    // ratio(P,iat,dG,dL)
    myG = myG_temp;
    myL = myL_temp;
    break;
  default:
    break;
  }
  AccRejTimer.stop();
//    Dets[0]->evaluateForWalkerMove(P);
//    Dets[1]->evaluateForWalkerMove(P);
  // can this change over time??? I don't know yet
  /*
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;

      ValueType psi=0.0;
      myG_temp=0.0;
      myL_temp=0.0;
      vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
      vector<RealType>::iterator it(C.begin()),last(C.end());
      while(it != last) {
        psi += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
        for(int k=0,n=N1; k<NP1; k++,n++) {
          myG_temp(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
          myL_temp(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
        }
        for(int k=0,n=N2; k<NP2; k++,n++) {
          myG_temp(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
          myL_temp(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
        }
        it++;upC++;dnC++;
      }
      ValueType psiinv = 1.0/psi;
      myG_temp *= psiinv;
      myL_temp *= psiinv;
  */
}

void MultiSlaterDeterminantFast::restore(int iat)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  AccRejTimer.start();
  Dets[DetID[iat]]->restore(iat);
  curRatio=1.0;
  AccRejTimer.stop();
}

void MultiSlaterDeterminantFast::update(ParticleSet& P
                                        , ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL
                                        , int iat)
{
  APP_ABORT("IMPLEMENT MultiSlaterDeterminantFast::update");
}

OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,BufferType& buf)
{
  Dets[0]->evaluateLog(P,buf);
  Dets[1]->evaluateLog(P,buf);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

OrbitalBase::RealType MultiSlaterDeterminantFast::registerData(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: restore not implemented. \n");
  }
  Dets[0]->registerData(P,buf);
  Dets[1]->registerData(P,buf);
  LogValue = evaluateLog(P,P.G,P.L);
  FirstAddressOfG = &myG[0][0];
  LastAddressOfG = FirstAddressOfG + P.getTotalNum()*DIM;
  buf.add(psiCurrent);
  buf.add(myL.first_address(), myL.last_address());
  buf.add(FirstAddressOfG,LastAddressOfG);
// debug, erase
//    msd->registerData(P,buf);
  return LogValue;
}

// this routine does not initialize the data, just reserves the space
void MultiSlaterDeterminantFast::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: registerDataForDerivatives not implemented. \n");
  }
  Dets[0]->registerDataForDerivatives(P,buf,storageType);
  Dets[1]->registerDataForDerivatives(P,buf,storageType);
}

// FIX FIX FIX
OrbitalBase::RealType MultiSlaterDeterminantFast::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)
{
  UpdateTimer.start();
  Dets[0]->updateBuffer(P,buf,fromscratch);
  Dets[1]->updateBuffer(P,buf,fromscratch);
  //Dets[0]->updateBuffer(P,buf,true);
  //Dets[1]->updateBuffer(P,buf,true);
  // can this change over time??? I don't know yet
  ValueVector_t& detValues_up = Dets[0]->detValues;
  ValueVector_t& detValues_dn = Dets[1]->detValues;
  GradMatrix_t& grads_up = Dets[0]->grads;
  GradMatrix_t& grads_dn = Dets[1]->grads;
  ValueMatrix_t& lapls_up = Dets[0]->lapls;
  ValueMatrix_t& lapls_dn = Dets[1]->lapls;
  int N1 = Dets[0]->FirstIndex;
  int N2 = Dets[1]->FirstIndex;
  int NP1 = Dets[0]->NumPtcls;
  int NP2 = Dets[1]->NumPtcls;
  psiCurrent=0.0;
  myG=0.0;
  myL=0.0;
  vector<int>::iterator upC(C2node_up.begin()),dnC(C2node_dn.begin());
  vector<RealType>::iterator it(C.begin()),last(C.end());
  while(it != last)
  {
    psiCurrent += (*it)*detValues_up[*upC]*detValues_dn[*dnC];
    for(int k=0,n=N1; k<NP1; k++,n++)
    {
      myG(n) += (*it)*grads_up(*upC,k)*detValues_dn[*dnC];
      myL(n) += (*it)*lapls_up(*upC,k)*detValues_dn[*dnC];
    }
    for(int k=0,n=N2; k<NP2; k++,n++)
    {
      myG(n) += (*it)*grads_dn(*dnC,k)*detValues_up[*upC];
      myL(n) += (*it)*lapls_dn(*dnC,k)*detValues_up[*upC];
    }
    it++;
    upC++;
    dnC++;
  }
  ValueType psiinv = 1.0/psiCurrent;
  myG *= psiinv;
  myL *= psiinv;
  P.G += myG;
  for(int i=0; i<P.L.size(); i++)
    P.L(i) += myL[i] - dot(myG[i],myG[i]);
  buf.put(psiCurrent);
  buf.put(myL.first_address(), myL.last_address());
  buf.put(FirstAddressOfG,LastAddressOfG);
  UpdateTimer.stop();
  return LogValue = evaluateLogAndPhase(psiCurrent,PhaseValue);
}

void MultiSlaterDeterminantFast::copyFromBuffer(ParticleSet& P, BufferType& buf)
{
  if(usingBF)
  {
    APP_ABORT("Fast MSD+BF: copyFromBuffer not implemented. \n");
  }
  Dets[0]->copyFromBuffer(P,buf);
  Dets[1]->copyFromBuffer(P,buf);
  buf.get(psiCurrent);
  buf.get(myL.first_address(), myL.last_address());
  buf.get(FirstAddressOfG,LastAddressOfG);
}


void MultiSlaterDeterminantFast::checkInVariables(opt_variables_type& active)
{
  if(Optimizable)
  {
    if(myVars.size())
      active.insertFrom(myVars);
    else
      Optimizable=false;
  }
}

void MultiSlaterDeterminantFast::checkOutVariables(const opt_variables_type& active)
{
  if(Optimizable)
    myVars.getIndex(active);
}

/** resetParameters with optVariables
 *
 * USE_resetParameters
 */
void MultiSlaterDeterminantFast::resetParameters(const opt_variables_type& active)
{
  if(Optimizable)
  {
    if(usingCSF)
    {
      for(int i=0; i<CSFcoeff.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          CSFcoeff[i+1]=myVars[i]=active[loc];
      }
      int cnt=0;
      for(int i=0; i<DetsPerCSF.size(); i++)
      {
        for(int k=0; k<DetsPerCSF[i]; k++)
        {
          C[cnt] = CSFcoeff[i]*CSFexpansion[cnt];
          cnt++;
        }
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
    else
    {
      for(int i=0; i<C.size()-1; i++)
      {
        int loc=myVars.where(i);
        if(loc>=0)
          C[i+1]=myVars[i]=active[loc];
      }
      //for(int i=0; i<Dets.size(); i++) Dets[i]->resetParameters(active);
    }
  }
}
void MultiSlaterDeterminantFast::reportStatus(ostream& os)
{
}

//   OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const
//   {
//      APP_ABORT("IMPLEMENT OrbitalBase::makeClone");
//      return 0;
//   }

void MultiSlaterDeterminantFast::evaluateDerivatives(ParticleSet& P,
    const opt_variables_type& optvars,
    vector<RealType>& dlogpsi,
    vector<RealType>& dhpsioverpsi)
{
  bool recalculate(false);
  for (int k=0; k<myVars.size(); ++k)
  {
    int kk=myVars.where(k);
    if (kk<0)
      continue;
    if (optvars.recompute(kk))
      recalculate=true;
  }
// need to modify for CSF later on, right now assume Slater Det basis
  if (recalculate)
  {
    if(usingCSF)
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
// myG,myL should already be calculated
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
//       for(int i=0; i<C.size(); i++){
      num=CSFcoeff.size()-1;
      int cnt=0;
//        this one is not optable
      cnt+=DetsPerCSF[0];
      int ip(1);
      for(int i=0; i<num; i++,ip++)
      {
        int kk=myVars.where(i);
        if (kk<0)
        {
          cnt+=DetsPerCSF[ip];
          continue;
        }
        ValueType cdet=0.0,q0=0.0,v1=0.0,v2=0.0;
        for(int k=0; k<DetsPerCSF[ip]; k++)
        {
          int upC = C2node_up[cnt];
          int dnC = C2node_dn[cnt];
          ValueType tmp1=CSFexpansion[cnt]*detValues_dn[dnC]*psiinv;
          ValueType tmp2=CSFexpansion[cnt]*detValues_up[upC]*psiinv;
          cdet+=CSFexpansion[cnt]*detValues_up[upC]*detValues_dn[dnC]*psiinv;
          q0 += (tmp1*laplSum_up[upC] + tmp2*laplSum_dn[dnC]);
          for(int l=0,j=N1; l<NP1; l++,j++)
            v1 += tmp1*(dot(P.G[j],grads_up(upC,l))-dot(myG_temp[j],grads_up(upC,l)) );
          for(int l=0,j=N2; l<NP2; l++,j++)
            v2 += tmp2*(dot(P.G[j],grads_dn(dnC,l))-dot(myG_temp[j],grads_dn(dnC,l)));
          cnt++;
        }
        convert(cdet,dlogpsi[kk]);
        ValueType dhpsi =  -0.5*(q0-cdet*lapl_sum)
                           -cdet*gg-v1-v2;
        //ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
        //                         -cdet*lapl_sum)
        //                   -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    }
    else
      //usingCSF
    {
      if(laplSum_up.size() == 0)
        laplSum_up.resize(Dets[0]->detValues.size());
      if(laplSum_dn.size() == 0)
        laplSum_dn.resize(Dets[1]->detValues.size());
      // assume that evaluateLog has been called in opt routine before
      //   Dets[0]->evaluateForWalkerMove(P);
      //   Dets[1]->evaluateForWalkerMove(P);
      ValueVector_t& detValues_up = Dets[0]->detValues;
      ValueVector_t& detValues_dn = Dets[1]->detValues;
      GradMatrix_t& grads_up = Dets[0]->grads;
      GradMatrix_t& grads_dn = Dets[1]->grads;
      ValueMatrix_t& lapls_up = Dets[0]->lapls;
      ValueMatrix_t& lapls_dn = Dets[1]->lapls;
      int N1 = Dets[0]->FirstIndex;
      int N2 = Dets[1]->FirstIndex;
      int NP1 = Dets[0]->NumPtcls;
      int NP2 = Dets[1]->NumPtcls;
      int n = P.getTotalNum();
      ValueType psiinv = 1.0/psiCurrent;
      ValueType lapl_sum=0.0;
      ValueType gg=0.0, ggP=0.0;
      myG_temp=0.0;
      int num=laplSum_up.size();
      ValueVector_t::iterator it(laplSum_up.begin());
      ValueVector_t::iterator last(laplSum_up.end());
      ValueType* ptr0 = lapls_up[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_up; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      it=laplSum_dn.begin();
      last=laplSum_dn.end();
      ptr0 = lapls_dn[0];
      while(it != last)
      {
        (*it)=0.0;
        for(int k=0; k<nels_dn; k++,ptr0++)
          (*it) += *ptr0;
        it++;
      }
      for(int i=0; i<C.size(); i++)
      {
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType tmp1 = C[i]*detValues_dn[dnC]*psiinv;
        ValueType tmp2 = C[i]*detValues_up[upC]*psiinv;
        lapl_sum += tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC];
        for(int k=0,j=N1; k<NP1; k++,j++)
          myG_temp[j] += tmp1*grads_up(upC,k);
        for(int k=0,j=N2; k<NP2; k++,j++)
          myG_temp[j] += tmp2*grads_dn(dnC,k);
      }
      gg=ggP=0.0;
      for(int i=0; i<n; i++)
      {
        gg += dot(myG_temp[i],myG_temp[i])-dot(P.G[i],myG_temp[i]);
      }
      for(int i=1; i<C.size(); i++)
      {
        int kk=myVars.where(i-1);
        if (kk<0)
          continue;
        int upC = C2node_up[i];
        int dnC = C2node_dn[i];
        ValueType cdet=detValues_up[upC]*detValues_dn[dnC]*psiinv;
        ValueType tmp1=detValues_dn[dnC]*psiinv;
        ValueType tmp2=detValues_up[upC]*psiinv;
        convert(cdet,dlogpsi[kk]);
        ValueType v1=0.0,v2=0.0;
        for(int k=0,j=N1; k<NP1; k++,j++)
          v1 += (dot(P.G[j],grads_up(upC,k))-dot(myG_temp[j],grads_up(upC,k)) );
        for(int k=0,j=N2; k<NP2; k++,j++)
          v2 += (dot(P.G[j],grads_dn(dnC,k))-dot(myG_temp[j],grads_dn(dnC,k)));
        ValueType dhpsi =  -0.5*(tmp1*laplSum_up[upC]+tmp2*laplSum_dn[dnC]
                                 -cdet*lapl_sum)
                           -cdet*gg-(tmp1*v1+tmp2*v2);
        convert(dhpsi,dhpsioverpsi[kk]);
      }
    } // usingCSF
  }
}

void MultiSlaterDeterminantFast::registerTimers()
{
  RatioTimer.reset();
  RatioGradTimer.reset();
  RatioAllTimer.reset();
  Ratio1Timer.reset();
  Ratio1GradTimer.reset();
  Ratio1AllTimer.reset();
  UpdateTimer.reset();
  EvaluateTimer.reset();
  AccRejTimer.reset();
  TimerManager.addTimer (&RatioTimer);
  TimerManager.addTimer (&RatioGradTimer);
  TimerManager.addTimer (&RatioAllTimer);
  TimerManager.addTimer (&Ratio1Timer);
  TimerManager.addTimer (&Ratio1GradTimer);
  TimerManager.addTimer (&Ratio1AllTimer);
  TimerManager.addTimer (&UpdateTimer);
  TimerManager.addTimer (&EvaluateTimer);
  TimerManager.addTimer (&AccRejTimer);
}


}
/***************************************************************************
 * $RCSfile$   $Author: jnkim $
 * $Revision: 3416 $   $Date: 2008-12-07 11:34:49 -0600 (Sun, 07 Dec 2008) $
 * $Id: MultiSlaterDeterminantFast.cpp 3416 2008-12-07 17:34:49Z jnkim $
 ***************************************************************************/
